version: "3"
silent: true

tasks:
    # Generate JS API clients based on Swagger
    paths:
        env:
            DENO_TLS_CA_STORE: system
        vars:
            DEST: ./Ogma3/wwwroot/js/generated/
            URL: https://localhost:5001/swagger/
        cmds:
            - ogma-tool generate-paths {{.DEST}} --path.public="{{.URL}}public/swagger.json" --path.internal="{{.URL}}internal/swagger.json"

    # Generate preload code for fonts
    preloads:
        vars:
            SRC: ./Ogma3/wwwroot/fonts
            DEST: fonts
        cmds:
            - ogma-tool generate-preloads {{.SRC}} {{.DEST}}

    # Generate CSS import conde for fonts
    imports:
        vars:
            SRC: ./Ogma3/wwwroot/fonts
            DEST: fonts
        cmds:
            - ogma-tool generate-imports {{.SRC}} {{.DEST}}

    # Check the size of the bundle
    bundlesize:
        vars:
            SRC: ./Ogma3/wwwroot/js/{dist,bundle}/*.js
        cmds:
            - ogma-tool bundlesize {{.SRC}}

    # Serve via Ngrok
    serve: ngrok http https://localhost:5001 -host-header="localhost:5001"

    # Serve via Cloudflare Tunnel (see Documentation/Testing/public-access.md)
    tunnel: cloudflared tunnel run genfic-beta

    tunnel-prod:
        cmds:
            - dotnet run -c release --project ./Ogma3/Ogma3.csproj --environment testing
            - task: tunnel

    # Get Lighthouse CLI score
    score: 
        cmds:
            - dotnet run -c release --project ./Ogma3/Ogma3.csproj --environment testing
            - lighthouse https://localhost:5001 --view


    # EF helpers
    db-migrate: dotnet ef migrations add --project ./Ogma3/Ogma3.csproj {{.CLI_ARGS}}
    db-up: dotnet ef database update --project ./Ogma3/Ogma3.csproj {{.CLI_ARGS}}
    db-compile: dotnet ef dbcontext optimize --project ./Ogma3/Ogma3.csproj --output-dir CompiledModels --namespace CompiledModels {{.CLI_ARGS}}
    db-all:
        cmds:
            - task: db-migrate
            - task: db-up
            - task: db-compile
