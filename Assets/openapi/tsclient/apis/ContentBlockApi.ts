/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CommandOfBlogpost,
    CommandOfBlogpostFromJSON,
    CommandOfBlogpostToJSON,
    CommandOfChapter,
    CommandOfChapterFromJSON,
    CommandOfChapterToJSON,
    CommandOfStory,
    CommandOfStoryFromJSON,
    CommandOfStoryToJSON,
    ProblemDetails,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
} from '../models';

export interface ContentBlockBlockBlogpostRequest {
    commandOfBlogpost: CommandOfBlogpost;
}

export interface ContentBlockBlockChapterRequest {
    commandOfChapter: CommandOfChapter;
}

export interface ContentBlockBlockStoryRequest {
    commandOfStory: CommandOfStory;
}

/**
 * 
 */
export class ContentBlockApi extends runtime.BaseAPI {

    /**
     */
    async contentBlockBlockBlogpostRaw(requestParameters: ContentBlockBlockBlogpostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.commandOfBlogpost === null || requestParameters.commandOfBlogpost === undefined) {
            throw new runtime.RequiredError('commandOfBlogpost','Required parameter requestParameters.commandOfBlogpost was null or undefined when calling contentBlockBlockBlogpost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/contentblock/blogpost`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CommandOfBlogpostToJSON(requestParameters.commandOfBlogpost),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async contentBlockBlockBlogpost(requestParameters: ContentBlockBlockBlogpostRequest, initOverrides?: RequestInit): Promise<void> {
        await this.contentBlockBlockBlogpostRaw(requestParameters, initOverrides);
    }

    /**
     */
    async contentBlockBlockChapterRaw(requestParameters: ContentBlockBlockChapterRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.commandOfChapter === null || requestParameters.commandOfChapter === undefined) {
            throw new runtime.RequiredError('commandOfChapter','Required parameter requestParameters.commandOfChapter was null or undefined when calling contentBlockBlockChapter.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/contentblock/chapter`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CommandOfChapterToJSON(requestParameters.commandOfChapter),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async contentBlockBlockChapter(requestParameters: ContentBlockBlockChapterRequest, initOverrides?: RequestInit): Promise<void> {
        await this.contentBlockBlockChapterRaw(requestParameters, initOverrides);
    }

    /**
     */
    async contentBlockBlockStoryRaw(requestParameters: ContentBlockBlockStoryRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.commandOfStory === null || requestParameters.commandOfStory === undefined) {
            throw new runtime.RequiredError('commandOfStory','Required parameter requestParameters.commandOfStory was null or undefined when calling contentBlockBlockStory.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/contentblock/story`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CommandOfStoryToJSON(requestParameters.commandOfStory),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async contentBlockBlockStory(requestParameters: ContentBlockBlockStoryRequest, initOverrides?: RequestInit): Promise<void> {
        await this.contentBlockBlockStoryRaw(requestParameters, initOverrides);
    }

}
