/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    InviteCodeDto,
    InviteCodeDtoFromJSON,
    InviteCodeDtoToJSON,
} from '../models';

export interface InviteCodesDeleteInviteCodeRequest {
    id: number;
}

export interface InviteCodesGetPaginatedInviteCodesRequest {
    page?: number;
    perPage?: number;
}

/**
 * 
 */
export class InviteCodesApi extends runtime.BaseAPI {

    /**
     */
    async inviteCodesDeleteInviteCodeRaw(requestParameters: InviteCodesDeleteInviteCodeRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<number>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling inviteCodesDeleteInviteCode.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/invitecodes/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    async inviteCodesDeleteInviteCode(requestParameters: InviteCodesDeleteInviteCodeRequest, initOverrides?: RequestInit): Promise<number> {
        const response = await this.inviteCodesDeleteInviteCodeRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async inviteCodesGetInviteCodesRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<InviteCodeDto>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/invitecodes`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(InviteCodeDtoFromJSON));
    }

    /**
     */
    async inviteCodesGetInviteCodes(initOverrides?: RequestInit): Promise<Array<InviteCodeDto>> {
        const response = await this.inviteCodesGetInviteCodesRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async inviteCodesGetPaginatedInviteCodesRaw(requestParameters: InviteCodesGetPaginatedInviteCodesRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<InviteCodeDto>>> {
        const queryParameters: any = {};

        if (requestParameters.page !== undefined) {
            queryParameters['Page'] = requestParameters.page;
        }

        if (requestParameters.perPage !== undefined) {
            queryParameters['PerPage'] = requestParameters.perPage;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/invitecodes/paginated`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(InviteCodeDtoFromJSON));
    }

    /**
     */
    async inviteCodesGetPaginatedInviteCodes(requestParameters: InviteCodesGetPaginatedInviteCodesRequest = {}, initOverrides?: RequestInit): Promise<Array<InviteCodeDto>> {
        const response = await this.inviteCodesGetPaginatedInviteCodesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async inviteCodesPostInviteCodeRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<InviteCodeDto>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/invitecodes`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InviteCodeDtoFromJSON(jsonValue));
    }

    /**
     */
    async inviteCodesPostInviteCode(initOverrides?: RequestInit): Promise<InviteCodeDto> {
        const response = await this.inviteCodesPostInviteCodeRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async inviteCodesPostInviteCodeNoLimitRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<InviteCodeDto>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/invitecodes/no-limit`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InviteCodeDtoFromJSON(jsonValue));
    }

    /**
     */
    async inviteCodesPostInviteCodeNoLimit(initOverrides?: RequestInit): Promise<InviteCodeDto> {
        const response = await this.inviteCodesPostInviteCodeNoLimitRaw(initOverrides);
        return await response.value();
    }

}
