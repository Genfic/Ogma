/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    JoinClubCommand,
    JoinClubCommandFromJSON,
    JoinClubCommandToJSON,
    LeaveClubCommand,
    LeaveClubCommandFromJSON,
    LeaveClubCommandToJSON,
} from '../models';

export interface ClubJoinCheckMembershipStatusRequest {
    club: number;
}

export interface ClubJoinJoinClubRequest {
    joinClubCommand: JoinClubCommand;
}

export interface ClubJoinLeaveClubRequest {
    leaveClubCommand: LeaveClubCommand;
}

/**
 * 
 */
export class ClubJoinApi extends runtime.BaseAPI {

    /**
     */
    async clubJoinCheckMembershipStatusRaw(requestParameters: ClubJoinCheckMembershipStatusRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<boolean>> {
        if (requestParameters.club === null || requestParameters.club === undefined) {
            throw new runtime.RequiredError('club','Required parameter requestParameters.club was null or undefined when calling clubJoinCheckMembershipStatus.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/clubjoin/{club}`.replace(`{${"club"}}`, encodeURIComponent(String(requestParameters.club))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    async clubJoinCheckMembershipStatus(requestParameters: ClubJoinCheckMembershipStatusRequest, initOverrides?: RequestInit): Promise<boolean> {
        const response = await this.clubJoinCheckMembershipStatusRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async clubJoinJoinClubRaw(requestParameters: ClubJoinJoinClubRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<boolean>> {
        if (requestParameters.joinClubCommand === null || requestParameters.joinClubCommand === undefined) {
            throw new runtime.RequiredError('joinClubCommand','Required parameter requestParameters.joinClubCommand was null or undefined when calling clubJoinJoinClub.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/clubjoin`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: JoinClubCommandToJSON(requestParameters.joinClubCommand),
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    async clubJoinJoinClub(requestParameters: ClubJoinJoinClubRequest, initOverrides?: RequestInit): Promise<boolean> {
        const response = await this.clubJoinJoinClubRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async clubJoinLeaveClubRaw(requestParameters: ClubJoinLeaveClubRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<boolean>> {
        if (requestParameters.leaveClubCommand === null || requestParameters.leaveClubCommand === undefined) {
            throw new runtime.RequiredError('leaveClubCommand','Required parameter requestParameters.leaveClubCommand was null or undefined when calling clubJoinLeaveClub.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/clubjoin`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
            body: LeaveClubCommandToJSON(requestParameters.leaveClubCommand),
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    async clubJoinLeaveClub(requestParameters: ClubJoinLeaveClubRequest, initOverrides?: RequestInit): Promise<boolean> {
        const response = await this.clubJoinLeaveClubRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
