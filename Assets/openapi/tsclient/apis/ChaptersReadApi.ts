/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    MarkChapterAsReadCommand,
    MarkChapterAsReadCommandFromJSON,
    MarkChapterAsReadCommandToJSON,
    MarkChapterAsReadResponse,
    MarkChapterAsReadResponseFromJSON,
    MarkChapterAsReadResponseToJSON,
    MarkChapterAsUnreadCommand,
    MarkChapterAsUnreadCommandFromJSON,
    MarkChapterAsUnreadCommandToJSON,
    MarkChapterAsUnreadResponse,
    MarkChapterAsUnreadResponseFromJSON,
    MarkChapterAsUnreadResponseToJSON,
} from '../models';

export interface ChaptersReadDeleteChaptersReadRequest {
    markChapterAsUnreadCommand: MarkChapterAsUnreadCommand;
}

export interface ChaptersReadGetChaptersReadRequest {
    story: number;
}

export interface ChaptersReadPostChaptersReadRequest {
    markChapterAsReadCommand: MarkChapterAsReadCommand;
}

/**
 * 
 */
export class ChaptersReadApi extends runtime.BaseAPI {

    /**
     */
    async chaptersReadDeleteChaptersReadRaw(requestParameters: ChaptersReadDeleteChaptersReadRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<MarkChapterAsUnreadResponse>> {
        if (requestParameters.markChapterAsUnreadCommand === null || requestParameters.markChapterAsUnreadCommand === undefined) {
            throw new runtime.RequiredError('markChapterAsUnreadCommand','Required parameter requestParameters.markChapterAsUnreadCommand was null or undefined when calling chaptersReadDeleteChaptersRead.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/chaptersread`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
            body: MarkChapterAsUnreadCommandToJSON(requestParameters.markChapterAsUnreadCommand),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MarkChapterAsUnreadResponseFromJSON(jsonValue));
    }

    /**
     */
    async chaptersReadDeleteChaptersRead(requestParameters: ChaptersReadDeleteChaptersReadRequest, initOverrides?: RequestInit): Promise<MarkChapterAsUnreadResponse> {
        const response = await this.chaptersReadDeleteChaptersReadRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async chaptersReadGetChaptersReadRaw(requestParameters: ChaptersReadGetChaptersReadRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<number>>> {
        if (requestParameters.story === null || requestParameters.story === undefined) {
            throw new runtime.RequiredError('story','Required parameter requestParameters.story was null or undefined when calling chaptersReadGetChaptersRead.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/chaptersread/{story}`.replace(`{${"story"}}`, encodeURIComponent(String(requestParameters.story))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async chaptersReadGetChaptersRead(requestParameters: ChaptersReadGetChaptersReadRequest, initOverrides?: RequestInit): Promise<Array<number>> {
        const response = await this.chaptersReadGetChaptersReadRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async chaptersReadPostChaptersReadRaw(requestParameters: ChaptersReadPostChaptersReadRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<MarkChapterAsReadResponse>> {
        if (requestParameters.markChapterAsReadCommand === null || requestParameters.markChapterAsReadCommand === undefined) {
            throw new runtime.RequiredError('markChapterAsReadCommand','Required parameter requestParameters.markChapterAsReadCommand was null or undefined when calling chaptersReadPostChaptersRead.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/chaptersread`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MarkChapterAsReadCommandToJSON(requestParameters.markChapterAsReadCommand),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MarkChapterAsReadResponseFromJSON(jsonValue));
    }

    /**
     */
    async chaptersReadPostChaptersRead(requestParameters: ChaptersReadPostChaptersReadRequest, initOverrides?: RequestInit): Promise<MarkChapterAsReadResponse> {
        const response = await this.chaptersReadPostChaptersReadRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
