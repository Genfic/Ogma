/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    IdentityUserRoleOfLong,
    IdentityUserRoleOfLongFromJSON,
    IdentityUserRoleOfLongFromJSONTyped,
    IdentityUserRoleOfLongToJSON,
} from './IdentityUserRoleOfLong';
import {
    OgmaRole,
    OgmaRoleFromJSON,
    OgmaRoleFromJSONTyped,
    OgmaRoleToJSON,
} from './OgmaRole';
import {
    OgmaUser,
    OgmaUserFromJSON,
    OgmaUserFromJSONTyped,
    OgmaUserToJSON,
} from './OgmaUser';
import {
    UserRoleAllOf,
    UserRoleAllOfFromJSON,
    UserRoleAllOfFromJSONTyped,
    UserRoleAllOfToJSON,
} from './UserRoleAllOf';

/**
 * 
 * @export
 * @interface UserRole
 */
export interface UserRole {
    /**
     * 
     * @type {number}
     * @memberof UserRole
     */
    userId?: number;
    /**
     * 
     * @type {number}
     * @memberof UserRole
     */
    roleId?: number;
    /**
     * 
     * @type {OgmaUser}
     * @memberof UserRole
     */
    user: OgmaUser;
    /**
     * 
     * @type {OgmaRole}
     * @memberof UserRole
     */
    role: OgmaRole;
}

export function UserRoleFromJSON(json: any): UserRole {
    return UserRoleFromJSONTyped(json, false);
}

export function UserRoleFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserRole {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'roleId': !exists(json, 'roleId') ? undefined : json['roleId'],
        'user': OgmaUserFromJSON(json['user']),
        'role': OgmaRoleFromJSON(json['role']),
    };
}

export function UserRoleToJSON(value?: UserRole | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userId': value.userId,
        'roleId': value.roleId,
        'user': OgmaUserToJSON(value.user),
        'role': OgmaRoleToJSON(value.role),
    };
}

