/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetPaginatedUserShelvesResult
 */
export interface GetPaginatedUserShelvesResult {
    /**
     * 
     * @type {number}
     * @memberof GetPaginatedUserShelvesResult
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof GetPaginatedUserShelvesResult
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GetPaginatedUserShelvesResult
     */
    color?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GetPaginatedUserShelvesResult
     */
    iconName?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof GetPaginatedUserShelvesResult
     */
    doesContainBook?: boolean;
}

export function GetPaginatedUserShelvesResultFromJSON(json: any): GetPaginatedUserShelvesResult {
    return GetPaginatedUserShelvesResultFromJSONTyped(json, false);
}

export function GetPaginatedUserShelvesResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetPaginatedUserShelvesResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'color': !exists(json, 'color') ? undefined : json['color'],
        'iconName': !exists(json, 'iconName') ? undefined : json['iconName'],
        'doesContainBook': !exists(json, 'doesContainBook') ? undefined : json['doesContainBook'],
    };
}

export function GetPaginatedUserShelvesResultToJSON(value?: GetPaginatedUserShelvesResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'color': value.color,
        'iconName': value.iconName,
        'doesContainBook': value.doesContainBook,
    };
}

