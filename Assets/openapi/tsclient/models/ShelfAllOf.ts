/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Icon,
    IconFromJSON,
    IconFromJSONTyped,
    IconToJSON,
} from './Icon';
import {
    OgmaUser,
    OgmaUserFromJSON,
    OgmaUserFromJSONTyped,
    OgmaUserToJSON,
} from './OgmaUser';
import {
    Story,
    StoryFromJSON,
    StoryFromJSONTyped,
    StoryToJSON,
} from './Story';

/**
 * 
 * @export
 * @interface ShelfAllOf
 */
export interface ShelfAllOf {
    /**
     * 
     * @type {string}
     * @memberof ShelfAllOf
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ShelfAllOf
     */
    description?: string;
    /**
     * 
     * @type {OgmaUser}
     * @memberof ShelfAllOf
     */
    owner?: OgmaUser;
    /**
     * 
     * @type {number}
     * @memberof ShelfAllOf
     */
    ownerId?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ShelfAllOf
     */
    isDefault?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ShelfAllOf
     */
    isPublic?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ShelfAllOf
     */
    isQuickAdd?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ShelfAllOf
     */
    trackUpdates?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ShelfAllOf
     */
    color?: string | null;
    /**
     * 
     * @type {Icon}
     * @memberof ShelfAllOf
     */
    icon?: Icon | null;
    /**
     * 
     * @type {number}
     * @memberof ShelfAllOf
     */
    iconId?: number | null;
    /**
     * 
     * @type {Array<Story>}
     * @memberof ShelfAllOf
     */
    stories?: Array<Story>;
}

export function ShelfAllOfFromJSON(json: any): ShelfAllOf {
    return ShelfAllOfFromJSONTyped(json, false);
}

export function ShelfAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShelfAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'owner': !exists(json, 'owner') ? undefined : OgmaUserFromJSON(json['owner']),
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'isDefault': !exists(json, 'isDefault') ? undefined : json['isDefault'],
        'isPublic': !exists(json, 'isPublic') ? undefined : json['isPublic'],
        'isQuickAdd': !exists(json, 'isQuickAdd') ? undefined : json['isQuickAdd'],
        'trackUpdates': !exists(json, 'trackUpdates') ? undefined : json['trackUpdates'],
        'color': !exists(json, 'color') ? undefined : json['color'],
        'icon': !exists(json, 'icon') ? undefined : IconFromJSON(json['icon']),
        'iconId': !exists(json, 'iconId') ? undefined : json['iconId'],
        'stories': !exists(json, 'stories') ? undefined : ((json['stories'] as Array<any>).map(StoryFromJSON)),
    };
}

export function ShelfAllOfToJSON(value?: ShelfAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'owner': OgmaUserToJSON(value.owner),
        'ownerId': value.ownerId,
        'isDefault': value.isDefault,
        'isPublic': value.isPublic,
        'isQuickAdd': value.isQuickAdd,
        'trackUpdates': value.trackUpdates,
        'color': value.color,
        'icon': IconToJSON(value.icon),
        'iconId': value.iconId,
        'stories': value.stories === undefined ? undefined : ((value.stories as Array<any>).map(StoryToJSON)),
    };
}

