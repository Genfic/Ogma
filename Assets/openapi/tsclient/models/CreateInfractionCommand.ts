/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    InfractionType,
    InfractionTypeFromJSON,
    InfractionTypeFromJSONTyped,
    InfractionTypeToJSON,
} from './InfractionType';

/**
 * 
 * @export
 * @interface CreateInfractionCommand
 */
export interface CreateInfractionCommand {
    /**
     * 
     * @type {number}
     * @memberof CreateInfractionCommand
     */
    userId?: number;
    /**
     * 
     * @type {string}
     * @memberof CreateInfractionCommand
     */
    reason?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof CreateInfractionCommand
     */
    endDate?: Date;
    /**
     * 
     * @type {InfractionType}
     * @memberof CreateInfractionCommand
     */
    type?: InfractionType;
}

export function CreateInfractionCommandFromJSON(json: any): CreateInfractionCommand {
    return CreateInfractionCommandFromJSONTyped(json, false);
}

export function CreateInfractionCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateInfractionCommand {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'reason': !exists(json, 'reason') ? undefined : json['reason'],
        'endDate': !exists(json, 'endDate') ? undefined : (new Date(json['endDate'])),
        'type': !exists(json, 'type') ? undefined : InfractionTypeFromJSON(json['type']),
    };
}

export function CreateInfractionCommandToJSON(value?: CreateInfractionCommand | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userId': value.userId,
        'reason': value.reason,
        'endDate': value.endDate === undefined ? undefined : (value.endDate.toISOString()),
        'type': InfractionTypeToJSON(value.type),
    };
}

