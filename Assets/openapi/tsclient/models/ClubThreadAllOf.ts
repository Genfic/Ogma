/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Club,
    ClubFromJSON,
    ClubFromJSONTyped,
    ClubToJSON,
} from './Club';
import {
    CommentsThread,
    CommentsThreadFromJSON,
    CommentsThreadFromJSONTyped,
    CommentsThreadToJSON,
} from './CommentsThread';
import {
    OgmaUser,
    OgmaUserFromJSON,
    OgmaUserFromJSONTyped,
    OgmaUserToJSON,
} from './OgmaUser';

/**
 * 
 * @export
 * @interface ClubThreadAllOf
 */
export interface ClubThreadAllOf {
    /**
     * 
     * @type {string}
     * @memberof ClubThreadAllOf
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ClubThreadAllOf
     */
    body?: string | null;
    /**
     * 
     * @type {OgmaUser}
     * @memberof ClubThreadAllOf
     */
    author?: OgmaUser | null;
    /**
     * 
     * @type {number}
     * @memberof ClubThreadAllOf
     */
    authorId?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof ClubThreadAllOf
     */
    creationDate?: Date;
    /**
     * 
     * @type {CommentsThread}
     * @memberof ClubThreadAllOf
     */
    commentsThread?: CommentsThread | null;
    /**
     * 
     * @type {Club}
     * @memberof ClubThreadAllOf
     */
    club?: Club | null;
    /**
     * 
     * @type {number}
     * @memberof ClubThreadAllOf
     */
    clubId?: number;
    /**
     * 
     * @type {Date}
     * @memberof ClubThreadAllOf
     */
    deletedAt?: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof ClubThreadAllOf
     */
    isPinned?: boolean;
}

export function ClubThreadAllOfFromJSON(json: any): ClubThreadAllOf {
    return ClubThreadAllOfFromJSONTyped(json, false);
}

export function ClubThreadAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClubThreadAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': !exists(json, 'title') ? undefined : json['title'],
        'body': !exists(json, 'body') ? undefined : json['body'],
        'author': !exists(json, 'author') ? undefined : OgmaUserFromJSON(json['author']),
        'authorId': !exists(json, 'authorId') ? undefined : json['authorId'],
        'creationDate': !exists(json, 'creationDate') ? undefined : (new Date(json['creationDate'])),
        'commentsThread': !exists(json, 'commentsThread') ? undefined : CommentsThreadFromJSON(json['commentsThread']),
        'club': !exists(json, 'club') ? undefined : ClubFromJSON(json['club']),
        'clubId': !exists(json, 'clubId') ? undefined : json['clubId'],
        'deletedAt': !exists(json, 'deletedAt') ? undefined : (json['deletedAt'] === null ? null : new Date(json['deletedAt'])),
        'isPinned': !exists(json, 'isPinned') ? undefined : json['isPinned'],
    };
}

export function ClubThreadAllOfToJSON(value?: ClubThreadAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'body': value.body,
        'author': OgmaUserToJSON(value.author),
        'authorId': value.authorId,
        'creationDate': value.creationDate === undefined ? undefined : (value.creationDate.toISOString()),
        'commentsThread': CommentsThreadToJSON(value.commentsThread),
        'club': ClubToJSON(value.club),
        'clubId': value.clubId,
        'deletedAt': value.deletedAt === undefined ? undefined : (value.deletedAt === null ? null : value.deletedAt.toISOString()),
        'isPinned': value.isPinned,
    };
}

