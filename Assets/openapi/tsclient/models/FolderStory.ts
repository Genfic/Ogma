/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Folder,
    FolderFromJSON,
    FolderFromJSONTyped,
    FolderToJSON,
} from './Folder';
import {
    Story,
    StoryFromJSON,
    StoryFromJSONTyped,
    StoryToJSON,
} from './Story';

/**
 * 
 * @export
 * @interface FolderStory
 */
export interface FolderStory {
    /**
     * 
     * @type {Folder}
     * @memberof FolderStory
     */
    folder?: Folder | null;
    /**
     * 
     * @type {number}
     * @memberof FolderStory
     */
    folderId?: number;
    /**
     * 
     * @type {Story}
     * @memberof FolderStory
     */
    story?: Story | null;
    /**
     * 
     * @type {number}
     * @memberof FolderStory
     */
    storyId?: number;
}

export function FolderStoryFromJSON(json: any): FolderStory {
    return FolderStoryFromJSONTyped(json, false);
}

export function FolderStoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): FolderStory {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'folder': !exists(json, 'folder') ? undefined : FolderFromJSON(json['folder']),
        'folderId': !exists(json, 'folderId') ? undefined : json['folderId'],
        'story': !exists(json, 'story') ? undefined : StoryFromJSON(json['story']),
        'storyId': !exists(json, 'storyId') ? undefined : json['storyId'],
    };
}

export function FolderStoryToJSON(value?: FolderStory | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'folder': FolderToJSON(value.folder),
        'folderId': value.folderId,
        'story': StoryToJSON(value.story),
        'storyId': value.storyId,
    };
}

