/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    InfractionType,
    InfractionTypeFromJSON,
    InfractionTypeFromJSONTyped,
    InfractionTypeToJSON,
} from './InfractionType';

/**
 * 
 * @export
 * @interface GetInfractionDetailsResult
 */
export interface GetInfractionDetailsResult {
    /**
     * 
     * @type {number}
     * @memberof GetInfractionDetailsResult
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof GetInfractionDetailsResult
     */
    userName?: string;
    /**
     * 
     * @type {number}
     * @memberof GetInfractionDetailsResult
     */
    userId?: number;
    /**
     * 
     * @type {Date}
     * @memberof GetInfractionDetailsResult
     */
    issueDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof GetInfractionDetailsResult
     */
    activeUntil?: Date;
    /**
     * 
     * @type {Date}
     * @memberof GetInfractionDetailsResult
     */
    removedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof GetInfractionDetailsResult
     */
    reason?: string;
    /**
     * 
     * @type {InfractionType}
     * @memberof GetInfractionDetailsResult
     */
    type?: InfractionType;
    /**
     * 
     * @type {string}
     * @memberof GetInfractionDetailsResult
     */
    issuedByName?: string;
    /**
     * 
     * @type {string}
     * @memberof GetInfractionDetailsResult
     */
    removedByName?: string | null;
}

export function GetInfractionDetailsResultFromJSON(json: any): GetInfractionDetailsResult {
    return GetInfractionDetailsResultFromJSONTyped(json, false);
}

export function GetInfractionDetailsResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetInfractionDetailsResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'userName': !exists(json, 'userName') ? undefined : json['userName'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'issueDate': !exists(json, 'issueDate') ? undefined : (new Date(json['issueDate'])),
        'activeUntil': !exists(json, 'activeUntil') ? undefined : (new Date(json['activeUntil'])),
        'removedAt': !exists(json, 'removedAt') ? undefined : (json['removedAt'] === null ? null : new Date(json['removedAt'])),
        'reason': !exists(json, 'reason') ? undefined : json['reason'],
        'type': !exists(json, 'type') ? undefined : InfractionTypeFromJSON(json['type']),
        'issuedByName': !exists(json, 'issuedByName') ? undefined : json['issuedByName'],
        'removedByName': !exists(json, 'removedByName') ? undefined : json['removedByName'],
    };
}

export function GetInfractionDetailsResultToJSON(value?: GetInfractionDetailsResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'userName': value.userName,
        'userId': value.userId,
        'issueDate': value.issueDate === undefined ? undefined : (value.issueDate.toISOString()),
        'activeUntil': value.activeUntil === undefined ? undefined : (value.activeUntil.toISOString()),
        'removedAt': value.removedAt === undefined ? undefined : (value.removedAt === null ? null : value.removedAt.toISOString()),
        'reason': value.reason,
        'type': InfractionTypeToJSON(value.type),
        'issuedByName': value.issuedByName,
        'removedByName': value.removedByName,
    };
}

