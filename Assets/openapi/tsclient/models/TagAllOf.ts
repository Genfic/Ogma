/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ETagNamespace,
    ETagNamespaceFromJSON,
    ETagNamespaceFromJSONTyped,
    ETagNamespaceToJSON,
} from './ETagNamespace';
import {
    Story,
    StoryFromJSON,
    StoryFromJSONTyped,
    StoryToJSON,
} from './Story';

/**
 * 
 * @export
 * @interface TagAllOf
 */
export interface TagAllOf {
    /**
     * 
     * @type {string}
     * @memberof TagAllOf
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof TagAllOf
     */
    slug?: string;
    /**
     * 
     * @type {string}
     * @memberof TagAllOf
     */
    description?: string | null;
    /**
     * 
     * @type {ETagNamespace}
     * @memberof TagAllOf
     */
    namespace?: ETagNamespace | null;
    /**
     * 
     * @type {Array<Story>}
     * @memberof TagAllOf
     */
    stories?: Array<Story>;
}

export function TagAllOfFromJSON(json: any): TagAllOf {
    return TagAllOfFromJSONTyped(json, false);
}

export function TagAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): TagAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'slug': !exists(json, 'slug') ? undefined : json['slug'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'namespace': !exists(json, 'namespace') ? undefined : ETagNamespaceFromJSON(json['namespace']),
        'stories': !exists(json, 'stories') ? undefined : ((json['stories'] as Array<any>).map(StoryFromJSON)),
    };
}

export function TagAllOfToJSON(value?: TagAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'slug': value.slug,
        'description': value.description,
        'namespace': ETagNamespaceToJSON(value.namespace),
        'stories': value.stories === undefined ? undefined : ((value.stories as Array<any>).map(StoryToJSON)),
    };
}

