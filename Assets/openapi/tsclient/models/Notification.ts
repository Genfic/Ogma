/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BaseModel,
    BaseModelFromJSON,
    BaseModelFromJSONTyped,
    BaseModelToJSON,
} from './BaseModel';
import {
    ENotificationEvent,
    ENotificationEventFromJSON,
    ENotificationEventFromJSONTyped,
    ENotificationEventToJSON,
} from './ENotificationEvent';
import {
    NotificationAllOf,
    NotificationAllOfFromJSON,
    NotificationAllOfFromJSONTyped,
    NotificationAllOfToJSON,
} from './NotificationAllOf';
import {
    OgmaUser,
    OgmaUserFromJSON,
    OgmaUserFromJSONTyped,
    OgmaUserToJSON,
} from './OgmaUser';

/**
 * 
 * @export
 * @interface Notification
 */
export interface Notification {
    /**
     * 
     * @type {number}
     * @memberof Notification
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    body?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    url?: string;
    /**
     * 
     * @type {Date}
     * @memberof Notification
     */
    dateTime?: Date;
    /**
     * 
     * @type {ENotificationEvent}
     * @memberof Notification
     */
    event?: ENotificationEvent;
    /**
     * 
     * @type {Array<OgmaUser>}
     * @memberof Notification
     */
    recipients?: Array<OgmaUser>;
}

export function NotificationFromJSON(json: any): Notification {
    return NotificationFromJSONTyped(json, false);
}

export function NotificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Notification {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'body': !exists(json, 'body') ? undefined : json['body'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'dateTime': !exists(json, 'dateTime') ? undefined : (new Date(json['dateTime'])),
        'event': !exists(json, 'event') ? undefined : ENotificationEventFromJSON(json['event']),
        'recipients': !exists(json, 'recipients') ? undefined : ((json['recipients'] as Array<any>).map(OgmaUserFromJSON)),
    };
}

export function NotificationToJSON(value?: Notification | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'body': value.body,
        'url': value.url,
        'dateTime': value.dateTime === undefined ? undefined : (value.dateTime.toISOString()),
        'event': ENotificationEventToJSON(value.event),
        'recipients': value.recipients === undefined ? undefined : ((value.recipients as Array<any>).map(OgmaUserToJSON)),
    };
}

