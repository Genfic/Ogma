/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ClubMember,
    ClubMemberFromJSON,
    ClubMemberFromJSONTyped,
    ClubMemberToJSON,
} from './ClubMember';
import {
    ClubThread,
    ClubThreadFromJSON,
    ClubThreadFromJSONTyped,
    ClubThreadToJSON,
} from './ClubThread';
import {
    Folder,
    FolderFromJSON,
    FolderFromJSONTyped,
    FolderToJSON,
} from './Folder';
import {
    OgmaUser,
    OgmaUserFromJSON,
    OgmaUserFromJSONTyped,
    OgmaUserToJSON,
} from './OgmaUser';
import {
    Report,
    ReportFromJSON,
    ReportFromJSONTyped,
    ReportToJSON,
} from './Report';

/**
 * 
 * @export
 * @interface ClubAllOf
 */
export interface ClubAllOf {
    /**
     * 
     * @type {string}
     * @memberof ClubAllOf
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ClubAllOf
     */
    slug?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ClubAllOf
     */
    hook?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ClubAllOf
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ClubAllOf
     */
    icon?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ClubAllOf
     */
    iconId?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof ClubAllOf
     */
    creationDate?: Date;
    /**
     * 
     * @type {Array<ClubMember>}
     * @memberof ClubAllOf
     */
    clubMembers?: Array<ClubMember> | null;
    /**
     * 
     * @type {Array<OgmaUser>}
     * @memberof ClubAllOf
     */
    bannedUsers?: Array<OgmaUser> | null;
    /**
     * 
     * @type {Array<ClubThread>}
     * @memberof ClubAllOf
     */
    threads?: Array<ClubThread> | null;
    /**
     * 
     * @type {Array<Folder>}
     * @memberof ClubAllOf
     */
    folders?: Array<Folder> | null;
    /**
     * 
     * @type {Array<Report>}
     * @memberof ClubAllOf
     */
    reports?: Array<Report> | null;
}

export function ClubAllOfFromJSON(json: any): ClubAllOf {
    return ClubAllOfFromJSONTyped(json, false);
}

export function ClubAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClubAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'slug': !exists(json, 'slug') ? undefined : json['slug'],
        'hook': !exists(json, 'hook') ? undefined : json['hook'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'icon': !exists(json, 'icon') ? undefined : json['icon'],
        'iconId': !exists(json, 'iconId') ? undefined : json['iconId'],
        'creationDate': !exists(json, 'creationDate') ? undefined : (new Date(json['creationDate'])),
        'clubMembers': !exists(json, 'clubMembers') ? undefined : (json['clubMembers'] === null ? null : (json['clubMembers'] as Array<any>).map(ClubMemberFromJSON)),
        'bannedUsers': !exists(json, 'bannedUsers') ? undefined : (json['bannedUsers'] === null ? null : (json['bannedUsers'] as Array<any>).map(OgmaUserFromJSON)),
        'threads': !exists(json, 'threads') ? undefined : (json['threads'] === null ? null : (json['threads'] as Array<any>).map(ClubThreadFromJSON)),
        'folders': !exists(json, 'folders') ? undefined : (json['folders'] === null ? null : (json['folders'] as Array<any>).map(FolderFromJSON)),
        'reports': !exists(json, 'reports') ? undefined : (json['reports'] === null ? null : (json['reports'] as Array<any>).map(ReportFromJSON)),
    };
}

export function ClubAllOfToJSON(value?: ClubAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'slug': value.slug,
        'hook': value.hook,
        'description': value.description,
        'icon': value.icon,
        'iconId': value.iconId,
        'creationDate': value.creationDate === undefined ? undefined : (value.creationDate.toISOString()),
        'clubMembers': value.clubMembers === undefined ? undefined : (value.clubMembers === null ? null : (value.clubMembers as Array<any>).map(ClubMemberToJSON)),
        'bannedUsers': value.bannedUsers === undefined ? undefined : (value.bannedUsers === null ? null : (value.bannedUsers as Array<any>).map(OgmaUserToJSON)),
        'threads': value.threads === undefined ? undefined : (value.threads === null ? null : (value.threads as Array<any>).map(ClubThreadToJSON)),
        'folders': value.folders === undefined ? undefined : (value.folders === null ? null : (value.folders as Array<any>).map(FolderToJSON)),
        'reports': value.reports === undefined ? undefined : (value.reports === null ? null : (value.reports as Array<any>).map(ReportToJSON)),
    };
}

