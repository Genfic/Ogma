// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace CompiledModels
{
    public partial class ApplicationDbContextModel
    {
        private ApplicationDbContextModel()
            : base(skipDetectChanges: false, modelId: new Guid("c2b123a7-8e10-41f4-981e-db6a117fa5dc"), entityTypeCount: 43)
        {
        }

        partial void Initialize()
        {
            var identityRoleClaim = IdentityRoleClaimEntityType.Create(this);
            var identityUserClaim = IdentityUserClaimEntityType.Create(this);
            var identityUserLogin = IdentityUserLoginEntityType.Create(this);
            var identityUserToken = IdentityUserTokenEntityType.Create(this);
            var blacklistedRating = BlacklistedRatingEntityType.Create(this);
            var blacklistedTag = BlacklistedTagEntityType.Create(this);
            var contentBlock = ContentBlockEntityType.Create(this);
            var blogpost = BlogpostEntityType.Create(this);
            var chapter = ChapterEntityType.Create(this);
            var chaptersRead = ChaptersReadEntityType.Create(this);
            var clubModeratorAction = ClubModeratorActionEntityType.Create(this);
            var clubThread = ClubThreadEntityType.Create(this);
            var club = ClubEntityType.Create(this);
            var clubMember = ClubMemberEntityType.Create(this);
            var comment = CommentEntityType.Create(this);
            var commentRevision = CommentRevisionEntityType.Create(this);
            var commentsThread = CommentsThreadEntityType.Create(this);
            var commentsThreadSubscriber = CommentsThreadSubscriberEntityType.Create(this);
            var document = DocumentEntityType.Create(this);
            var faq = FaqEntityType.Create(this);
            var folder = FolderEntityType.Create(this);
            var folderStory = FolderStoryEntityType.Create(this);
            var icon = IconEntityType.Create(this);
            var infraction = InfractionEntityType.Create(this);
            var inviteCode = InviteCodeEntityType.Create(this);
            var moderatorAction = ModeratorActionEntityType.Create(this);
            var notification = NotificationEntityType.Create(this);
            var notificationRecipients = NotificationRecipientsEntityType.Create(this);
            var quote = QuoteEntityType.Create(this);
            var rating = RatingEntityType.Create(this);
            var report = ReportEntityType.Create(this);
            var ogmaRole = OgmaRoleEntityType.Create(this);
            var shelf = ShelfEntityType.Create(this);
            var shelfStory = ShelfStoryEntityType.Create(this);
            var credit = CreditEntityType.Create(this);
            var story = StoryEntityType.Create(this);
            var storyTag = StoryTagEntityType.Create(this);
            var tag = TagEntityType.Create(this);
            var ogmaUser = OgmaUserEntityType.Create(this);
            var userBlock = UserBlockEntityType.Create(this);
            var userFollow = UserFollowEntityType.Create(this);
            var userRole = UserRoleEntityType.Create(this);
            var vote = VoteEntityType.Create(this);

            IdentityRoleClaimEntityType.CreateForeignKey1(identityRoleClaim, ogmaRole);
            IdentityUserClaimEntityType.CreateForeignKey1(identityUserClaim, ogmaUser);
            IdentityUserLoginEntityType.CreateForeignKey1(identityUserLogin, ogmaUser);
            IdentityUserTokenEntityType.CreateForeignKey1(identityUserToken, ogmaUser);
            BlacklistedRatingEntityType.CreateForeignKey1(blacklistedRating, rating);
            BlacklistedRatingEntityType.CreateForeignKey2(blacklistedRating, ogmaUser);
            BlacklistedTagEntityType.CreateForeignKey1(blacklistedTag, tag);
            BlacklistedTagEntityType.CreateForeignKey2(blacklistedTag, ogmaUser);
            ContentBlockEntityType.CreateForeignKey1(contentBlock, ogmaUser);
            BlogpostEntityType.CreateForeignKey1(blogpost, chapter);
            BlogpostEntityType.CreateForeignKey2(blogpost, story);
            BlogpostEntityType.CreateForeignKey3(blogpost, ogmaUser);
            BlogpostEntityType.CreateForeignKey4(blogpost, contentBlock);
            ChapterEntityType.CreateForeignKey1(chapter, contentBlock);
            ChapterEntityType.CreateForeignKey2(chapter, story);
            ChaptersReadEntityType.CreateForeignKey1(chaptersRead, story);
            ChaptersReadEntityType.CreateForeignKey2(chaptersRead, ogmaUser);
            ClubModeratorActionEntityType.CreateForeignKey1(clubModeratorAction, club);
            ClubModeratorActionEntityType.CreateForeignKey2(clubModeratorAction, ogmaUser);
            ClubThreadEntityType.CreateForeignKey1(clubThread, ogmaUser);
            ClubThreadEntityType.CreateForeignKey2(clubThread, club);
            ClubMemberEntityType.CreateForeignKey1(clubMember, club);
            ClubMemberEntityType.CreateForeignKey2(clubMember, ogmaUser);
            CommentEntityType.CreateForeignKey1(comment, ogmaUser);
            CommentEntityType.CreateForeignKey2(comment, commentsThread);
            CommentEntityType.CreateForeignKey3(comment, ogmaUser);
            CommentRevisionEntityType.CreateForeignKey1(commentRevision, comment);
            CommentsThreadEntityType.CreateForeignKey1(commentsThread, blogpost);
            CommentsThreadEntityType.CreateForeignKey2(commentsThread, chapter);
            CommentsThreadEntityType.CreateForeignKey3(commentsThread, clubThread);
            CommentsThreadEntityType.CreateForeignKey4(commentsThread, ogmaUser);
            CommentsThreadSubscriberEntityType.CreateForeignKey1(commentsThreadSubscriber, commentsThread);
            CommentsThreadSubscriberEntityType.CreateForeignKey2(commentsThreadSubscriber, ogmaUser);
            FolderEntityType.CreateForeignKey1(folder, club);
            FolderStoryEntityType.CreateForeignKey1(folderStory, ogmaUser);
            FolderStoryEntityType.CreateForeignKey2(folderStory, folder);
            FolderStoryEntityType.CreateForeignKey3(folderStory, story);
            InfractionEntityType.CreateForeignKey1(infraction, ogmaUser);
            InfractionEntityType.CreateForeignKey2(infraction, ogmaUser);
            InfractionEntityType.CreateForeignKey3(infraction, ogmaUser);
            InviteCodeEntityType.CreateForeignKey1(inviteCode, ogmaUser);
            InviteCodeEntityType.CreateForeignKey2(inviteCode, ogmaUser);
            ModeratorActionEntityType.CreateForeignKey1(moderatorAction, ogmaUser);
            NotificationRecipientsEntityType.CreateForeignKey1(notificationRecipients, notification);
            NotificationRecipientsEntityType.CreateForeignKey2(notificationRecipients, ogmaUser);
            ReportEntityType.CreateForeignKey1(report, blogpost);
            ReportEntityType.CreateForeignKey2(report, chapter);
            ReportEntityType.CreateForeignKey3(report, club);
            ReportEntityType.CreateForeignKey4(report, comment);
            ReportEntityType.CreateForeignKey5(report, ogmaUser);
            ReportEntityType.CreateForeignKey6(report, story);
            ReportEntityType.CreateForeignKey7(report, ogmaUser);
            ShelfEntityType.CreateForeignKey1(shelf, icon);
            ShelfEntityType.CreateForeignKey2(shelf, ogmaUser);
            ShelfStoryEntityType.CreateForeignKey1(shelfStory, shelf);
            ShelfStoryEntityType.CreateForeignKey2(shelfStory, story);
            CreditEntityType.CreateForeignKey1(credit, story);
            StoryEntityType.CreateForeignKey1(story, ogmaUser);
            StoryEntityType.CreateForeignKey2(story, contentBlock);
            StoryEntityType.CreateForeignKey3(story, rating);
            StoryTagEntityType.CreateForeignKey1(storyTag, story);
            StoryTagEntityType.CreateForeignKey2(storyTag, tag);
            UserBlockEntityType.CreateForeignKey1(userBlock, ogmaUser);
            UserBlockEntityType.CreateForeignKey2(userBlock, ogmaUser);
            UserFollowEntityType.CreateForeignKey1(userFollow, ogmaUser);
            UserFollowEntityType.CreateForeignKey2(userFollow, ogmaUser);
            UserRoleEntityType.CreateForeignKey1(userRole, ogmaRole);
            UserRoleEntityType.CreateForeignKey2(userRole, ogmaUser);
            VoteEntityType.CreateForeignKey1(vote, story);
            VoteEntityType.CreateForeignKey2(vote, ogmaUser);

            CommentsThreadEntityType.CreateSkipNavigation1(commentsThread, ogmaUser, commentsThreadSubscriber);
            FolderEntityType.CreateSkipNavigation1(folder, story, folderStory);
            NotificationEntityType.CreateSkipNavigation1(notification, ogmaUser, notificationRecipients);
            OgmaRoleEntityType.CreateSkipNavigation1(ogmaRole, ogmaUser, userRole);
            ShelfEntityType.CreateSkipNavigation1(shelf, story, shelfStory);
            StoryEntityType.CreateSkipNavigation1(story, folder, folderStory);
            StoryEntityType.CreateSkipNavigation2(story, shelf, shelfStory);
            StoryEntityType.CreateSkipNavigation3(story, tag, storyTag);
            TagEntityType.CreateSkipNavigation1(tag, story, storyTag);
            OgmaUserEntityType.CreateSkipNavigation1(ogmaUser, ogmaUser, userBlock);
            OgmaUserEntityType.CreateSkipNavigation2(ogmaUser, ogmaUser, userBlock);
            OgmaUserEntityType.CreateSkipNavigation3(ogmaUser, ogmaUser, userFollow);
            OgmaUserEntityType.CreateSkipNavigation4(ogmaUser, ogmaUser, userFollow);
            OgmaUserEntityType.CreateSkipNavigation5(ogmaUser, notification, notificationRecipients);
            OgmaUserEntityType.CreateSkipNavigation6(ogmaUser, ogmaRole, userRole);
            OgmaUserEntityType.CreateSkipNavigation7(ogmaUser, commentsThread, commentsThreadSubscriber);

            IdentityRoleClaimEntityType.CreateAnnotations(identityRoleClaim);
            IdentityUserClaimEntityType.CreateAnnotations(identityUserClaim);
            IdentityUserLoginEntityType.CreateAnnotations(identityUserLogin);
            IdentityUserTokenEntityType.CreateAnnotations(identityUserToken);
            BlacklistedRatingEntityType.CreateAnnotations(blacklistedRating);
            BlacklistedTagEntityType.CreateAnnotations(blacklistedTag);
            ContentBlockEntityType.CreateAnnotations(contentBlock);
            BlogpostEntityType.CreateAnnotations(blogpost);
            ChapterEntityType.CreateAnnotations(chapter);
            ChaptersReadEntityType.CreateAnnotations(chaptersRead);
            ClubModeratorActionEntityType.CreateAnnotations(clubModeratorAction);
            ClubThreadEntityType.CreateAnnotations(clubThread);
            ClubEntityType.CreateAnnotations(club);
            ClubMemberEntityType.CreateAnnotations(clubMember);
            CommentEntityType.CreateAnnotations(comment);
            CommentRevisionEntityType.CreateAnnotations(commentRevision);
            CommentsThreadEntityType.CreateAnnotations(commentsThread);
            CommentsThreadSubscriberEntityType.CreateAnnotations(commentsThreadSubscriber);
            DocumentEntityType.CreateAnnotations(document);
            FaqEntityType.CreateAnnotations(faq);
            FolderEntityType.CreateAnnotations(folder);
            FolderStoryEntityType.CreateAnnotations(folderStory);
            IconEntityType.CreateAnnotations(icon);
            InfractionEntityType.CreateAnnotations(infraction);
            InviteCodeEntityType.CreateAnnotations(inviteCode);
            ModeratorActionEntityType.CreateAnnotations(moderatorAction);
            NotificationEntityType.CreateAnnotations(notification);
            NotificationRecipientsEntityType.CreateAnnotations(notificationRecipients);
            QuoteEntityType.CreateAnnotations(quote);
            RatingEntityType.CreateAnnotations(rating);
            ReportEntityType.CreateAnnotations(report);
            OgmaRoleEntityType.CreateAnnotations(ogmaRole);
            ShelfEntityType.CreateAnnotations(shelf);
            ShelfStoryEntityType.CreateAnnotations(shelfStory);
            CreditEntityType.CreateAnnotations(credit);
            StoryEntityType.CreateAnnotations(story);
            StoryTagEntityType.CreateAnnotations(storyTag);
            TagEntityType.CreateAnnotations(tag);
            OgmaUserEntityType.CreateAnnotations(ogmaUser);
            UserBlockEntityType.CreateAnnotations(userBlock);
            UserFollowEntityType.CreateAnnotations(userFollow);
            UserRoleEntityType.CreateAnnotations(userRole);
            VoteEntityType.CreateAnnotations(vote);

            AddAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
            AddAnnotation("ProductVersion", "9.0.0");
            AddAnnotation("Relational:MaxIdentifierLength", 63);
        }
    }
}
