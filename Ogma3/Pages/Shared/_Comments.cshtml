@inject IAntiforgery Xcsrf
@inject LinkGenerator LinkGenerator
@using Microsoft.AspNetCore.Antiforgery
@using Ogma3.Services
@model CommentsThreadDto

@{
	var csrf = Xcsrf.GetAndStoreTokens(Context).RequestToken;
}

<o-comments csrf="@csrf" id="@Model.Id" is-logged-in="@(User.Identity is { IsAuthenticated: true })"
            lock-date="@(Model.LockDate == default(DateTimeOffset) ? null : Model.LockDate)"
            md-ref-route="@Routes.Pages.Markdown.Get().Path(LinkGenerator)"
            login-route="@Routes.Areas.Identity.Pages.Account_Login.Get().Path(LinkGenerator)"
            register-route="@Routes.Areas.Identity.Pages.Account_Register.Get().Path(LinkGenerator)"></o-comments>

<report-modal id="report-comment" csrf="@csrf"></report-modal>

@Html.Resource(@<script type="module" defer src="~/js/comments.js" asp-append-version="true"></script>)
@Html.Resource(@<script type="module" defer src="~/js/comp/report-modal.js" asp-append-version="true"></script>)