@using System.Globalization
@using Utils.Extensions
@model StoryCard

@{
	var authorRoute = Routes.Pages.User_Index.Get(Model.AuthorUserName);
	var storyRoute = Routes.Pages.Story.Get(Model.Id, Model.Slug);
}

<div class="story-card">

	<img class="image"
	     src="@(Model.Cover ?? "/img/placeholders/ph-250.png")"
	     alt="@Model.Title"
	     width="160" height="160" cf/>

	<header class="title">

		<h3>
			@* TODO: width and height *@
			<img src="@Model.Rating.Icon"
			     alt="Rated: @Model.Rating.Name"
			     title="Rating: @Model.Rating.Name"
			     class="rating"
			     loading="lazy"/>
			<a for-route="storyRoute">@Model.Title</a>
		</h3>

		<a class="author" for-route="authorRoute">By&nbsp;@Model.AuthorUserName</a>
	</header>

	<div class="hook">
		<markdown preset="Basic">
			@Model.Hook
		</markdown>
	</div>

	<div class="tags">
		<story-status status="@Model.Status"></story-status>
		@foreach (var t in Model.Tags)
		{
			<tag tag="t"></tag>
		}
	</div>

	<div class="info">

		<span class="word-count">@Model.WordCount.ToString("N0") words</span>

		<span class="chapter-count">@Model.ChapterCount @(Model.ChapterCount == 1 ? "chapter" : "chapters")</span>

		@if (Model.PublicationDate is {} date)
		{
			<time class="release-date" datetime="@date.ToString("yyyy-MM-dd HH:mm", CultureInfo.InvariantCulture)">
				published @date.FormatDateWithDaySuffix()
			</time>
		}
		else
		{
			<span class="not-published">
				<icon class="icon" icon="lucide:eye-off" svg="true"></icon>
				Not published
			</span>
		}
	</div>
</div>