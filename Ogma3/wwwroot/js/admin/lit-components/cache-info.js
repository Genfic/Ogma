var m=function(G,f,H,$){var q=arguments.length,X=q<3?f:$===null?$=Object.getOwnPropertyDescriptor(f,H):$,Y;if(typeof Reflect==="object"&&typeof Reflect.decorate==="function")X=Reflect.decorate(G,f,H,$);else for(var Z=G.length-1;Z>=0;Z--)if(Y=G[Z])X=(q<3?Y(X):q>3?Y(f,H,X):Y(f,H))||X;return q>3&&X&&Object.defineProperty(f,H,X),X};var v=globalThis,a=v.ShadowRoot&&(v.ShadyCSS===void 0||v.ShadyCSS.nativeShadow)&&"adoptedStyleSheets"in Document.prototype&&"replace"in CSSStyleSheet.prototype,t=Symbol(),BG=new WeakMap;class e{constructor(G,f,H){if(this._$cssResult$=!0,H!==t)throw new Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");this.cssText=G,this._strings=f}get styleSheet(){let G=this._styleSheet,f=this._strings;if(a&&G===void 0){let H=f!==void 0&&f.length===1;if(H)G=BG.get(f);if(G===void 0){if((this._styleSheet=G=new CSSStyleSheet).replaceSync(this.cssText),H)BG.set(f,G)}}return G}toString(){return this.cssText}}var iG=(G)=>{if(G._$cssResult$===!0)return G.cssText;else if(typeof G==="number")return G;else throw new Error(`Value passed to 'css' function must be a 'css' function result: ${G}. Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.`)},lG=(G)=>new e(typeof G==="string"?G:String(G),void 0,t),kG=(G,...f)=>{let H=G.length===1?G[0]:f.reduce(($,q,X)=>$+iG(q)+G[X+1],G[0]);return new e(H,G,t)},AG=(G,f)=>{if(a)G.adoptedStyleSheets=f.map((H)=>H instanceof CSSStyleSheet?H:H.styleSheet);else for(let H of f){let $=document.createElement("style"),q=v.litNonce;if(q!==void 0)$.setAttribute("nonce",q);$.textContent=H.cssText,G.appendChild($)}},oG=(G)=>{let f="";for(let H of G.cssRules)f+=H.cssText;return lG(f)},GG=a?(G)=>G:(G)=>G instanceof CSSStyleSheet?oG(G):G;var{is:sG,defineProperty:rG,getOwnPropertyDescriptor:IG,getOwnPropertyNames:nG,getOwnPropertySymbols:aG,getPrototypeOf:UG}=Object,tG=!1,W=globalThis;if(tG)W.customElements??=customElements;var k=!0,U,WG=W.trustedTypes,eG=WG?WG.emptyScript:"",TG=k?W.reactiveElementPolyfillSupportDevMode:W.reactiveElementPolyfillSupport;if(k){let G=W.litIssuedWarnings??=new Set;if(U=(f,H)=>{if(H+=` See https://lit.dev/msg/${f} for more information.`,!G.has(H))console.warn(H),G.add(H)},U("dev-mode","Lit is in dev mode. Not recommended for production!"),W.ShadyDOM?.inUse&&TG===void 0)U("polyfill-support-missing","Shadow DOM is being polyfilled via `ShadyDOM` but the `polyfill-support` module has not been loaded.")}var Gf=k?(G)=>{if(!W.emitLitDebugLogEvents)return;W.dispatchEvent(new CustomEvent("lit-debug",{detail:G}))}:void 0,L=(G,f)=>G,O={toAttribute(G,f){switch(f){case Boolean:G=G?eG:null;break;case Object:case Array:G=G==null?G:JSON.stringify(G);break}return G},fromAttribute(G,f){let H=G;switch(f){case Boolean:H=G!==null;break;case Number:H=G===null?null:Number(G);break;case Object:case Array:try{H=JSON.parse(G)}catch($){H=null}break}return H}},u=(G,f)=>!sG(G,f),jG={attribute:!0,type:String,converter:O,reflect:!1,hasChanged:u};Symbol.metadata??=Symbol("metadata");W.litPropertyMetadata??=new WeakMap;class A extends HTMLElement{static addInitializer(G){this.__prepare(),(this._initializers??=[]).push(G)}static get observedAttributes(){return this.finalize(),this.__attributeToPropertyMap&&[...this.__attributeToPropertyMap.keys()]}static createProperty(G,f=jG){if(f.state)f.attribute=!1;if(this.__prepare(),this.elementProperties.set(G,f),!f.noAccessor){let H=k?Symbol.for(`${String(G)} (@property() cache)`):Symbol(),$=this.getPropertyDescriptor(G,H,f);if($!==void 0)rG(this.prototype,G,$)}}static getPropertyDescriptor(G,f,H){let{get:$,set:q}=IG(this.prototype,G)??{get(){return this[f]},set(X){this[f]=X}};if(k&&$==null){if("value"in(IG(this.prototype,G)??{}))throw new Error(`Field ${JSON.stringify(String(G))} on ${this.name} was declared as a reactive property but it's actually declared as a value on the prototype. Usually this is due to using @property or @state on a method.`);U("reactive-property-without-getter",`Field ${JSON.stringify(String(G))} on ${this.name} was declared as a reactive property but it does not have a getter. This will be an error in a future version of Lit.`)}return{get(){return $?.call(this)},set(X){let Y=$?.call(this);q.call(this,X),this.requestUpdate(G,Y,H)},configurable:!0,enumerable:!0}}static getPropertyOptions(G){return this.elementProperties.get(G)??jG}static __prepare(){if(this.hasOwnProperty(L("elementProperties",this)))return;let G=UG(this);if(G.finalize(),G._initializers!==void 0)this._initializers=[...G._initializers];this.elementProperties=new Map(G.elementProperties)}static finalize(){if(this.hasOwnProperty(L("finalized",this)))return;if(this.finalized=!0,this.__prepare(),this.hasOwnProperty(L("properties",this))){let f=this.properties,H=[...nG(f),...aG(f)];for(let $ of H)this.createProperty($,f[$])}let G=this[Symbol.metadata];if(G!==null){let f=litPropertyMetadata.get(G);if(f!==void 0)for(let[H,$]of f)this.elementProperties.set(H,$)}this.__attributeToPropertyMap=new Map;for(let[f,H]of this.elementProperties){let $=this.__attributeNameForProperty(f,H);if($!==void 0)this.__attributeToPropertyMap.set($,f)}if(this.elementStyles=this.finalizeStyles(this.styles),k){if(this.hasOwnProperty("createProperty"))U("no-override-create-property","Overriding ReactiveElement.createProperty() is deprecated. The override will not be called with standard decorators");if(this.hasOwnProperty("getPropertyDescriptor"))U("no-override-get-property-descriptor","Overriding ReactiveElement.getPropertyDescriptor() is deprecated. The override will not be called with standard decorators")}}static finalizeStyles(G){let f=[];if(Array.isArray(G)){let H=new Set(G.flat(1/0).reverse());for(let $ of H)f.unshift(GG($))}else if(G!==void 0)f.push(GG(G));return f}static __attributeNameForProperty(G,f){let H=f.attribute;return H===!1?void 0:typeof H==="string"?H:typeof G==="string"?G.toLowerCase():void 0}constructor(){super();this.__instanceProperties=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this.__reflectingProperty=null,this.__initialize()}__initialize(){this.__updatePromise=new Promise((G)=>this.enableUpdating=G),this._$changedProperties=new Map,this.__saveInstanceProperties(),this.requestUpdate(),this.constructor._initializers?.forEach((G)=>G(this))}addController(G){if((this.__controllers??=new Set).add(G),this.renderRoot!==void 0&&this.isConnected)G.hostConnected?.()}removeController(G){this.__controllers?.delete(G)}__saveInstanceProperties(){let G=new Map,f=this.constructor.elementProperties;for(let H of f.keys())if(this.hasOwnProperty(H))G.set(H,this[H]),delete this[H];if(G.size>0)this.__instanceProperties=G}createRenderRoot(){let G=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return AG(G,this.constructor.elementStyles),G}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this.__controllers?.forEach((G)=>G.hostConnected?.())}enableUpdating(G){}disconnectedCallback(){this.__controllers?.forEach((G)=>G.hostDisconnected?.())}attributeChangedCallback(G,f,H){this._$attributeToProperty(G,H)}__propertyToAttribute(G,f){let $=this.constructor.elementProperties.get(G),q=this.constructor.__attributeNameForProperty(G,$);if(q!==void 0&&$.reflect===!0){let Y=($.converter?.toAttribute!==void 0?$.converter:O).toAttribute(f,$.type);if(k&&this.constructor.enabledWarnings.includes("migration")&&Y===void 0)U("undefined-attribute-value",`The attribute value for the ${G} property is undefined on element ${this.localName}. The attribute will be removed, but in the previous version of \`ReactiveElement\`, the attribute would not have changed.`);if(this.__reflectingProperty=G,Y==null)this.removeAttribute(q);else this.setAttribute(q,Y);this.__reflectingProperty=null}}_$attributeToProperty(G,f){let H=this.constructor,$=H.__attributeToPropertyMap.get(G);if($!==void 0&&this.__reflectingProperty!==$){let q=H.getPropertyOptions($),X=typeof q.converter==="function"?{fromAttribute:q.converter}:q.converter?.fromAttribute!==void 0?q.converter:O;this.__reflectingProperty=$,this[$]=X.fromAttribute(f,q.type),this.__reflectingProperty=null}}requestUpdate(G,f,H){if(G!==void 0){if(k&&G instanceof Event)U("","The requestUpdate() method was called with an Event as the property name. This is probably a mistake caused by binding this.requestUpdate as an event listener. Instead bind a function that will call it with no arguments: () => this.requestUpdate()");H??=this.constructor.getPropertyOptions(G);let $=H.hasChanged??u,q=this[G];if($(q,f))this._$changeProperty(G,f,H);else return}if(this.isUpdatePending===!1)this.__updatePromise=this.__enqueueUpdate()}_$changeProperty(G,f,H){if(!this._$changedProperties.has(G))this._$changedProperties.set(G,f);if(H.reflect===!0&&this.__reflectingProperty!==G)(this.__reflectingProperties??=new Set).add(G)}async __enqueueUpdate(){this.isUpdatePending=!0;try{await this.__updatePromise}catch(f){Promise.reject(f)}let G=this.scheduleUpdate();if(G!=null)await G;return!this.isUpdatePending}scheduleUpdate(){let G=this.performUpdate();if(k&&this.constructor.enabledWarnings.includes("async-perform-update")&&typeof G?.then==="function")U("async-perform-update",`Element ${this.localName} returned a Promise from performUpdate(). This behavior is deprecated and will be removed in a future version of ReactiveElement.`);return G}performUpdate(){if(!this.isUpdatePending)return;if(Gf?.({kind:"update"}),!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),k){let q=[...this.constructor.elementProperties.keys()].filter((X)=>this.hasOwnProperty(X)&&(X in UG(this)));if(q.length)throw new Error(`The following properties on element ${this.localName} will not trigger updates as expected because they are set using class fields: ${q.join(", ")}. Native class fields and some compiled output will overwrite accessors used for detecting changes. See https://lit.dev/msg/class-field-shadowing for more information.`)}if(this.__instanceProperties){for(let[$,q]of this.__instanceProperties)this[$]=q;this.__instanceProperties=void 0}let H=this.constructor.elementProperties;if(H.size>0){for(let[$,q]of H)if(q.wrapped===!0&&!this._$changedProperties.has($)&&this[$]!==void 0)this._$changeProperty($,this[$],q)}}let G=!1,f=this._$changedProperties;try{if(G=this.shouldUpdate(f),G)this.willUpdate(f),this.__controllers?.forEach((H)=>H.hostUpdate?.()),this.update(f);else this.__markUpdated()}catch(H){throw G=!1,this.__markUpdated(),H}if(G)this._$didUpdate(f)}willUpdate(G){}_$didUpdate(G){if(this.__controllers?.forEach((f)=>f.hostUpdated?.()),!this.hasUpdated)this.hasUpdated=!0,this.firstUpdated(G);if(this.updated(G),k&&this.isUpdatePending&&this.constructor.enabledWarnings.includes("change-in-update"))U("change-in-update",`Element ${this.localName} scheduled an update (generally because a property was set) after an update completed, causing a new update to be scheduled. This is inefficient and should be avoided unless the next update can only be scheduled as a side effect of the previous update.`)}__markUpdated(){this._$changedProperties=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this.__updatePromise}shouldUpdate(G){return!0}update(G){this.__reflectingProperties&&=this.__reflectingProperties.forEach((f)=>this.__propertyToAttribute(f,this[f])),this.__markUpdated()}updated(G){}firstUpdated(G){}}A.elementStyles=[];A.shadowRootOptions={mode:"open"};A[L("elementProperties",A)]=new Map;A[L("finalized",A)]=new Map;TG?.({ReactiveElement:A});if(k){A.enabledWarnings=["change-in-update","async-perform-update"];let G=function(f){if(!f.hasOwnProperty(L("enabledWarnings",f)))f.enabledWarnings=f.enabledWarnings.slice()};A.enableWarning=function(f){if(G(this),!this.enabledWarnings.includes(f))this.enabledWarnings.push(f)},A.disableWarning=function(f){G(this);let H=this.enabledWarnings.indexOf(f);if(H>=0)this.enabledWarnings.splice(H,1)}}(W.reactiveElementVersions??=[]).push("2.0.4");if(k&&W.reactiveElementVersions.length>1)U("multiple-versions","Multiple versions of Lit loaded. Loading multiple versions is not recommended.");var I=globalThis,K=(G)=>{if(!I.emitLitDebugLogEvents)return;I.dispatchEvent(new CustomEvent("lit-debug",{detail:G}))},ff=0,P;I.litIssuedWarnings??=new Set,P=(G,f)=>{if(f+=G?` See https://lit.dev/msg/${G} for more information.`:"",!I.litIssuedWarnings.has(f))console.warn(f),I.litIssuedWarnings.add(f)},P("dev-mode","Lit is in dev mode. Not recommended for production!");var j=I.ShadyDOM?.inUse&&I.ShadyDOM?.noPatch===!0?I.ShadyDOM.wrap:(G)=>G,p=I.trustedTypes,_G=p?p.createPolicy("lit-html",{createHTML:(G)=>G}):void 0,Hf=(G)=>G,s=(G,f,H)=>Hf,$f=(G)=>{if(S!==s)throw new Error("Attempted to overwrite existing lit-html security policy. setSanitizeDOMValueFactory should be called at most once.");S=G},qf=()=>{S=s},XG=(G,f,H)=>{return S(G,f,H)},RG="$lit$",_=`lit$${Math.random().toFixed(9).slice(2)}$`,SG="?"+_,Xf=`<${SG}>`,D=document,E=()=>D.createComment(""),x=(G)=>G===null||typeof G!="object"&&typeof G!="function",YG=Array.isArray,Yf=(G)=>YG(G)||typeof G?.[Symbol.iterator]==="function",fG=`[ 	
\f\r]`,Zf=`[^ 	
\f\r"'\`<>=]`,Kf=`[^\\s"'>=/]`,y=/<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g,MG=1,HG=2,zf=3,VG=/-->/g,NG=/>/g,V=new RegExp(`>|${fG}(?:(${Kf}+)(${fG}*=${fG}*(?:${Zf}|("|')|))|$)`,"g"),Ff=0,CG=1,Jf=2,bG=3,$G=/'/g,qG=/"/g,LG=/^(?:script|style|textarea|title)$/i,Qf=1,i=2,l=3,ZG=1,o=2,Bf=3,kf=4,Af=5,KG=6,If=7,zG=(G)=>(f,...H)=>{if(f.some(($)=>$===void 0))console.warn(`Some template strings are undefined.
This is probably caused by illegal octal escape sequences.`);if(H.some(($)=>$?._$litStatic$))P("",`Static values 'literal' or 'unsafeStatic' cannot be used as values to non-static templates.
Please use the static 'html' tag function. See https://lit.dev/docs/templates/expressions/#static-expressions`);return{["_$litType$"]:G,strings:f,values:H}},hG=zG(Qf),hf=zG(i),Of=zG(l),R=Symbol.for("lit-noChange"),J=Symbol.for("lit-nothing"),DG=new WeakMap,b=D.createTreeWalker(D,129),S=s;function OG(G,f){if(!YG(G)||!G.hasOwnProperty("raw")){let H="invalid template strings array";throw H=`
          Internal Error: expected template strings to be an array
          with a 'raw' field. Faking a template strings array by
          calling html or svg like an ordinary function is effectively
          the same as calling unsafeHtml and can lead to major security
          issues, e.g. opening your code up to XSS attacks.
          If you're using the html or svg tagged template functions normally
          and still seeing this error, please file a bug at
          https://github.com/lit/lit/issues/new?template=bug_report.md
          and include information about your build tooling, if any.
        `.trim().replace(/\n */g,`
`),new Error(H)}return _G!==void 0?_G.createHTML(f):f}var Uf=(G,f)=>{let H=G.length-1,$=[],q=f===i?"<svg>":f===l?"<math>":"",X,Y=y;for(let F=0;F<H;F++){let T=G[F],z=-1,B,M=0,Q;while(M<T.length){if(Y.lastIndex=M,Q=Y.exec(T),Q===null)break;if(M=Y.lastIndex,Y===y){if(Q[MG]==="!--")Y=VG;else if(Q[MG]!==void 0)Y=NG;else if(Q[HG]!==void 0){if(LG.test(Q[HG]))X=new RegExp(`</${Q[HG]}`,"g");Y=V}else if(Q[zf]!==void 0)throw new Error("Bindings in tag names are not supported. Please use static templates instead. See https://lit.dev/docs/templates/expressions/#static-expressions")}else if(Y===V)if(Q[Ff]===">")Y=X??y,z=-1;else if(Q[CG]===void 0)z=-2;else z=Y.lastIndex-Q[Jf].length,B=Q[CG],Y=Q[bG]===void 0?V:Q[bG]==='"'?qG:$G;else if(Y===qG||Y===$G)Y=V;else if(Y===VG||Y===NG)Y=y;else Y=V,X=void 0}console.assert(z===-1||Y===V||Y===$G||Y===qG,"unexpected parse state B");let C=Y===V&&G[F+1].startsWith("/>")?" ":"";q+=Y===y?T+Xf:z>=0?($.push(B),T.slice(0,z)+RG+T.slice(z))+_+C:T+_+(z===-2?F:C)}let Z=q+(G[H]||"<?>")+(f===i?"</svg>":f===l?"</math>":"");return[OG(G,Z),$]};class c{constructor({strings:G,["_$litType$"]:f},H){this.parts=[];let $,q=0,X=0,Y=G.length-1,Z=this.parts,[F,T]=Uf(G,f);if(this.el=c.createElement(F,H),b.currentNode=this.el.content,f===i||f===l){let z=this.el.content.firstChild;z.replaceWith(...z.childNodes)}while(($=b.nextNode())!==null&&Z.length<Y){if($.nodeType===1){{let z=$.localName;if(/^(?:textarea|template)$/i.test(z)&&$.innerHTML.includes(_)){let B=`Expressions are not supported inside \`${z}\` elements. See https://lit.dev/msg/expression-in-${z} for more information.`;if(z==="template")throw new Error(B);else P("",B)}}if($.hasAttributes()){for(let z of $.getAttributeNames())if(z.endsWith(RG)){let B=T[X++],Q=$.getAttribute(z).split(_),C=/([.?@])?(.*)/.exec(B);Z.push({type:ZG,index:q,name:C[2],strings:Q,ctor:C[1]==="."?wG:C[1]==="?"?PG:C[1]==="@"?EG:g}),$.removeAttribute(z)}else if(z.startsWith(_))Z.push({type:KG,index:q}),$.removeAttribute(z)}if(LG.test($.tagName)){let z=$.textContent.split(_),B=z.length-1;if(B>0){$.textContent=p?p.emptyScript:"";for(let M=0;M<B;M++)$.append(z[M],E()),b.nextNode(),Z.push({type:o,index:++q});$.append(z[B],E())}}}else if($.nodeType===8)if($.data===SG)Z.push({type:o,index:q});else{let B=-1;while((B=$.data.indexOf(_,B+1))!==-1)Z.push({type:If,index:q}),B+=_.length-1}q++}if(T.length!==X)throw new Error('Detected duplicate attribute bindings. This occurs if your template has duplicate attributes on an element tag. For example "<input ?disabled=${true} ?disabled=${false}>" contains a duplicate "disabled" attribute. The error was detected in the following template: \n`'+G.join("${...}")+"`");K&&K({kind:"template prep",template:this,clonableTemplate:this.el,parts:this.parts,strings:G})}static createElement(G,f){let H=D.createElement("template");return H.innerHTML=G,H}}function h(G,f,H=G,$){if(f===R)return f;let q=$!==void 0?H.__directives?.[$]:H.__directive,X=x(f)?void 0:f._$litDirective$;if(q?.constructor!==X){if(q?._$notifyDirectiveConnectionChanged?.(!1),X===void 0)q=void 0;else q=new X(G),q._$initialize(G,H,$);if($!==void 0)(H.__directives??=[])[$]=q;else H.__directive=q}if(q!==void 0)f=h(G,q._$resolve(G,f.values),q,$);return f}class yG{constructor(G,f){this._$parts=[],this._$disconnectableChildren=void 0,this._$template=G,this._$parent=f}get parentNode(){return this._$parent.parentNode}get _$isConnected(){return this._$parent._$isConnected}_clone(G){let{el:{content:f},parts:H}=this._$template,$=(G?.creationScope??D).importNode(f,!0);b.currentNode=$;let q=b.nextNode(),X=0,Y=0,Z=H[0];while(Z!==void 0){if(X===Z.index){let F;if(Z.type===o)F=new d(q,q.nextSibling,this,G);else if(Z.type===ZG)F=new Z.ctor(q,Z.name,Z.strings,this,G);else if(Z.type===KG)F=new xG(q,this,G);this._$parts.push(F),Z=H[++Y]}if(X!==Z?.index)q=b.nextNode(),X++}return b.currentNode=D,$}_update(G){let f=0;for(let H of this._$parts){if(H!==void 0)if(K&&K({kind:"set part",part:H,value:G[f],valueIndex:f,values:G,templateInstance:this}),H.strings!==void 0)H._$setValue(G,H,f),f+=H.strings.length-2;else H._$setValue(G[f]);f++}}}class d{get _$isConnected(){return this._$parent?._$isConnected??this.__isConnected}constructor(G,f,H,$){this.type=o,this._$committedValue=J,this._$disconnectableChildren=void 0,this._$startNode=G,this._$endNode=f,this._$parent=H,this.options=$,this.__isConnected=$?.isConnected??!0,this._textSanitizer=void 0}get parentNode(){let G=j(this._$startNode).parentNode,f=this._$parent;if(f!==void 0&&G?.nodeType===11)G=f.parentNode;return G}get startNode(){return this._$startNode}get endNode(){return this._$endNode}_$setValue(G,f=this){if(this.parentNode===null)throw new Error("This `ChildPart` has no `parentNode` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's `innerHTML` or `textContent` can do this.");if(G=h(this,G,f),x(G)){if(G===J||G==null||G===""){if(this._$committedValue!==J)K&&K({kind:"commit nothing to child",start:this._$startNode,end:this._$endNode,parent:this._$parent,options:this.options}),this._$clear();this._$committedValue=J}else if(G!==this._$committedValue&&G!==R)this._commitText(G)}else if(G._$litType$!==void 0)this._commitTemplateResult(G);else if(G.nodeType!==void 0){if(this.options?.host===G){this._commitText("[probable mistake: rendered a template's host in itself (commonly caused by writing ${this} in a template]"),console.warn("Attempted to render the template host",G,"inside itself. This is almost always a mistake, and in dev mode ","we render some warning text. In production however, we'll ","render it, which will usually result in an error, and sometimes ","in the element disappearing from the DOM.");return}this._commitNode(G)}else if(Yf(G))this._commitIterable(G);else this._commitText(G)}_insert(G){return j(j(this._$startNode).parentNode).insertBefore(G,this._$endNode)}_commitNode(G){if(this._$committedValue!==G){if(this._$clear(),S!==s){let f=this._$startNode.parentNode?.nodeName;if(f==="STYLE"||f==="SCRIPT"){let H="Forbidden";if(f==="STYLE")H="Lit does not support binding inside style nodes. This is a security risk, as style injection attacks can exfiltrate data and spoof UIs. Consider instead using css`...` literals to compose styles, and do dynamic styling with css custom properties, ::parts, <slot>s, and by mutating the DOM rather than stylesheets.";else H="Lit does not support binding inside script nodes. This is a security risk, as it could allow arbitrary code execution.";throw new Error(H)}}K&&K({kind:"commit node",start:this._$startNode,parent:this._$parent,value:G,options:this.options}),this._$committedValue=this._insert(G)}}_commitText(G){if(this._$committedValue!==J&&x(this._$committedValue)){let f=j(this._$startNode).nextSibling;if(this._textSanitizer===void 0)this._textSanitizer=XG(f,"data","property");G=this._textSanitizer(G),K&&K({kind:"commit text",node:f,value:G,options:this.options}),f.data=G}else{let f=D.createTextNode("");if(this._commitNode(f),this._textSanitizer===void 0)this._textSanitizer=XG(f,"data","property");G=this._textSanitizer(G),K&&K({kind:"commit text",node:f,value:G,options:this.options}),f.data=G}this._$committedValue=G}_commitTemplateResult(G){let{values:f,["_$litType$"]:H}=G,$=typeof H==="number"?this._$getTemplate(G):(H.el===void 0&&(H.el=c.createElement(OG(H.h,H.h[0]),this.options)),H);if(this._$committedValue?._$template===$)K&&K({kind:"template updating",template:$,instance:this._$committedValue,parts:this._$committedValue._$parts,options:this.options,values:f}),this._$committedValue._update(f);else{let q=new yG($,this),X=q._clone(this.options);K&&K({kind:"template instantiated",template:$,instance:q,parts:q._$parts,options:this.options,fragment:X,values:f}),q._update(f),K&&K({kind:"template instantiated and updated",template:$,instance:q,parts:q._$parts,options:this.options,fragment:X,values:f}),this._commitNode(X),this._$committedValue=q}}_$getTemplate(G){let f=DG.get(G.strings);if(f===void 0)DG.set(G.strings,f=new c(G));return f}_commitIterable(G){if(!YG(this._$committedValue))this._$committedValue=[],this._$clear();let f=this._$committedValue,H=0,$;for(let q of G){if(H===f.length)f.push($=new d(this._insert(E()),this._insert(E()),this,this.options));else $=f[H];$._$setValue(q),H++}if(H<f.length)this._$clear($&&j($._$endNode).nextSibling,H),f.length=H}_$clear(G=j(this._$startNode).nextSibling,f){this._$notifyConnectionChanged?.(!1,!0,f);while(G&&G!==this._$endNode){let H=j(G).nextSibling;j(G).remove(),G=H}}setConnected(G){if(this._$parent===void 0)this.__isConnected=G,this._$notifyConnectionChanged?.(G);else throw new Error("part.setConnected() may only be called on a RootPart returned from render().")}}class g{get tagName(){return this.element.tagName}get _$isConnected(){return this._$parent._$isConnected}constructor(G,f,H,$,q){if(this.type=ZG,this._$committedValue=J,this._$disconnectableChildren=void 0,this.element=G,this.name=f,this._$parent=$,this.options=q,H.length>2||H[0]!==""||H[1]!=="")this._$committedValue=new Array(H.length-1).fill(new String),this.strings=H;else this._$committedValue=J;this._sanitizer=void 0}_$setValue(G,f=this,H,$){let q=this.strings,X=!1;if(q===void 0){if(G=h(this,G,f,0),X=!x(G)||G!==this._$committedValue&&G!==R,X)this._$committedValue=G}else{let Y=G;G=q[0];let Z,F;for(Z=0;Z<q.length-1;Z++){if(F=h(this,Y[H+Z],f,Z),F===R)F=this._$committedValue[Z];if(X||=!x(F)||F!==this._$committedValue[Z],F===J)G=J;else if(G!==J)G+=(F??"")+q[Z+1];this._$committedValue[Z]=F}}if(X&&!$)this._commitValue(G)}_commitValue(G){if(G===J)j(this.element).removeAttribute(this.name);else{if(this._sanitizer===void 0)this._sanitizer=S(this.element,this.name,"attribute");G=this._sanitizer(G??""),K&&K({kind:"commit attribute",element:this.element,name:this.name,value:G,options:this.options}),j(this.element).setAttribute(this.name,G??"")}}}class wG extends g{constructor(){super(...arguments);this.type=Bf}_commitValue(G){if(this._sanitizer===void 0)this._sanitizer=S(this.element,this.name,"property");G=this._sanitizer(G),K&&K({kind:"commit property",element:this.element,name:this.name,value:G,options:this.options}),this.element[this.name]=G===J?void 0:G}}class PG extends g{constructor(){super(...arguments);this.type=kf}_commitValue(G){K&&K({kind:"commit boolean attribute",element:this.element,name:this.name,value:!!(G&&G!==J),options:this.options}),j(this.element).toggleAttribute(this.name,!!G&&G!==J)}}class EG extends g{constructor(G,f,H,$,q){super(G,f,H,$,q);if(this.type=Af,this.strings!==void 0)throw new Error(`A \`<${G.localName}>\` has a \`@${f}=...\` listener with invalid content. Event listeners in templates must have exactly one expression and no surrounding text.`)}_$setValue(G,f=this){if(G=h(this,G,f,0)??J,G===R)return;let H=this._$committedValue,$=G===J&&H!==J||G.capture!==H.capture||G.once!==H.once||G.passive!==H.passive,q=G!==J&&(H===J||$);if(K&&K({kind:"commit event listener",element:this.element,name:this.name,value:G,options:this.options,removeListener:$,addListener:q,oldListener:H}),$)this.element.removeEventListener(this.name,this,H);if(q)this.element.addEventListener(this.name,this,G);this._$committedValue=G}handleEvent(G){if(typeof this._$committedValue==="function")this._$committedValue.call(this.options?.host??this.element,G);else this._$committedValue.handleEvent(G)}}class xG{constructor(G,f,H){this.element=G,this.type=KG,this._$disconnectableChildren=void 0,this._$parent=f,this.options=H}get _$isConnected(){return this._$parent._$isConnected}_$setValue(G){K&&K({kind:"commit to element binding",element:this.element,value:G,options:this.options}),h(this,G)}}var Wf=I.litHtmlPolyfillSupportDevMode;Wf?.(c,d);(I.litHtmlVersions??=[]).push("3.2.1");if(I.litHtmlVersions.length>1)P("multiple-versions","Multiple versions of Lit loaded. Loading multiple versions is not recommended.");var w=(G,f,H)=>{if(f==null)throw new TypeError(`The container to render into may not be ${f}`);let $=ff++,q=H?.renderBefore??f,X=q._$litPart$;if(K&&K({kind:"begin render",id:$,value:G,container:f,options:H,part:X}),X===void 0){let Y=H?.renderBefore??null;q._$litPart$=X=new d(f.insertBefore(E(),Y),Y,void 0,H??{})}return X._$setValue(G),K&&K({kind:"end render",id:$,value:G,container:f,options:H,part:X}),X};w.setSanitizer=$f,w.createSanitizer=XG,w._testOnlyClearSanitizerFactoryDoNotCallOrElse=qf;var jf=(G,f)=>G,FG=!0,cG;if(FG){let G=globalThis.litIssuedWarnings??=new Set;cG=(f,H)=>{if(H+=` See https://lit.dev/msg/${f} for more information.`,!G.has(H))console.warn(H),G.add(H)}}class N extends A{constructor(){super(...arguments);this.renderOptions={host:this},this.__childPart=void 0}createRenderRoot(){let G=super.createRenderRoot();return this.renderOptions.renderBefore??=G.firstChild,G}update(G){let f=this.render();if(!this.hasUpdated)this.renderOptions.isConnected=this.isConnected;super.update(G),this.__childPart=w(f,this.renderRoot,this.renderOptions)}connectedCallback(){super.connectedCallback(),this.__childPart?.setConnected(!0)}disconnectedCallback(){super.disconnectedCallback(),this.__childPart?.setConnected(!1)}render(){return R}}N._$litElement$=!0;N[jf("finalized",N)]=!0;globalThis.litElementHydrateSupport?.({LitElement:N});var Tf=FG?globalThis.litElementPolyfillSupportDevMode:globalThis.litElementPolyfillSupport;Tf?.({LitElement:N});(globalThis.litElementVersions??=[]).push("4.1.1");if(FG&&globalThis.litElementVersions.length>1)cG("multiple-versions","Multiple versions of Lit loaded. Loading multiple versions is not recommended.");var dG=(G)=>(f,H)=>{if(H!==void 0)H.addInitializer(()=>{customElements.define(G,f)});else customElements.define(G,f)};var gG=!0,mG;if(gG){let G=globalThis.litIssuedWarnings??=new Set;mG=(f,H)=>{if(H+=` See https://lit.dev/msg/${f} for more information.`,!G.has(H))console.warn(H),G.add(H)}}var _f=(G,f,H)=>{let $=f.hasOwnProperty(H);return f.constructor.createProperty(H,$?{...G,wrapped:!0}:G),$?Object.getOwnPropertyDescriptor(f,H):void 0},Mf={attribute:!0,type:String,converter:O,reflect:!1,hasChanged:u},Vf=(G=Mf,f,H)=>{let{kind:$,metadata:q}=H;if(gG&&q==null)mG("missing-class-metadata",`The class ${f} is missing decorator metadata. This could mean that you're using a compiler that supports decorators but doesn't support decorator metadata, such as TypeScript 5.1. Please update your compiler.`);let X=globalThis.litPropertyMetadata.get(q);if(X===void 0)globalThis.litPropertyMetadata.set(q,X=new Map);if(X.set(H.name,G),$==="accessor"){let{name:Y}=H;return{set(Z){let F=f.get.call(this);f.set.call(this,Z),this.requestUpdate(Y,F,G)},init(Z){if(Z!==void 0)this._$changeProperty(Y,void 0,G);return Z}}}else if($==="setter"){let{name:Y}=H;return function(Z){let F=this[Y];f.call(this,Z),this.requestUpdate(Y,F,G)}}throw new Error(`Unsupported decorator location: ${$}`)};function r(G){return(f,H)=>{return typeof H==="object"?Vf(G,f,H):_f(G,f,H)}}function vG(G){return r({...G,state:!0,attribute:!1})}var Nf=!0,Cf;if(Nf){let G=globalThis.litIssuedWarnings??=new Set;Cf=(f,H)=>{if(H+=f?` See https://lit.dev/msg/${f} for more information.`:"",!G.has(H))console.warn(H),G.add(H)}}async function JG(G,f,H,$,q){let X=await fetch(G,{method:f,headers:{"Content-Type":"application/json",...$},body:H?JSON.stringify(H):null,...q}),Y=X.headers.get("content-type"),Z;if(Y?.includes("application/json"))Z=await X.json();else Z=await X.text();return{ok:X.ok,status:X.status,statusText:X.statusText,headers:X.headers,data:Z}}var uG=async(G,f)=>await JG("/admin/api/cache","DELETE",void 0,G,f);var pG=async(G,f)=>await JG("/admin/api/cache","GET",void 0,G,f);class QG extends N{static styles=kG`
			.purge {
				cursor: pointer;
				padding: 0.5rem 1rem;
				color: var(--foreground);
				background-color: var(--ele-1);
				border: 1px solid var(--foreground-50);
				transition: all 100ms ease-in-out;
			}
			.purge:hover {
				background-color: var(--red-25);
				border-color: var(--red);
				color: var(--red);
			}
		`;async connectedCallback(){super.connectedCallback(),this.classList.add("wc-loaded"),await this._load()}render(){return hG`
			<div class="cache">
				<span class="count"><strong>${this.cacheCount}</strong> elements in the cache</span>
				<button class="purge" @click="${this._purge}">Purge</button>
			</div>
		`}async _load(){let G=await pG();if(!G.ok)return;if(typeof G.data!=="number"){console.warn(G.data);return}this.cacheCount=G.data}async _purge(){if(confirm("Are you sure?")){if(!(await uG({RequestVerificationToken:this.csrf})).ok)return;await this._load()}}}m([vG()],QG.prototype,"cacheCount",void 0),m([r()],QG.prototype,"csrf",void 0),QG=m([dG("cache-info")],QG);export{QG as CacheInfo};

//# debugId=468E2CC903F436AF64756E2164756E21
//# sourceMappingURL=cache-info.js.map
