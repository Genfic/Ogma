{
  "version": 3,
  "sources": ["..\\..\\FrontendCode\\typescript\\generated\\typed-fetch.ts", "..\\..\\FrontendCode\\typescript\\generated\\paths-internal.ts", "..\\..\\FrontendCode\\typescript\\src-helpers\\logger.ts", "..\\..\\FrontendCode\\typescript\\src\\admin\\components\\manage-infraction-component.ts"],
  "sourcesContent": [
    "interface TypedResponse<T> {\r\n\treadonly ok: boolean;\r\n\treadonly status: number;\r\n\treadonly statusText: string;\r\n\treadonly headers: Headers;\r\n\treadonly data: T;\r\n}\r\n\r\nexport async function typedFetch<TOut>(\r\n\turl: string,\r\n\tmethod: \"GET\" | \"POST\" | \"PUT\" | \"PATCH\" | \"DELETE\" | \"HEAD\" | string,\r\n\tbody?: object,\r\n\theaders?: HeadersInit,\r\n\toptions?: RequestInit,\r\n): Promise<Readonly<TypedResponse<TOut>>> {\r\n\tconst res = await fetch(url, {\r\n\t\tmethod: method,\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t...headers,\r\n\t\t},\r\n\t\tbody: body ? JSON.stringify(body) : null,\r\n\t\t...options,\r\n\t});\r\n\r\n\tconst contentType = res.headers.get(\"content-type\");\r\n\r\n\tlet data: TOut;\r\n\tif (contentType?.includes(\"application/json\")) {\r\n\t\tdata = await res.json();\r\n\t} else {\r\n\t\tdata = (await res.text()) as TOut;\r\n\t}\r\n\r\n\treturn {\r\n\t\tok: res.ok,\r\n\t\tstatus: res.status,\r\n\t\tstatusText: res.statusText,\r\n\t\theaders: res.headers,\r\n\t\tdata: data as TOut,\r\n\t};\r\n}\r\n",
    "import { typedFetch } from \"./typed-fetch\";\r\nimport type { CreateInfractionCommand, GetUserInfractionsResult, InfractionDto } from \"./types-internal\";\r\n\r\nexport const DeleteAdminApiCache = async (headers?: HeadersInit, options?: RequestInit) =>\r\n\tawait typedFetch<string>(\"/admin/api/cache\", \"DELETE\", undefined, headers, options);\r\n\r\nexport const DeleteAdminApiInfractions = async (infractionId: number, headers?: HeadersInit, options?: RequestInit) =>\r\n\tawait typedFetch<void>(`/admin/api/infractions/${infractionId}`, \"DELETE\", undefined, headers, options);\r\n\r\nexport const GetAdminApiCache = async (headers?: HeadersInit, options?: RequestInit) =>\r\n\tawait typedFetch<number | string>(\"/admin/api/cache\", \"GET\", undefined, headers, options);\r\n\r\nexport const GetAdminApiInfractionsUser = async (userId: number, headers?: HeadersInit, options?: RequestInit) =>\r\n\tawait typedFetch<GetUserInfractionsResult[]>(\r\n\t\t`/admin/api/infractions/user/${userId}`,\r\n\t\t\"GET\",\r\n\t\tundefined,\r\n\t\theaders,\r\n\t\toptions,\r\n\t);\r\n\r\nexport const GetAdminApiTelemetryGetImportantItemCounts = async (headers?: HeadersInit, options?: RequestInit) =>\r\n\tawait typedFetch<object>(\"/admin/api/telemetry/GetImportantItemCounts\", \"GET\", undefined, headers, options);\r\n\r\nexport const GetAdminApiTelemetryGetTableInfo = async (headers?: HeadersInit, options?: RequestInit) =>\r\n\tawait typedFetch<object>(\"/admin/api/telemetry/GetTableInfo\", \"GET\", undefined, headers, options);\r\n\r\nexport const GetInfractionDetails = async (infractionId: number, headers?: HeadersInit, options?: RequestInit) =>\r\n\tawait typedFetch<InfractionDto>(`/admin/api/infractions/${infractionId}`, \"GET\", undefined, headers, options);\r\n\r\nexport const PostAdminApiInfractions = async (\r\n\tbody: CreateInfractionCommand,\r\n\theaders?: HeadersInit,\r\n\toptions?: RequestInit,\r\n) => await typedFetch<InfractionDto>(\"/admin/api/infractions\", \"POST\", body, headers, options);\r\n",
    "/**\r\n * Check if the given variable is an object\r\n * @param {any} obj Variable to check\r\n * @returns {boolean} True if the variable is an object, false if it's a primitive\r\n */\r\nfunction _isObject(obj: unknown): boolean {\r\n\treturn obj === Object(obj);\r\n}\r\n\r\n/**\r\n * Creates a deep copy of the object through parsing and serializing JSON\r\n */\r\nfunction _deepCopy(o: object): object {\r\n\treturn JSON.parse(JSON.stringify({ ...o, __isCopied__: true }));\r\n}\r\n\r\nconst _getMessage = (o: unknown) => (_isObject(o) ? _deepCopy(o as object) : o);\r\n\r\n/**\r\n * Logger object to create better logging experience\r\n */\r\nexport const log = {\r\n\tlog: (o: unknown) => console.log(_getMessage(o)),\r\n\tinfo: (o: unknown) => console.info(_getMessage(o)),\r\n\twarn: (o: unknown) => console.warn(_getMessage(o)),\r\n\terror: (o: unknown) => console.error(_getMessage(o)),\r\n\tdebug: (o: unknown) => console.debug(_getMessage(o)),\r\n};\r\n",
    "import { PostAdminApiInfractions } from \"../../../generated/paths-internal\";\r\nimport type { InfractionType } from \"../../../generated/types-internal\";\r\nimport { log } from \"../../../src-helpers/logger\";\r\n\r\n// @ts-ignore\r\nVue.component(\"manage-infraction\", {\r\n\tprops: {\r\n\t\tcsrf: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\tuserId: {\r\n\t\t\ttype: Number,\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\ttypes: {\r\n\t\t\ttype: Array,\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t},\r\n\tdata: () => ({\r\n\t\ttype: null as InfractionType,\r\n\t\tdate: null as Date,\r\n\t\treason: null as string,\r\n\t\tvisible: false,\r\n\t}),\r\n\tmethods: {\r\n\t\thide: function () {\r\n\t\t\tthis.type = this.date = this.reason = null;\r\n\t\t\tthis.visible = false;\r\n\t\t},\r\n\r\n\t\tcreate: async function () {\r\n\t\t\tlog.log(\"submit\");\r\n\t\t\tconst res = await PostAdminApiInfractions(\r\n\t\t\t\t{\r\n\t\t\t\t\tuserId: this.userId,\r\n\t\t\t\t\treason: this.reason,\r\n\t\t\t\t\tendDate: this.date,\r\n\t\t\t\t\ttype: this.type,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tRequestVerificationToken: this.csrf,\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tif (!res.ok) return;\r\n\r\n\t\t\tlocation.reload();\r\n\t\t},\r\n\t},\r\n\ttemplate: `\r\n\t\t<div class=\"my-modal\" v-if=\"visible\" @click.self=\"hide\">\r\n\t\t\t<div class=\"content\">\r\n\t\t\t\t<strong>Create infraction</strong>\r\n\t\t\t\t<hr>\r\n\t\t\t  \r\n\t\t\t  \t<form class=\"form\" v-on:submit.prevent=\"create\">\r\n\t\t\t\t  <div class=\"o-form-group\">\r\n\t\t\t\t    <label for=\"type\">Infraction type</label>\r\n\t\t\t\t    <select id=\"type\" v-model=\"type\">\r\n\t\t\t\t      <option v-for=\"t in this.types\" \r\n\t\t\t\t              :value=\"t\" \r\n\t\t\t\t              :key=\"t\">\r\n\t\t\t\t        {{t}}\r\n\t\t\t\t      </option>\r\n\t\t\t\t    </select>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  \r\n\t\t\t\t  <div class=\"o-form-group\">\r\n\t\t\t\t    <label for=\"time\">Expiration date</label>\r\n\t\t\t\t    <input type=\"date\" id=\"time\" v-model=\"date\">\r\n\t\t\t\t  </div>\r\n\t\t\t\t  \r\n\t\t\t\t  <div class=\"o-form-group\">\r\n\t\t\t\t    <label for=\"reason\">Reason</label>\r\n\t\t\t\t    <textarea id=\"reason\" v-model=\"reason\"></textarea>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  \r\n\t\t\t\t  <div class=\"o-form-group\">\r\n                    <input type=\"submit\" value=\"Create\">\r\n\t\t\t\t  </div>\r\n\t\t\t    </form>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t`,\r\n});\r\n"
  ],
  "mappings": "AAQA,eAAsB,CAAgB,CACrC,EACA,EACA,EACA,EACA,EACyC,CACzC,IAAM,EAAM,MAAM,MAAM,EAAK,CAC5B,OAAQ,EACR,QAAS,CACR,eAAgB,sBACb,CACJ,EACA,KAAM,EAAO,KAAK,UAAU,CAAI,EAAI,QACjC,CACJ,CAAC,EAEK,EAAc,EAAI,QAAQ,IAAI,cAAc,EAE9C,EACJ,GAAI,GAAa,SAAS,kBAAkB,EAC3C,EAAO,MAAM,EAAI,KAAK,EAEtB,OAAQ,MAAM,EAAI,KAAK,EAGxB,MAAO,CACN,GAAI,EAAI,GACR,OAAQ,EAAI,OACZ,WAAY,EAAI,WAChB,QAAS,EAAI,QACb,KAAM,CACP,ECVM,IAAM,EAA0B,MACtC,EACA,EACA,IACI,MAAM,EAA0B,yBAA0B,OAAQ,EAAM,EAAS,CAAO,EC7B7F,SAAS,CAAS,CAAC,EAAuB,CACzC,OAAO,IAAQ,OAAO,CAAG,EAM1B,SAAS,CAAS,CAAC,EAAmB,CACrC,OAAO,KAAK,MAAM,KAAK,UAAU,IAAK,EAAG,aAAc,EAAK,CAAC,CAAC,EAG/D,IAAM,EAAc,CAAC,IAAgB,EAAU,CAAC,EAAI,EAAU,CAAW,EAAI,EAKhE,EAAM,CAClB,IAAK,CAAC,IAAe,QAAQ,IAAI,EAAY,CAAC,CAAC,EAC/C,KAAM,CAAC,IAAe,QAAQ,KAAK,EAAY,CAAC,CAAC,EACjD,KAAM,CAAC,IAAe,QAAQ,KAAK,EAAY,CAAC,CAAC,EACjD,MAAO,CAAC,IAAe,QAAQ,MAAM,EAAY,CAAC,CAAC,EACnD,MAAO,CAAC,IAAe,QAAQ,MAAM,EAAY,CAAC,CAAC,CACpD,ECtBA,IAAI,UAAU,oBAAqB,CAClC,MAAO,CACN,KAAM,CACL,KAAM,OACN,SAAU,EACX,EACA,OAAQ,CACP,KAAM,OACN,SAAU,EACX,EACA,MAAO,CACN,KAAM,MACN,SAAU,EACX,CACD,EACA,KAAM,KAAO,CACZ,KAAM,KACN,KAAM,KACN,OAAQ,KACR,QAAS,EACV,GACA,QAAS,CACR,KAAM,QAAS,EAAG,CACjB,KAAK,KAAO,KAAK,KAAO,KAAK,OAAS,KACtC,KAAK,QAAU,IAGhB,OAAQ,cAAe,EAAG,CAazB,GAZA,EAAI,IAAI,QAAQ,IACJ,MAAM,EACjB,CACC,OAAQ,KAAK,OACb,OAAQ,KAAK,OACb,QAAS,KAAK,KACd,KAAM,KAAK,IACZ,EACA,CACC,yBAA0B,KAAK,IAChC,CACD,GACS,GAAI,OAEb,SAAS,OAAO,EAElB,EACA,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAoCX,CAAC",
  "debugId": "0EA65452CA63EC3D64756E2164756E21",
  "names": []
}