var u=new DOMParser,l=(t)=>{return u.parseFromString(t,"text/html").body.firstElementChild};var d={["bold"]:{prefix:"**",suffix:"**"},["italic"]:{prefix:"*",suffix:"*"},["underline"]:{prefix:"_",suffix:"_"},["spoiler"]:{prefix:"||",suffix:"||"},["link"]:{prefix:"[",suffix:"]()"}},f=[...document.querySelectorAll("[data-md=true]")];for(let t of f){let i=l('<nav class="button-group toolbar"><button type="button" class="btn" data-action="bold" title="bold"><o-icon icon="lucide:bold" class="material-icons-outlined"></o-icon></button><button type="button" class="btn" data-action="italic" title="italic"><o-icon icon="lucide:italic" class="material-icons-outlined"></o-icon></button><button type="button" class="btn" data-action="underline" title="underline"><o-icon icon="lucide:underline" class="material-icons-outlined"></o-icon></button><button type="button" class="btn" data-action="spoiler" title="spoiler"><o-icon icon="lucide:eye-closed" class="material-icons-outlined"></o-icon></button><button type="button" class="btn" data-action="link" title="link"><o-icon icon="lucide:link" class="material-icons-outlined"></o-icon></button></nav>');for(let o of[...i.querySelectorAll("button.btn[data-action]")]){let s=o.dataset.action;o.addEventListener("click",()=>{let{prefix:e,suffix:a}=d[s],c=t.selectionStart,n=t.selectionEnd,r=t.value.substring(c,n);t.setRangeText(`${e}${r}${a}`,c,n,"preserve"),t.selectionStart=t.selectionEnd=n+e.length,t.focus()})}t.before(i)}

//# debugId=3476AACE06609ABF64756E2164756E21
//# sourceMappingURL=markdown-toolbar.js.map
