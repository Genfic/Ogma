{
  "version": 3,
  "sources": ["..\\..\\FrontendCode\\typescript\\src-helpers\\dom.ts", "..\\..\\FrontendCode\\typescript\\src\\editors\\markdown-toolbar.ts"],
  "sourcesContent": [
    "const parser = new DOMParser();\r\n\r\nexport const parseDom = (html: string): HTMLElement => {\r\n\treturn parser.parseFromString(html, \"text/html\").body.childNodes[0] as HTMLElement;\r\n};\r\n",
    "import { parseDom } from \"../../src-helpers/dom\";\r\n\r\nenum Action {\r\n\tbold = \"bold\",\r\n\titalic = \"italic\",\r\n\tunderline = \"underline\",\r\n\tspoiler = \"spoiler\",\r\n\tlink = \"link\",\r\n}\r\n\r\ninterface PrefixSuffix {\r\n\tprefix: string;\r\n\tsuffix: string;\r\n}\r\n\r\nconst tpl = `\r\n\t\t<nav class=\"button-group toolbar\">\r\n\t\t  <button type=\"button\" class=\"btn\" data-action=\"${Action.bold}\" title=\"${Action.bold}\">\r\n            <o-icon icon=\"lucide:bold\" class=\"material-icons-outlined\"></o-icon>\r\n\t\t  </button>\r\n\t\t  <button type=\"button\" class=\"btn\" data-action=\"${Action.italic}\" title=\"${Action.italic}\">\r\n            <o-icon icon=\"lucide:italic\" class=\"material-icons-outlined\" ></o-icon>\r\n\t\t  </button>\r\n\t\t  <button type=\"button\" class=\"btn\" data-action=\"${Action.underline}\" title=\"${Action.underline}\">\r\n            <o-icon icon=\"lucide:underline\" class=\"material-icons-outlined\" ></o-icon>\r\n\t\t  </button>\r\n\t\t  <button type=\"button\" class=\"btn\" data-action=\"${Action.spoiler}\" title=\"${Action.spoiler}\">\r\n            <o-icon icon=\"lucide:eye-closed\" class=\"material-icons-outlined\" ></o-icon>\r\n\t\t  </button>\r\n\t\t  <button type=\"button\" class=\"btn\" data-action=\"${Action.link}\" title=\"${Action.link}\">\r\n            <o-icon icon=\"lucide:link\" class=\"material-icons-outlined\" ></o-icon>\r\n\t\t  </button>\r\n\t\t</nav>`\r\n\t.split(\"\\n\")\r\n\t.map((l) => l.trim())\r\n\t.join(\"\");\r\n\r\nconst map = new Map<Action, PrefixSuffix>([\r\n\t[Action.bold, { prefix: \"**\", suffix: \"**\" }],\r\n\t[Action.italic, { prefix: \"*\", suffix: \"*\" }],\r\n\t[Action.underline, { prefix: \"_\", suffix: \"_\" }],\r\n\t[Action.spoiler, { prefix: \"||\", suffix: \"||\" }],\r\n\t[Action.link, { prefix: \"[\", suffix: \"]()\" }],\r\n]);\r\n\r\nconst areas = [...document.querySelectorAll(\"[data-md=true]\")] as (HTMLTextAreaElement | HTMLInputElement)[];\r\n\r\nfor (const area of areas) {\r\n\tconst vDom = parseDom(tpl);\r\n\r\n\tfor (const btn of [...vDom.querySelectorAll(\"button.btn[data-action]\")] as HTMLElement[]) {\r\n\t\tconst action: Action = Action[btn.dataset.action];\r\n\t\tbtn.addEventListener(\"click\", (_) => {\r\n\t\t\tconst { prefix, suffix } = map[action];\r\n\t\t\tconst start = area.selectionStart;\r\n\t\t\tconst end = area.selectionEnd;\r\n\r\n\t\t\tconst text = area.value.substring(start, end);\r\n\r\n\t\t\tarea.setRangeText(`${prefix}${text}${suffix}`, start, end, \"preserve\");\r\n\t\t\tarea.selectionStart = area.selectionEnd = end + prefix.length;\r\n\t\t\tarea.focus();\r\n\t\t});\r\n\t}\r\n\r\n\tarea.before(vDom);\r\n}\r\n"
  ],
  "mappings": "AAAA,IAAM,EAAS,IAAI,UAEN,EAAW,CAAC,IAA8B,CACtD,OAAO,EAAO,gBAAgB,EAAM,WAAW,EAAE,KAAK,WAAW,ICDlE,IAAK,GAAL,CAAK,IAAL,CACC,OAAO,OACP,SAAS,SACT,YAAY,YACZ,UAAU,UACV,OAAO,SALH,QAaL,IAAM,EAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAkBV,MAAM;AAAA,CAAI,EACV,IAAI,CAAC,IAAM,EAAE,KAAK,CAAC,EACnB,KAAK,EAAE,EAEH,EAAM,IAAI,IAA0B,CACzC,CAAC,OAAa,CAAE,OAAQ,KAAM,OAAQ,IAAK,CAAC,EAC5C,CAAC,SAAe,CAAE,OAAQ,IAAK,OAAQ,GAAI,CAAC,EAC5C,CAAC,YAAkB,CAAE,OAAQ,IAAK,OAAQ,GAAI,CAAC,EAC/C,CAAC,UAAgB,CAAE,OAAQ,KAAM,OAAQ,IAAK,CAAC,EAC/C,CAAC,OAAa,CAAE,OAAQ,IAAK,OAAQ,KAAM,CAAC,CAC7C,CAAC,EAEK,EAAQ,CAAC,GAAG,SAAS,iBAAiB,gBAAgB,CAAC,EAE7D,QAAW,KAAQ,EAAO,CACzB,IAAM,EAAO,EAAS,CAAG,EAEzB,QAAW,IAAO,CAAC,GAAG,EAAK,iBAAiB,yBAAyB,CAAC,EAAoB,CACzF,IAAM,EAAiB,EAAO,EAAI,QAAQ,QAC1C,EAAI,iBAAiB,QAAS,CAAC,IAAM,CACpC,IAAQ,SAAQ,UAAW,EAAI,GACzB,EAAQ,EAAK,eACb,EAAM,EAAK,aAEX,EAAO,EAAK,MAAM,UAAU,EAAO,CAAG,EAE5C,EAAK,aAAa,GAAG,IAAS,IAAO,IAAU,EAAO,EAAK,UAAU,EACrE,EAAK,eAAiB,EAAK,aAAe,EAAM,EAAO,OACvD,EAAK,MAAM,EACX,EAGF,EAAK,OAAO,CAAI",
  "debugId": "DB0F357B4E7D142F64756E2164756E21",
  "names": []
}