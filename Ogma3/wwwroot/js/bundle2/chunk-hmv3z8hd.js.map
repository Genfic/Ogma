{
  "version": 3,
  "sources": ["..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\version.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\disclose-version.js", "..\\..\\..\\FrontendCode\\node_modules\\esm-env\\true.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\shared\\utils.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\constants.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\reactivity\\equality.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\errors.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\flags\\index.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\constants.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dev\\tracing.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\warnings.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dev\\ownership.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\shared\\errors.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\context.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\reactivity\\sources.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\hydration.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dev\\equality.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\operations.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\reactivity\\deriveds.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\reactivity\\effects.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\task.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\runtime.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\proxy.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\elements\\misc.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\elements\\bindings\\shared.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\elements\\events.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\reconciler.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\template.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\blocks\\svelte-head.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\utils.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\render.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\blocks\\if.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\blocks\\each.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\blocks\\html.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\blocks\\slot.js", "..\\..\\..\\FrontendCode\\node_modules\\clsx\\dist\\clsx.mjs", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\shared\\attributes.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\elements\\class.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\elements\\style.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\elements\\attributes.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\elements\\bindings\\input.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\elements\\bindings\\this.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\legacy\\event-modifiers.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\elements\\bindings\\size.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\reactivity\\store.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\reactivity\\props.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\legacy\\legacy-client.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\internal\\client\\dom\\elements\\custom-element.js", "..\\..\\..\\FrontendCode\\node_modules\\svelte\\src\\index-client.js"],
  "sourcesContent": [
    "// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n * @type {string}\n */\nexport const VERSION = '5.25.7';\nexport const PUBLIC_VERSION = '5';\n",
    "import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined') {\n\t// @ts-expect-error\n\t((window.__svelte ??= {}).v ??= new Set()).add(PUBLIC_VERSION);\n}\n",
    "export default true;\n",
    "// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var index_of = Array.prototype.indexOf;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\nexport var is_extensible = Object.isExtensible;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * TODO replace with Promise.withResolvers once supported widely enough\n * @template T\n */\nexport function deferred() {\n\t/** @type {(value: T) => void} */\n\tvar resolve;\n\n\t/** @type {(reason: any) => void} */\n\tvar reject;\n\n\t/** @type {Promise<T>} */\n\tvar promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\n\t// @ts-expect-error\n\treturn { promise, resolve, reject };\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n",
    "export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const BOUNDARY_EFFECT = 1 << 7;\nexport const UNOWNED = 1 << 8;\nexport const DISCONNECTED = 1 << 9;\nexport const CLEAN = 1 << 10;\nexport const DIRTY = 1 << 11;\nexport const MAYBE_DIRTY = 1 << 12;\nexport const INERT = 1 << 13;\nexport const DESTROYED = 1 << 14;\nexport const EFFECT_RAN = 1 << 15;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 16;\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\nexport const LEGACY_DERIVED_PROP = 1 << 17;\nexport const INSPECT_EFFECT = 1 << 18;\nexport const HEAD_EFFECT = 1 << 19;\nexport const EFFECT_HAS_DERIVED = 1 << 20;\nexport const EFFECT_IS_UPDATING = 1 << 21;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const STATE_SYMBOL_METADATA = Symbol('$state metadata');\nexport const LEGACY_PROPS = Symbol('legacy props');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\n",
    "/** @import { Equals } from '#client' */\n/** @type {Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function not_equal(a, b) {\n\treturn a !== b;\n}\n\n/** @type {Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n",
    "/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead\\nhttps://svelte.dev/e/bind_invalid_checkbox_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_checkbox_value`);\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)\\nhttps://svelte.dev/e/bind_invalid_export`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_export`);\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\`\\nhttps://svelte.dev/e/bind_not_bindable`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_not_bindable`);\n\t}\n}\n\n/**\n * %parent% called `%method%` on an instance of %component%, which is no longer valid in Svelte 5\n * @param {string} parent\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(parent, method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\n${parent} called \\`${method}\\` on an instance of ${component}, which is no longer valid in Svelte 5\\nhttps://svelte.dev/e/component_api_changed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_changed`);\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working.\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working.\\nhttps://svelte.dev/e/component_api_invalid_new`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_invalid_new`);\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively\\nhttps://svelte.dev/e/derived_references_self`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/derived_references_self`);\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}\\nhttps://svelte.dev/e/each_key_duplicate`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/each_key_duplicate`);\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function\\nhttps://svelte.dev/e/effect_in_teardown`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_teardown`);\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect\\nhttps://svelte.dev/e/effect_in_unowned_derived`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_unowned_derived`);\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)\\nhttps://svelte.dev/e/effect_orphan`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_orphan`);\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\\nhttps://svelte.dev/e/effect_update_depth_exceeded`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_update_depth_exceeded`);\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application\\nhttps://svelte.dev/e/hydration_failed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/hydration_failed`);\n\t}\n}\n\n/**\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\n * @returns {never}\n */\nexport function invalid_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\`\\nhttps://svelte.dev/e/invalid_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode\\nhttps://svelte.dev/e/lifecycle_legacy_only`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_legacy_only`);\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value\\nhttps://svelte.dev/e/props_invalid_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_invalid_value`);\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly\\nhttps://svelte.dev/e/props_rest_readonly`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_rest_readonly`);\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files\\nhttps://svelte.dev/e/rune_outside_svelte`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/rune_outside_svelte`);\n\t}\n}\n\n/**\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\n * @returns {never}\n */\nexport function state_descriptors_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.\\nhttps://svelte.dev/e/state_descriptors_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_descriptors_fixed`);\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object\\nhttps://svelte.dev/e/state_prototype_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_prototype_fixed`);\n\t}\n}\n\n/**\n * Updating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\`\\nhttps://svelte.dev/e/state_unsafe_mutation`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_mutation`);\n\t}\n}",
    "export let legacy_mode_flag = false;\nexport let tracing_mode_flag = false;\n\nexport function enable_legacy_mode_flag() {\n\tlegacy_mode_flag = true;\n}\n\nexport function enable_tracing_mode_flag() {\n\ttracing_mode_flag = true;\n}\n",
    "export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_HTML = 'http://www.w3.org/1999/xhtml';\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n",
    "/** @import { Derived, Reaction, Signal, Value } from '#client' */\nimport { UNINITIALIZED } from '../../../constants.js';\nimport { snapshot } from '../../shared/clone.js';\nimport { define_property } from '../../shared/utils.js';\nimport { DERIVED, STATE_SYMBOL } from '../constants.js';\nimport { effect_tracking } from '../reactivity/effects.js';\nimport { active_reaction, captured_signals, set_captured_signals, untrack } from '../runtime.js';\n\n/** @type { any } */\nexport let tracing_expressions = null;\n\n/**\n * @param { Value } signal\n * @param { { read: Error[] } } [entry]\n */\nfunction log_entry(signal, entry) {\n\tconst debug = signal.debug;\n\tconst value = signal.trace_need_increase ? signal.trace_v : signal.v;\n\n\tif (value === UNINITIALIZED) {\n\t\treturn;\n\t}\n\n\tif (debug) {\n\t\tvar previous_captured_signals = captured_signals;\n\t\tvar captured = new Set();\n\t\tset_captured_signals(captured);\n\t\ttry {\n\t\t\tuntrack(() => {\n\t\t\t\tdebug();\n\t\t\t});\n\t\t} finally {\n\t\t\tset_captured_signals(previous_captured_signals);\n\t\t}\n\t\tif (captured.size > 0) {\n\t\t\tfor (const dep of captured) {\n\t\t\t\tlog_entry(dep);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n\n\tconst type = (signal.f & DERIVED) !== 0 ? '$derived' : '$state';\n\tconst current_reaction = /** @type {Reaction} */ (active_reaction);\n\tconst dirty = signal.wv > current_reaction.wv || current_reaction.wv === 0;\n\n\t// eslint-disable-next-line no-console\n\tconsole.groupCollapsed(\n\t\t`%c${type}`,\n\t\tdirty ? 'color: CornflowerBlue; font-weight: bold' : 'color: grey; font-weight: bold',\n\t\ttypeof value === 'object' && value !== null && STATE_SYMBOL in value\n\t\t\t? snapshot(value, true)\n\t\t\t: value\n\t);\n\n\tif (type === '$derived') {\n\t\tconst deps = new Set(/** @type {Derived} */ (signal).deps);\n\t\tfor (const dep of deps) {\n\t\t\tlog_entry(dep);\n\t\t}\n\t}\n\n\tif (signal.created) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(signal.created);\n\t}\n\n\tif (signal.updated) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(signal.updated);\n\t}\n\n\tconst read = entry?.read;\n\n\tif (read && read.length > 0) {\n\t\tfor (var stack of read) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(stack);\n\t\t}\n\t}\n\n\t// eslint-disable-next-line no-console\n\tconsole.groupEnd();\n}\n\n/**\n * @template T\n * @param {() => string} label\n * @param {() => T} fn\n */\nexport function trace(label, fn) {\n\tvar previously_tracing_expressions = tracing_expressions;\n\ttry {\n\t\ttracing_expressions = { entries: new Map(), reaction: active_reaction };\n\n\t\tvar start = performance.now();\n\t\tvar value = fn();\n\t\tvar time = (performance.now() - start).toFixed(2);\n\n\t\tif (!effect_tracking()) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(`${label()} %cran outside of an effect (${time}ms)`, 'color: grey');\n\t\t} else if (tracing_expressions.entries.size === 0) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(`${label()} %cno reactive dependencies (${time}ms)`, 'color: grey');\n\t\t} else {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.group(`${label()} %c(${time}ms)`, 'color: grey');\n\n\t\t\tvar entries = tracing_expressions.entries;\n\n\t\t\ttracing_expressions = null;\n\n\t\t\tfor (const [signal, entry] of entries) {\n\t\t\t\tlog_entry(signal, entry);\n\t\t\t}\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.groupEnd();\n\t\t}\n\n\t\tif (previously_tracing_expressions !== null && tracing_expressions !== null) {\n\t\t\tfor (const [signal, entry] of tracing_expressions.entries) {\n\t\t\t\tvar prev_entry = previously_tracing_expressions.get(signal);\n\n\t\t\t\tif (prev_entry === undefined) {\n\t\t\t\t\tpreviously_tracing_expressions.set(signal, entry);\n\t\t\t\t} else {\n\t\t\t\t\tprev_entry.read.push(...entry.read);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t} finally {\n\t\ttracing_expressions = previously_tracing_expressions;\n\t}\n}\n\n/**\n * @param {string} label\n */\nexport function get_stack(label) {\n\tlet error = Error();\n\tconst stack = error.stack;\n\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = ['\\n'];\n\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\n\t\t\tif (line === 'Error') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (line.includes('validate_each_keys')) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\n\t\tif (new_lines.length === 1) {\n\t\t\treturn null;\n\t\t}\n\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: new_lines.join('\\n')\n\t\t});\n\n\t\tdefine_property(error, 'name', {\n\t\t\t// 'Error' suffix is required for stack traces to be rendered properly\n\t\t\tvalue: `${label}Error`\n\t\t});\n\t}\n\treturn error;\n}\n",
    "/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\nvar bold = 'font-weight: bold';\nvar normal = 'font-weight: normal';\n\n/**\n * Assignment to `%property%` property (%location%) will evaluate to the right-hand side, not the value of `%property%` following the assignment. This may result in unexpected behaviour.\n * @param {string} property\n * @param {string} location\n */\nexport function assignment_value_stale(property, location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] assignment_value_stale\\n%cAssignment to \\`${property}\\` property (${location}) will evaluate to the right-hand side, not the value of \\`${property}\\` following the assignment. This may result in unexpected behaviour.\\nhttps://svelte.dev/e/assignment_value_stale`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/assignment_value_stale`);\n\t}\n}\n\n/**\n * `%binding%` (%location%) is binding to a non-reactive property\n * @param {string} binding\n * @param {string | undefined | null} [location]\n */\nexport function binding_property_non_reactive(binding, location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] binding_property_non_reactive\\n%c${location ? `\\`${binding}\\` (${location}) is binding to a non-reactive property` : `\\`${binding}\\` is binding to a non-reactive property`}\\nhttps://svelte.dev/e/binding_property_non_reactive`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/binding_property_non_reactive`);\n\t}\n}\n\n/**\n * Your `console.%method%` contained `$state` proxies. Consider using `$inspect(...)` or `$state.snapshot(...)` instead\n * @param {string} method\n */\nexport function console_log_state(method) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] console_log_state\\n%cYour \\`console.${method}\\` contained \\`$state\\` proxies. Consider using \\`$inspect(...)\\` or \\`$state.snapshot(...)\\` instead\\nhttps://svelte.dev/e/console_log_state`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/console_log_state`);\n\t}\n}\n\n/**\n * %handler% should be a function. Did you mean to %suggestion%?\n * @param {string} handler\n * @param {string} suggestion\n */\nexport function event_handler_invalid(handler, suggestion) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] event_handler_invalid\\n%c${handler} should be a function. Did you mean to ${suggestion}?\\nhttps://svelte.dev/e/event_handler_invalid`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/event_handler_invalid`);\n\t}\n}\n\n/**\n * The `%attribute%` attribute on `%html%` changed its value between server and client renders. The client value, `%value%`, will be ignored in favour of the server value\n * @param {string} attribute\n * @param {string} html\n * @param {string} value\n */\nexport function hydration_attribute_changed(attribute, html, value) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_attribute_changed\\n%cThe \\`${attribute}\\` attribute on \\`${html}\\` changed its value between server and client renders. The client value, \\`${value}\\`, will be ignored in favour of the server value\\nhttps://svelte.dev/e/hydration_attribute_changed`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_attribute_changed`);\n\t}\n}\n\n/**\n * The value of an `{@html ...}` block %location% changed between server and client renders. The client value will be ignored in favour of the server value\n * @param {string | undefined | null} [location]\n */\nexport function hydration_html_changed(location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_html_changed\\n%c${location ? `The value of an \\`{@html ...}\\` block ${location} changed between server and client renders. The client value will be ignored in favour of the server value` : 'The value of an `{@html ...}` block changed between server and client renders. The client value will be ignored in favour of the server value'}\\nhttps://svelte.dev/e/hydration_html_changed`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_html_changed`);\n\t}\n}\n\n/**\n * Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near %location%\n * @param {string | undefined | null} [location]\n */\nexport function hydration_mismatch(location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_mismatch\\n%c${location ? `Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near ${location}` : 'Hydration failed because the initial UI does not match what was rendered on the server'}\\nhttps://svelte.dev/e/hydration_mismatch`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_mismatch`);\n\t}\n}\n\n/**\n * The `render` function passed to `createRawSnippet` should return HTML for a single element\n */\nexport function invalid_raw_snippet_render() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] invalid_raw_snippet_render\\n%cThe \\`render\\` function passed to \\`createRawSnippet\\` should return HTML for a single element\\nhttps://svelte.dev/e/invalid_raw_snippet_render`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/invalid_raw_snippet_render`);\n\t}\n}\n\n/**\n * Detected a migrated `$:` reactive block in `%filename%` that both accesses and updates the same reactive value. This may cause recursive updates when converted to an `$effect`.\n * @param {string} filename\n */\nexport function legacy_recursive_reactive_block(filename) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] legacy_recursive_reactive_block\\n%cDetected a migrated \\`$:\\` reactive block in \\`${filename}\\` that both accesses and updates the same reactive value. This may cause recursive updates when converted to an \\`$effect\\`.\\nhttps://svelte.dev/e/legacy_recursive_reactive_block`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/legacy_recursive_reactive_block`);\n\t}\n}\n\n/**\n * Tried to unmount a component that was not mounted\n */\nexport function lifecycle_double_unmount() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] lifecycle_double_unmount\\n%cTried to unmount a component that was not mounted\\nhttps://svelte.dev/e/lifecycle_double_unmount`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/lifecycle_double_unmount`);\n\t}\n}\n\n/**\n * %parent% passed a value to %child% with `bind:`, but the value is owned by %owner%. Consider creating a binding between %owner% and %parent%\n * @param {string} parent\n * @param {string} child\n * @param {string} owner\n */\nexport function ownership_invalid_binding(parent, child, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ownership_invalid_binding\\n%c${parent} passed a value to ${child} with \\`bind:\\`, but the value is owned by ${owner}. Consider creating a binding between ${owner} and ${parent}\\nhttps://svelte.dev/e/ownership_invalid_binding`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/ownership_invalid_binding`);\n\t}\n}\n\n/**\n * %component% mutated a value owned by %owner%. This is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead\n * @param {string | undefined | null} [component]\n * @param {string | undefined | null} [owner]\n */\nexport function ownership_invalid_mutation(component, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ownership_invalid_mutation\\n%c${component ? `${component} mutated a value owned by ${owner}. This is strongly discouraged. Consider passing values to child components with \\`bind:\\`, or use a callback instead` : 'Mutating a value outside the component that created it is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead'}\\nhttps://svelte.dev/e/ownership_invalid_mutation`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/ownership_invalid_mutation`);\n\t}\n}\n\n/**\n * Reactive `$state(...)` proxies and the values they proxy have different identities. Because of this, comparisons with `%operator%` will produce unexpected results\n * @param {string} operator\n */\nexport function state_proxy_equality_mismatch(operator) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] state_proxy_equality_mismatch\\n%cReactive \\`$state(...)\\` proxies and the values they proxy have different identities. Because of this, comparisons with \\`${operator}\\` will produce unexpected results\\nhttps://svelte.dev/e/state_proxy_equality_mismatch`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/state_proxy_equality_mismatch`);\n\t}\n}\n\n/**\n * The `slide` transition does not work correctly for elements with `display: %value%`\n * @param {string} value\n */\nexport function transition_slide_display(value) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] transition_slide_display\\n%cThe \\`slide\\` transition does not work correctly for elements with \\`display: ${value}\\`\\nhttps://svelte.dev/e/transition_slide_display`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/transition_slide_display`);\n\t}\n}",
    "/** @import { ProxyMetadata } from '#client' */\n/** @typedef {{ file: string, line: number, column: number }} Location */\n\nimport { STATE_SYMBOL_METADATA } from '../constants.js';\nimport { render_effect, user_pre_effect } from '../reactivity/effects.js';\nimport { dev_current_component_function } from '../context.js';\nimport { get_prototype_of } from '../../shared/utils.js';\nimport * as w from '../warnings.js';\nimport { FILENAME, UNINITIALIZED } from '../../../constants.js';\n\n/** @type {Record<string, Array<{ start: Location, end: Location, component: Function }>>} */\nconst boundaries = {};\n\nconst chrome_pattern = /at (?:.+ \\()?(.+):(\\d+):(\\d+)\\)?$/;\nconst firefox_pattern = /@(.+):(\\d+):(\\d+)$/;\n\nfunction get_stack() {\n\tconst stack = new Error().stack;\n\tif (!stack) return null;\n\n\tconst entries = [];\n\n\tfor (const line of stack.split('\\n')) {\n\t\tlet match = chrome_pattern.exec(line) ?? firefox_pattern.exec(line);\n\n\t\tif (match) {\n\t\t\tentries.push({\n\t\t\t\tfile: match[1],\n\t\t\t\tline: +match[2],\n\t\t\t\tcolumn: +match[3]\n\t\t\t});\n\t\t}\n\t}\n\n\treturn entries;\n}\n\n/**\n * Determines which `.svelte` component is responsible for a given state change\n * @returns {Function | null}\n */\nexport function get_component() {\n\t// first 4 lines are svelte internals; adjust this number if we change the internal call stack\n\tconst stack = get_stack()?.slice(4);\n\tif (!stack) return null;\n\n\tfor (let i = 0; i < stack.length; i++) {\n\t\tconst entry = stack[i];\n\t\tconst modules = boundaries[entry.file];\n\t\tif (!modules) {\n\t\t\t// If the first entry is not a component, that means the modification very likely happened\n\t\t\t// within a .svelte.js file, possibly triggered by a component. Since these files are not part\n\t\t\t// of the bondaries/component context heuristic, we need to bail in this case, else we would\n\t\t\t// have false positives when the .svelte.ts file provides a state creator function, encapsulating\n\t\t\t// the state and its mutations, and is being called from a component other than the one who\n\t\t\t// called the state creator function.\n\t\t\tif (i === 0) return null;\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (const module of modules) {\n\t\t\tif (module.end == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (module.start.line < entry.line && module.end.line > entry.line) {\n\t\t\t\treturn module.component;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport const ADD_OWNER = Symbol('ADD_OWNER');\n\n/**\n * Together with `mark_module_end`, this function establishes the boundaries of a `.svelte` file,\n * such that subsequent calls to `get_component` can tell us which component is responsible\n * for a given state change\n */\nexport function mark_module_start() {\n\tconst start = get_stack()?.[2];\n\n\tif (start) {\n\t\t(boundaries[start.file] ??= []).push({\n\t\t\tstart,\n\t\t\t// @ts-expect-error\n\t\t\tend: null,\n\t\t\t// @ts-expect-error we add the component at the end, since HMR will overwrite the function\n\t\t\tcomponent: null\n\t\t});\n\t}\n}\n\n/**\n * @param {Function} component\n */\nexport function mark_module_end(component) {\n\tconst end = get_stack()?.[2];\n\n\tif (end) {\n\t\tconst boundaries_file = boundaries[end.file];\n\t\tconst boundary = boundaries_file[boundaries_file.length - 1];\n\n\t\tboundary.end = end;\n\t\tboundary.component = component;\n\t}\n}\n\n/**\n * @param {any} object\n * @param {any | null} owner\n * @param {boolean} [global]\n * @param {boolean} [skip_warning]\n */\nexport function add_owner(object, owner, global = false, skip_warning = false) {\n\tif (object && !global) {\n\t\tconst component = dev_current_component_function;\n\t\tconst metadata = object[STATE_SYMBOL_METADATA];\n\t\tif (metadata && !has_owner(metadata, component)) {\n\t\t\tlet original = get_owner(metadata);\n\n\t\t\tif (owner && owner[FILENAME] !== component[FILENAME] && !skip_warning) {\n\t\t\t\tw.ownership_invalid_binding(component[FILENAME], owner[FILENAME], original[FILENAME]);\n\t\t\t}\n\t\t}\n\t}\n\n\tadd_owner_to_object(object, owner, new Set());\n}\n\n/**\n * @param {() => unknown} get_object\n * @param {any} Component\n * @param {boolean} [skip_warning]\n */\nexport function add_owner_effect(get_object, Component, skip_warning = false) {\n\tuser_pre_effect(() => {\n\t\tadd_owner(get_object(), Component, false, skip_warning);\n\t});\n}\n\n/**\n * @param {any} _this\n * @param {Function} owner\n * @param {Array<() => any>} getters\n * @param {boolean} skip_warning\n */\nexport function add_owner_to_class(_this, owner, getters, skip_warning) {\n\t_this[ADD_OWNER].current ||= getters.map(() => UNINITIALIZED);\n\n\tfor (let i = 0; i < getters.length; i += 1) {\n\t\tconst current = getters[i]();\n\t\t// For performance reasons we only re-add the owner if the state has changed\n\t\tif (current !== _this[ADD_OWNER][i]) {\n\t\t\t_this[ADD_OWNER].current[i] = current;\n\t\t\tadd_owner(current, owner, false, skip_warning);\n\t\t}\n\t}\n}\n\n/**\n * @param {ProxyMetadata | null} from\n * @param {ProxyMetadata} to\n */\nexport function widen_ownership(from, to) {\n\tif (to.owners === null) {\n\t\treturn;\n\t}\n\n\twhile (from) {\n\t\tif (from.owners === null) {\n\t\t\tto.owners = null;\n\t\t\tbreak;\n\t\t}\n\n\t\tfor (const owner of from.owners) {\n\t\t\tto.owners.add(owner);\n\t\t}\n\n\t\tfrom = from.parent;\n\t}\n}\n\n/**\n * @param {any} object\n * @param {Function | null} owner If `null`, then the object is globally owned and will not be checked\n * @param {Set<any>} seen\n */\nfunction add_owner_to_object(object, owner, seen) {\n\tconst metadata = /** @type {ProxyMetadata} */ (object?.[STATE_SYMBOL_METADATA]);\n\n\tif (metadata) {\n\t\t// this is a state proxy, add owner directly, if not globally shared\n\t\tif ('owners' in metadata && metadata.owners != null) {\n\t\t\tif (owner) {\n\t\t\t\tmetadata.owners.add(owner);\n\t\t\t} else {\n\t\t\t\tmetadata.owners = null;\n\t\t\t}\n\t\t}\n\t} else if (object && typeof object === 'object') {\n\t\tif (seen.has(object)) return;\n\t\tseen.add(object);\n\t\tif (ADD_OWNER in object && object[ADD_OWNER]) {\n\t\t\t// this is a class with state fields. we put this in a render effect\n\t\t\t// so that if state is replaced (e.g. `instance.name = { first, last }`)\n\t\t\t// the new state is also co-owned by the caller of `getContext`\n\t\t\trender_effect(() => {\n\t\t\t\tobject[ADD_OWNER](owner);\n\t\t\t});\n\t\t} else {\n\t\t\tvar proto = get_prototype_of(object);\n\n\t\t\tif (proto === Object.prototype) {\n\t\t\t\t// recurse until we find a state proxy\n\t\t\t\tfor (const key in object) {\n\t\t\t\t\tif (Object.getOwnPropertyDescriptor(object, key)?.get) {\n\t\t\t\t\t\t// Similar to the class case; the getter could update with a new state\n\t\t\t\t\t\tlet current = UNINITIALIZED;\n\t\t\t\t\t\trender_effect(() => {\n\t\t\t\t\t\t\tconst next = object[key];\n\t\t\t\t\t\t\tif (current !== next) {\n\t\t\t\t\t\t\t\tcurrent = next;\n\t\t\t\t\t\t\t\tadd_owner_to_object(next, owner, seen);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tadd_owner_to_object(object[key], owner, seen);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (proto === Array.prototype) {\n\t\t\t\t// recurse until we find a state proxy\n\t\t\t\tfor (let i = 0; i < object.length; i += 1) {\n\t\t\t\t\tadd_owner_to_object(object[i], owner, seen);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {ProxyMetadata} metadata\n * @param {Function} component\n * @returns {boolean}\n */\nfunction has_owner(metadata, component) {\n\tif (metadata.owners === null) {\n\t\treturn true;\n\t}\n\n\treturn (\n\t\tmetadata.owners.has(component) ||\n\t\t// This helps avoid false positives when using HMR, where the component function is replaced\n\t\t(FILENAME in component &&\n\t\t\t[...metadata.owners].some(\n\t\t\t\t(owner) => /** @type {any} */ (owner)[FILENAME] === component[FILENAME]\n\t\t\t)) ||\n\t\t(metadata.parent !== null && has_owner(metadata.parent, component))\n\t);\n}\n\n/**\n * @param {ProxyMetadata} metadata\n * @returns {any}\n */\nfunction get_owner(metadata) {\n\treturn (\n\t\tmetadata?.owners?.values().next().value ??\n\t\tget_owner(/** @type {ProxyMetadata} */ (metadata.parent))\n\t);\n}\n\nlet skip = false;\n\n/**\n * @param {() => any} fn\n */\nexport function skip_ownership_validation(fn) {\n\tskip = true;\n\tfn();\n\tskip = false;\n}\n\n/**\n * @param {ProxyMetadata} metadata\n */\nexport function check_ownership(metadata) {\n\tif (skip) return;\n\n\tconst component = get_component();\n\n\tif (component && !has_owner(metadata, component)) {\n\t\tlet original = get_owner(metadata);\n\n\t\t// @ts-expect-error\n\t\tif (original[FILENAME] !== component[FILENAME]) {\n\t\t\t// @ts-expect-error\n\t\t\tw.ownership_invalid_mutation(component[FILENAME], original[FILENAME]);\n\t\t} else {\n\t\t\tw.ownership_invalid_mutation();\n\t\t}\n\t}\n}\n",
    "/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Cannot use `{@render children(...)}` if the parent component uses `let:` directives. Consider using a named snippet instead\n * @returns {never}\n */\nexport function invalid_default_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_default_snippet\\nCannot use \\`{@render children(...)}\\` if the parent component uses \\`let:\\` directives. Consider using a named snippet instead\\nhttps://svelte.dev/e/invalid_default_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_default_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` can only be used during component initialisation\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_outside_component(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_outside_component\\n\\`${name}(...)\\` can only be used during component initialisation\\nhttps://svelte.dev/e/lifecycle_outside_component`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_outside_component`);\n\t}\n}\n\n/**\n * `%name%` is not a store with a `subscribe` method\n * @param {string} name\n * @returns {never}\n */\nexport function store_invalid_shape(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`store_invalid_shape\\n\\`${name}\\` is not a store with a \\`subscribe\\` method\\nhttps://svelte.dev/e/store_invalid_shape`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/store_invalid_shape`);\n\t}\n}\n\n/**\n * The `this` prop on `<svelte:element>` must be a string, if defined\n * @returns {never}\n */\nexport function svelte_element_invalid_this_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`svelte_element_invalid_this_value\\nThe \\`this\\` prop on \\`<svelte:element>\\` must be a string, if defined\\nhttps://svelte.dev/e/svelte_element_invalid_this_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/svelte_element_invalid_this_value`);\n\t}\n}",
    "/** @import { ComponentContext } from '#client' */\n\nimport { DEV } from 'esm-env';\nimport { add_owner } from './dev/ownership.js';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { source } from './reactivity/sources.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction,\n\tuntrack\n} from './runtime.js';\nimport { effect, teardown } from './reactivity/effects.js';\nimport { legacy_mode_flag } from '../flags/index.js';\n\n/** @type {ComponentContext | null} */\nexport let component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_component_context(context) {\n\tcomponent_context = context;\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\n\tif (DEV) {\n\t\t// When state is put into context, we treat as if it's global from now on.\n\t\t// We do for performance reasons (it's for example very expensive to call\n\t\t// getContext on a big object many times when part of a list component)\n\t\t// and danger of false positives.\n\t\tuntrack(() => add_owner(context, null, true));\n\t}\n\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tvar ctx = (component_context = {\n\t\tp: component_context,\n\t\tc: null,\n\t\td: false,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t});\n\n\tif (legacy_mode_flag && !runes) {\n\t\tcomponent_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tteardown(() => {\n\t\t/** @type {ComponentContext} */ (ctx).d = true;\n\t});\n\n\tif (DEV) {\n\t\t// component function\n\t\tcomponent_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst component_effects = context_stack_item.e;\n\t\tif (component_effects !== null) {\n\t\t\tvar previous_effect = active_effect;\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tcontext_stack_item.e = null;\n\t\t\ttry {\n\t\t\t\tfor (var i = 0; i < component_effects.length; i++) {\n\t\t\t\t\tvar component_effect = component_effects[i];\n\t\t\t\t\tset_active_effect(component_effect.effect);\n\t\t\t\t\tset_active_reaction(component_effect.reaction);\n\t\t\t\t\teffect(component_effect.fn);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t}\n\t\t}\n\t\tcomponent_context = context_stack_item.p;\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\n\t\t}\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn !legacy_mode_flag || (component_context !== null && component_context.l === null);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n",
    "/** @import { Derived, Effect, Reaction, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tuntracked_writes,\n\tget,\n\tschedule_effect,\n\tset_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_write_version,\n\tupdate_effect,\n\treaction_sources,\n\tset_reaction_sources,\n\tcheck_dirtiness,\n\tuntracking,\n\tis_destroying_effect,\n\tpush_reaction_value\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_IS_UPDATING\n} from '../constants.js';\nimport * as e from '../errors.js';\nimport { legacy_mode_flag, tracing_mode_flag } from '../../flags/index.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { component_context, is_runes } from '../context.js';\nimport { proxy } from '../proxy.js';\n\nexport let inspect_effects = new Set();\nexport const old_values = new Map();\n\n/**\n * @param {Set<any>} v\n */\nexport function set_inspect_effects(v) {\n\tinspect_effects = v;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n * @returns {Source<V>}\n */\n// TODO rename this to `state` throughout the codebase\nexport function source(v, stack) {\n\t/** @type {Value} */\n\tvar signal = {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\trv: 0,\n\t\twv: 0\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = stack ?? get_stack('CreatedAt');\n\t\tsignal.debug = null;\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n */\nexport function state(v, stack) {\n\tconst s = source(v, stack);\n\n\tpush_reaction_value(s);\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value, immutable = false) {\n\tconst s = source(initial_value);\n\tif (!immutable) {\n\t\ts.equals = safe_equals;\n\t}\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (legacy_mode_flag && component_context !== null && component_context.l !== null) {\n\t\t(component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @param {boolean} [should_proxy]\n * @returns {V}\n */\nexport function set(source, value, should_proxy = false) {\n\tif (\n\t\tactive_reaction !== null &&\n\t\t!untracking &&\n\t\tis_runes() &&\n\t\t(active_reaction.f & (DERIVED | BLOCK_EFFECT)) !== 0 &&\n\t\t!reaction_sources?.includes(source)\n\t) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\tlet new_value = should_proxy ? proxy(value, source) : value;\n\n\treturn internal_set(source, new_value);\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function internal_set(source, value) {\n\tif (!source.equals(value)) {\n\t\tvar old_value = source.v;\n\n\t\tif (is_destroying_effect) {\n\t\t\told_values.set(source, value);\n\t\t} else {\n\t\t\told_values.set(source, old_value);\n\t\t}\n\n\t\tsource.v = value;\n\t\tsource.wv = increment_write_version();\n\n\t\tif (DEV && tracing_mode_flag) {\n\t\t\tsource.updated = get_stack('UpdatedAt');\n\t\t\tif (active_effect != null) {\n\t\t\t\tsource.trace_need_increase = true;\n\t\t\t\tsource.trace_v ??= old_value;\n\t\t\t}\n\t\t}\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// It's possible that the current reaction might not have up-to-date dependencies\n\t\t// whilst it's actively running. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e: `$effect(() => x++)`\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0\n\t\t) {\n\t\t\tif (untracked_writes === null) {\n\t\t\t\tset_untracked_writes([source]);\n\t\t\t} else {\n\t\t\t\tuntracked_writes.push(source);\n\t\t\t}\n\t\t}\n\n\t\tif (DEV && inspect_effects.size > 0) {\n\t\t\tconst inspects = Array.from(inspect_effects);\n\n\t\t\tfor (const effect of inspects) {\n\t\t\t\t// Mark clean inspect-effects as maybe dirty and then check their dirtiness\n\t\t\t\t// instead of just updating the effects - this way we avoid overfiring.\n\t\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t\t}\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinspect_effects.clear();\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update(source, d = 1) {\n\tvar value = get(source);\n\tvar result = d === 1 ? value++ : value--;\n\n\tset(source, value);\n\n\t// @ts-expect-error\n\treturn result;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update_pre(source, d = 1) {\n\tvar value = get(source);\n\n\t// @ts-expect-error\n\treturn set(source, d === 1 ? ++value : --value);\n}\n\n/**\n * @param {Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// Skip any effects that are already dirty\n\t\tif ((flags & DIRTY) !== 0) continue;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === active_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, status);\n\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\n\t\t\tif ((flags & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n",
    "/** @import { TemplateNode } from '#client' */\n\nimport {\n\tHYDRATION_END,\n\tHYDRATION_ERROR,\n\tHYDRATION_START,\n\tHYDRATION_START_ELSE\n} from '../../../constants.js';\nimport * as w from '../warnings.js';\nimport { get_next_sibling } from './operations.js';\n\n/**\n * Use this variable to guard everything related to hydration code so it can be treeshaken out\n * if the user doesn't use the `hydrate` method and these code paths are therefore not needed.\n */\nexport let hydrating = false;\n\n/** @param {boolean} value */\nexport function set_hydrating(value) {\n\thydrating = value;\n}\n\n/**\n * The node that is currently being hydrated. This starts out as the first node inside the opening\n * <!--[--> comment, and updates each time a component calls `$.child(...)` or `$.sibling(...)`.\n * When entering a block (e.g. `{#if ...}`), `hydrate_node` is the block opening comment; by the\n * time we leave the block it is the closing comment, which serves as the block's anchor.\n * @type {TemplateNode}\n */\nexport let hydrate_node;\n\n/** @param {TemplateNode} node */\nexport function set_hydrate_node(node) {\n\tif (node === null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\treturn (hydrate_node = node);\n}\n\nexport function hydrate_next() {\n\treturn set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(hydrate_node)));\n}\n\n/** @param {TemplateNode} node */\nexport function reset(node) {\n\tif (!hydrating) return;\n\n\t// If the node has remaining siblings, something has gone wrong\n\tif (get_next_sibling(hydrate_node) !== null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\thydrate_node = node;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function hydrate_template(template) {\n\tif (hydrating) {\n\t\t// @ts-expect-error TemplateNode doesn't include DocumentFragment, but it's actually fine\n\t\thydrate_node = template.content;\n\t}\n}\n\nexport function next(count = 1) {\n\tif (hydrating) {\n\t\tvar i = count;\n\t\tvar node = hydrate_node;\n\n\t\twhile (i--) {\n\t\t\tnode = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\t}\n\n\t\thydrate_node = node;\n\t}\n}\n\n/**\n * Removes all nodes starting at `hydrate_node` up until the next hydration end comment\n */\nexport function remove_nodes() {\n\tvar depth = 0;\n\tvar node = hydrate_node;\n\n\twhile (true) {\n\t\tif (node.nodeType === 8) {\n\t\t\tvar data = /** @type {Comment} */ (node).data;\n\n\t\t\tif (data === HYDRATION_END) {\n\t\t\t\tif (depth === 0) return node;\n\t\t\t\tdepth -= 1;\n\t\t\t} else if (data === HYDRATION_START || data === HYDRATION_START_ELSE) {\n\t\t\t\tdepth += 1;\n\t\t\t}\n\t\t}\n\n\t\tvar next = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n",
    "import * as w from '../warnings.js';\nimport { get_proxied_value } from '../proxy.js';\n\nexport function init_array_prototype_warnings() {\n\tconst array_prototype = Array.prototype;\n\t// The REPL ends up here over and over, and this prevents it from adding more and more patches\n\t// of the same kind to the prototype, which would slow down everything over time.\n\t// @ts-expect-error\n\tconst cleanup = Array.__svelte_cleanup;\n\tif (cleanup) {\n\t\tcleanup();\n\t}\n\n\tconst { indexOf, lastIndexOf, includes } = array_prototype;\n\n\tarray_prototype.indexOf = function (item, from_index) {\n\t\tconst index = indexOf.call(this, item, from_index);\n\n\t\tif (index === -1) {\n\t\t\tfor (let i = from_index ?? 0; i < this.length; i += 1) {\n\t\t\t\tif (get_proxied_value(this[i]) === item) {\n\t\t\t\t\tw.state_proxy_equality_mismatch('array.indexOf(...)');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t};\n\n\tarray_prototype.lastIndexOf = function (item, from_index) {\n\t\t// we need to specify this.length - 1 because it's probably using something like\n\t\t// `arguments` inside so passing undefined is different from not passing anything\n\t\tconst index = lastIndexOf.call(this, item, from_index ?? this.length - 1);\n\n\t\tif (index === -1) {\n\t\t\tfor (let i = 0; i <= (from_index ?? this.length - 1); i += 1) {\n\t\t\t\tif (get_proxied_value(this[i]) === item) {\n\t\t\t\t\tw.state_proxy_equality_mismatch('array.lastIndexOf(...)');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t};\n\n\tarray_prototype.includes = function (item, from_index) {\n\t\tconst has = includes.call(this, item, from_index);\n\n\t\tif (!has) {\n\t\t\tfor (let i = 0; i < this.length; i += 1) {\n\t\t\t\tif (get_proxied_value(this[i]) === item) {\n\t\t\t\t\tw.state_proxy_equality_mismatch('array.includes(...)');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn has;\n\t};\n\n\t// @ts-expect-error\n\tArray.__svelte_cleanup = () => {\n\t\tarray_prototype.indexOf = indexOf;\n\t\tarray_prototype.lastIndexOf = lastIndexOf;\n\t\tarray_prototype.includes = includes;\n\t};\n}\n\n/**\n * @param {any} a\n * @param {any} b\n * @param {boolean} equal\n * @returns {boolean}\n */\nexport function strict_equals(a, b, equal = true) {\n\t// try-catch needed because this tries to read properties of `a` and `b`,\n\t// which could be disallowed for example in a secure context\n\ttry {\n\t\tif ((a === b) !== (get_proxied_value(a) === get_proxied_value(b))) {\n\t\t\tw.state_proxy_equality_mismatch(equal ? '===' : '!==');\n\t\t}\n\t} catch {}\n\n\treturn (a === b) === equal;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n * @param {boolean} equal\n * @returns {boolean}\n */\nexport function equals(a, b, equal = true) {\n\tif ((a == b) !== (get_proxied_value(a) == get_proxied_value(b))) {\n\t\tw.state_proxy_equality_mismatch(equal ? '==' : '!=');\n\t}\n\n\treturn (a == b) === equal;\n}\n",
    "/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor, is_extensible } from '../../shared/utils.js';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {boolean} */\nexport var is_firefox;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\tis_firefox = /Firefox/.test(navigator.userAgent);\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\tvar text_prototype = Text.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\tif (is_extensible(element_prototype)) {\n\t\t// the following assignments improve perf of lookups on DOM nodes\n\t\t// @ts-expect-error\n\t\telement_prototype.__click = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__className = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__attributes = null;\n\t\t// @ts-expect-error\n\t\telement_prototype.__style = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__e = undefined;\n\t}\n\n\tif (is_extensible(text_prototype)) {\n\t\t// @ts-expect-error\n\t\ttext_prototype.__t = undefined;\n\t}\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function child(node, is_text) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t} else if (is_text && child.nodeType !== 3) {\n\t\tvar text = create_text();\n\t\tchild?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== 3) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {TemplateNode} node\n * @param {number} count\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, count = 1, is_text = false) {\n\tlet next_sibling = hydrating ? hydrate_node : node;\n\tvar last_sibling;\n\n\twhile (count--) {\n\t\tlast_sibling = next_sibling;\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\n\t}\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\tvar type = next_sibling?.nodeType;\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && type !== 3) {\n\t\tvar text = create_text();\n\t\t// If the next sibling is `null` and we're handling text then it's because\n\t\t// the SSR content was empty for the text, so we need to generate a new text\n\t\t// node and insert it after the last sibling\n\t\tif (next_sibling === null) {\n\t\t\tlast_sibling?.after(text);\n\t\t} else {\n\t\t\tnext_sibling.before(text);\n\t\t}\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n",
    "/** @import { Derived, Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport { CLEAN, DERIVED, DIRTY, EFFECT_HAS_DERIVED, MAYBE_DIRTY, UNOWNED } from '../constants.js';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tset_signal_status,\n\tskip_reaction,\n\tupdate_reaction,\n\tincrement_write_version,\n\tset_active_effect,\n\tpush_reaction_value\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { destroy_effect } from './effects.js';\nimport { inspect_effects, set_inspect_effects } from './sources.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { tracing_mode_flag } from '../../flags/index.js';\nimport { component_context } from '../context.js';\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tvar flags = DERIVED | DIRTY;\n\tvar parent_derived =\n\t\tactive_reaction !== null && (active_reaction.f & DERIVED) !== 0\n\t\t\t? /** @type {Derived} */ (active_reaction)\n\t\t\t: null;\n\n\tif (active_effect === null || (parent_derived !== null && (parent_derived.f & UNOWNED) !== 0)) {\n\t\tflags |= UNOWNED;\n\t} else {\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\n\t\t// created too late to ensure that the parent effect is added to the tree\n\t\tactive_effect.f |= EFFECT_HAS_DERIVED;\n\t}\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\teffects: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfn,\n\t\treactions: null,\n\t\trv: 0,\n\t\tv: /** @type {V} */ (null),\n\t\twv: 0,\n\t\tparent: parent_derived ?? active_effect\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = get_stack('CreatedAt');\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\nexport function user_derived(fn) {\n\tconst d = derived(fn);\n\n\tpush_reaction_value(d);\n\n\treturn d;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function destroy_derived_effects(derived) {\n\tvar effects = derived.effects;\n\n\tif (effects !== null) {\n\t\tderived.effects = null;\n\n\t\tfor (var i = 0; i < effects.length; i += 1) {\n\t\t\tdestroy_effect(/** @type {Effect} */ (effects[i]));\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @param {Derived} derived\n * @returns {Effect | null}\n */\nfunction get_derived_parent_effect(derived) {\n\tvar parent = derived.parent;\n\twhile (parent !== null) {\n\t\tif ((parent.f & DERIVED) === 0) {\n\t\t\treturn /** @type {Effect} */ (parent);\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\treturn null;\n}\n\n/**\n * @template T\n * @param {Derived} derived\n * @returns {T}\n */\nfunction execute_derived(derived) {\n\tvar value;\n\tvar prev_active_effect = active_effect;\n\n\tset_active_effect(get_derived_parent_effect(derived));\n\n\tif (DEV) {\n\t\tlet prev_inspect_effects = inspect_effects;\n\t\tset_inspect_effects(new Set());\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t\tset_inspect_effects(prev_inspect_effects);\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value = execute_derived(derived);\n\tvar status =\n\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n\n\tset_signal_status(derived, status);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.wv = increment_write_version();\n\t}\n}\n",
    "/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tcheck_dirtiness,\n\tactive_effect,\n\tactive_reaction,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_active_reaction,\n\tset_is_destroying_effect,\n\tset_signal_status,\n\tuntrack,\n\tuntracking\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT,\n\tMAYBE_DIRTY,\n\tEFFECT_HAS_DERIVED,\n\tBOUNDARY_EFFECT\n} from '../constants.js';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\nimport { derived } from './deriveds.js';\nimport { component_context, dev_current_component_function } from '../context.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (active_effect === null && active_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0 && active_effect === null) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Effect} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar parent = active_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent !== null && (parent.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent = parent.parent;\n\t\t}\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\twv: 0\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\ttry {\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null &&\n\t\t(effect.f & (EFFECT_HAS_DERIVED | BOUNDARY_EFFECT)) === 0;\n\n\tif (!inert && push) {\n\t\tif (parent !== null) {\n\t\t\tpush_effect(effect, parent);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t\t(derived.effects ??= []).push(effect);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\treturn active_reaction !== null && !untracking;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar defer =\n\t\tactive_effect !== null &&\n\t\t(active_effect.f & BRANCH_EFFECT) !== 0 &&\n\t\tcomponent_context !== null &&\n\t\t!component_context.m;\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (defer) {\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\n\t\t(context.e ??= []).push({\n\t\t\tfn,\n\t\t\teffect: active_effect,\n\t\t\treaction: active_reaction\n\t\t});\n\t} else {\n\t\tvar signal = effect(fn);\n\t\treturn signal;\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * An effect root whose children can transition out\n * @param {() => void} fn\n * @returns {(options?: { outro?: boolean }) => Promise<void>}\n */\nexport function component_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn (options = {}) => {\n\t\treturn new Promise((fulfil) => {\n\t\t\tif (options.outro) {\n\t\t\t\tpause_effect(effect, () => {\n\t\t\t\t\tdestroy_effect(effect);\n\t\t\t\t\tfulfil(undefined);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdestroy_effect(effect);\n\t\t\t\tfulfil(undefined);\n\t\t\t}\n\t\t});\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\n\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t}\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {(...expressions: any) => void | (() => void)} fn\n * @param {Array<() => any>} thunks\n * @returns {Effect}\n */\nexport function template_effect(fn, thunks = [], d = derived) {\n\tconst deriveds = thunks.map(d);\n\tconst effect = () => fn(...deriveds.map(get));\n\n\tif (DEV) {\n\t\tdefine_property(effect, 'name', {\n\t\t\tvalue: '{expression}'\n\t\t});\n\t}\n\n\treturn block(effect);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = active_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_active_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\n\t\tif ((effect.f & ROOT_EFFECT) !== 0) {\n\t\t\t// this is now an independent root\n\t\t\teffect.parent = null;\n\t\t} else {\n\t\t\tdestroy_effect(effect, remove_dom);\n\t\t}\n\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_block_effect_children(signal) {\n\tvar effect = signal.first;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tdestroy_effect(effect);\n\t\t}\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar node = effect.nodes_start;\n\t\tvar end = effect.nodes_end;\n\n\t\twhile (node !== null) {\n\t\t\t/** @type {TemplateNode | null} */\n\t\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\t\tnode.remove();\n\t\t\tnode = next;\n\t\t}\n\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\tif (DEV) {\n\t\teffect.component_function = null;\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\t// we don't null out `parent` so that error propagation can work correctly\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\t\tnull;\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\teffect.f ^= INERT;\n\n\t// Ensure the effect is marked as clean again so that any dirty child\n\t// effects can schedule themselves for execution\n\tif ((effect.f & CLEAN) === 0) {\n\t\teffect.f ^= CLEAN;\n\t}\n\n\t// If a dependency of this effect changed while it was paused,\n\t// schedule the effect to update\n\tif (check_dirtiness(effect)) {\n\t\tset_signal_status(effect, DIRTY);\n\t\tschedule_effect(effect);\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n",
    "import { run_all } from '../../shared/utils.js';\n\n// Fallback for when requestIdleCallback is not available\nconst request_idle_callback =\n\ttypeof requestIdleCallback === 'undefined'\n\t\t? (/** @type {() => void} */ cb) => setTimeout(cb, 1)\n\t\t: requestIdleCallback;\n\n/** @type {Array<() => void>} */\nlet micro_tasks = [];\n\n/** @type {Array<() => void>} */\nlet idle_tasks = [];\n\nfunction run_micro_tasks() {\n\tvar tasks = micro_tasks;\n\tmicro_tasks = [];\n\trun_all(tasks);\n}\n\nfunction run_idle_tasks() {\n\tvar tasks = idle_tasks;\n\tidle_tasks = [];\n\trun_all(tasks);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_micro_task(fn) {\n\tif (micro_tasks.length === 0) {\n\t\tqueueMicrotask(run_micro_tasks);\n\t}\n\n\tmicro_tasks.push(fn);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_idle_task(fn) {\n\tif (idle_tasks.length === 0) {\n\t\trequest_idle_callback(run_idle_tasks);\n\t}\n\n\tidle_tasks.push(fn);\n}\n\n/**\n * Synchronously run any queued tasks.\n */\nexport function flush_tasks() {\n\tif (micro_tasks.length > 0) {\n\t\trun_micro_tasks();\n\t}\n\n\tif (idle_tasks.length > 0) {\n\t\trun_idle_tasks();\n\t}\n}\n",
    "/** @import { ComponentContext, Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of, index_of } from '../shared/utils.js';\nimport {\n\tdestroy_block_effect_children,\n\tdestroy_effect_children,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tDISCONNECTED,\n\tBOUNDARY_EFFECT,\n\tEFFECT_IS_UPDATING\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { internal_set, old_values } from './reactivity/sources.js';\nimport { destroy_derived_effects, update_derived } from './reactivity/deriveds.js';\nimport * as e from './errors.js';\nimport { FILENAME } from '../../constants.js';\nimport { tracing_mode_flag } from '../flags/index.js';\nimport { tracing_expressions, get_stack } from './dev/tracing.js';\nimport {\n\tcomponent_context,\n\tdev_current_component_function,\n\tis_runes,\n\tset_component_context,\n\tset_dev_current_component_function\n} from './context.js';\nimport { is_firefox } from './dom/operations.js';\n\n// Used for DEV time error handling\n/** @param {WeakSet<Error>} value */\nconst handled_errors = new WeakSet();\nlet is_throwing_error = false;\n\nlet is_flushing = false;\n\n/** @type {Effect | null} */\nlet last_scheduled_effect = null;\n\nlet is_updating_effect = false;\n\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {Effect[]} */\nlet queued_root_effects = [];\n\n/** @type {Effect[]} Stack of effects, dev only */\nlet dev_effect_stack = [];\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | Reaction} */\nexport let active_reaction = null;\n\nexport let untracking = false;\n\n/** @param {null | Reaction} reaction */\nexport function set_active_reaction(reaction) {\n\tactive_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let active_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_active_effect(effect) {\n\tactive_effect = effect;\n}\n\n/**\n * When sources are created within a reaction, reading and writing\n * them should not cause a re-run\n * @type {null | Source[]}\n */\nexport let reaction_sources = null;\n\n/**\n * @param {Source[] | null} sources\n */\nexport function set_reaction_sources(sources) {\n\treaction_sources = sources;\n}\n\n/** @param {Value} value */\nexport function push_reaction_value(value) {\n\tif (active_reaction !== null && active_reaction.f & EFFECT_IS_UPDATING) {\n\t\tif (reaction_sources === null) {\n\t\t\tset_reaction_sources([value]);\n\t\t} else {\n\t\t\treaction_sources.push(value);\n\t\t}\n\t}\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed — we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nlet new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_untracked_writes(value) {\n\tuntracked_writes = value;\n}\n\n/**\n * @type {number} Used by sources and deriveds for handling updates.\n * Version starts from 1 so that unowned deriveds differentiate between a created effect and a run one for tracing\n **/\nlet write_version = 1;\n\n/** @type {number} Used to version each read of a source of derived to avoid duplicating depedencies inside a reaction */\nlet read_version = 0;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\n/** @type {Set<Value> | null} */\nexport let captured_signals = null;\n\n/** @param {Set<Value> | null} value */\nexport function set_captured_signals(value) {\n\tcaptured_signals = value;\n}\n\nexport function increment_write_version() {\n\treturn ++write_version;\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\t\t\tvar dependency;\n\t\t\tvar is_disconnected = (flags & DISCONNECTED) !== 0;\n\t\t\tvar is_unowned_connected = is_unowned && active_effect !== null && !skip_reaction;\n\t\t\tvar length = dependencies.length;\n\n\t\t\t// If we are working with a disconnected or an unowned signal that is now connected (due to an active effect)\n\t\t\t// then we need to re-connect the reaction to the dependency\n\t\t\tif (is_disconnected || is_unowned_connected) {\n\t\t\t\tvar derived = /** @type {Derived} */ (reaction);\n\t\t\t\tvar parent = derived.parent;\n\n\t\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\t\t// We always re-add all reactions (even duplicates) if the derived was\n\t\t\t\t\t// previously disconnected, however we don't if it was unowned as we\n\t\t\t\t\t// de-duplicate dependencies in that case\n\t\t\t\t\tif (is_disconnected || !dependency?.reactions?.includes(derived)) {\n\t\t\t\t\t\t(dependency.reactions ??= []).push(derived);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (is_disconnected) {\n\t\t\t\t\tderived.f ^= DISCONNECTED;\n\t\t\t\t}\n\t\t\t\t// If the unowned derived is now fully connected to the graph again (it's unowned and reconnected, has a parent\n\t\t\t\t// and the parent is not unowned), then we can mark it as connected again, removing the need for the unowned\n\t\t\t\t// flag\n\t\t\t\tif (is_unowned_connected && parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t\t\tderived.f ^= UNOWNED;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\tif (dependency.wv > reaction.wv) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean unless they\n\t\t// are used within an active_effect without skip_reaction\n\t\tif (!is_unowned || (active_effect !== null && !skip_reaction)) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n */\nfunction propagate_error(error, effect) {\n\t/** @type {Effect | null} */\n\tvar current = effect;\n\n\twhile (current !== null) {\n\t\tif ((current.f & BOUNDARY_EFFECT) !== 0) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tcurrent.fn(error);\n\t\t\t\treturn;\n\t\t\t} catch {\n\t\t\t\t// Remove boundary flag from effect\n\t\t\t\tcurrent.f ^= BOUNDARY_EFFECT;\n\t\t\t}\n\t\t}\n\n\t\tcurrent = current.parent;\n\t}\n\n\tis_throwing_error = false;\n\tthrow error;\n}\n\n/**\n * @param {Effect} effect\n */\nfunction should_rethrow_error(effect) {\n\treturn (\n\t\t(effect.f & DESTROYED) === 0 &&\n\t\t(effect.parent === null || (effect.parent.f & BOUNDARY_EFFECT) === 0)\n\t);\n}\n\nexport function reset_is_throwing_error() {\n\tis_throwing_error = false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n * @param {Effect | null} previous_effect\n * @param {ComponentContext | null} component_context\n */\nexport function handle_error(error, effect, previous_effect, component_context) {\n\tif (is_throwing_error) {\n\t\tif (previous_effect === null) {\n\t\t\tis_throwing_error = false;\n\t\t}\n\n\t\tif (should_rethrow_error(effect)) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif (previous_effect !== null) {\n\t\tis_throwing_error = true;\n\t}\n\n\tif (\n\t\t!DEV ||\n\t\tcomponent_context === null ||\n\t\t!(error instanceof Error) ||\n\t\thandled_errors.has(error)\n\t) {\n\t\tpropagate_error(error, effect);\n\t\treturn;\n\t}\n\n\thandled_errors.add(error);\n\n\tconst component_stack = [];\n\n\tconst effect_name = effect.fn?.name;\n\n\tif (effect_name) {\n\t\tcomponent_stack.push(effect_name);\n\t}\n\n\t/** @type {ComponentContext | null} */\n\tlet current_context = component_context;\n\n\twhile (current_context !== null) {\n\t\tif (DEV) {\n\t\t\t/** @type {string} */\n\t\t\tvar filename = current_context.function?.[FILENAME];\n\n\t\t\tif (filename) {\n\t\t\t\tconst file = filename.split('/').pop();\n\t\t\t\tcomponent_stack.push(file);\n\t\t\t}\n\t\t}\n\n\t\tcurrent_context = current_context.p;\n\t}\n\n\tconst indent = is_firefox ? '  ' : '\\t';\n\tdefine_property(error, 'message', {\n\t\tvalue: error.message + `\\n${component_stack.map((name) => `\\n${indent}in ${name}`).join('')}\\n`\n\t});\n\tdefine_property(error, 'component_stack', {\n\t\tvalue: component_stack\n\t});\n\n\tconst stack = error.stack;\n\n\t// Filter out internal files from callstack\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = [];\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: new_lines.join('\\n')\n\t\t});\n\t}\n\n\tpropagate_error(error, effect);\n\n\tif (should_rethrow_error(effect)) {\n\t\tthrow error;\n\t}\n}\n\n/**\n * @param {Value} signal\n * @param {Effect} effect\n * @param {boolean} [root]\n */\nfunction schedule_possible_effect_self_invalidation(signal, effect, root = true) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tfor (var i = 0; i < reactions.length; i++) {\n\t\tvar reaction = reactions[i];\n\n\t\tif (reaction_sources?.includes(signal)) continue;\n\n\t\tif ((reaction.f & DERIVED) !== 0) {\n\t\t\tschedule_possible_effect_self_invalidation(/** @type {Derived} */ (reaction), effect, false);\n\t\t} else if (effect === reaction) {\n\t\t\tif (root) {\n\t\t\t\tset_signal_status(reaction, DIRTY);\n\t\t\t} else if ((reaction.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(reaction, MAYBE_DIRTY);\n\t\t\t}\n\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t}\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} reaction\n * @returns {V}\n */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = untracked_writes;\n\tvar previous_reaction = active_reaction;\n\tvar previous_skip_reaction = skip_reaction;\n\tvar previous_reaction_sources = reaction_sources;\n\tvar previous_component_context = component_context;\n\tvar previous_untracking = untracking;\n\n\tvar flags = reaction.f;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tuntracked_writes = null;\n\tskip_reaction =\n\t\t(flags & UNOWNED) !== 0 && (untracking || !is_updating_effect || active_reaction === null);\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\n\treaction_sources = null;\n\tset_component_context(reaction.ctx);\n\tuntracking = false;\n\tread_version++;\n\n\treaction.f |= EFFECT_IS_UPDATING;\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (!skip_reaction) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\t// If we're inside an effect and we have untracked writes, then we need to\n\t\t// ensure that if any of those untracked writes result in re-invalidation\n\t\t// of the current effect, then that happens accordingly\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tuntracked_writes !== null &&\n\t\t\t!untracking &&\n\t\t\tdeps !== null &&\n\t\t\t(reaction.f & (DERIVED | MAYBE_DIRTY | DIRTY)) === 0\n\t\t) {\n\t\t\tfor (i = 0; i < /** @type {Source[]} */ (untracked_writes).length; i++) {\n\t\t\t\tschedule_possible_effect_self_invalidation(\n\t\t\t\t\tuntracked_writes[i],\n\t\t\t\t\t/** @type {Effect} */ (reaction)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// If we are returning to an previous reaction then\n\t\t// we need to increment the read version to ensure that\n\t\t// any dependencies in this reaction aren't marked with\n\t\t// the same version\n\t\tif (previous_reaction !== null) {\n\t\t\tread_version++;\n\n\t\t\tif (untracked_writes !== null) {\n\t\t\t\tif (previous_untracked_writes === null) {\n\t\t\t\t\tprevious_untracked_writes = untracked_writes;\n\t\t\t\t} else {\n\t\t\t\t\tprevious_untracked_writes.push(.../** @type {Source[]} */ (untracked_writes));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tuntracked_writes = previous_untracked_writes;\n\t\tactive_reaction = previous_reaction;\n\t\tskip_reaction = previous_skip_reaction;\n\t\treaction_sources = previous_reaction_sources;\n\t\tset_component_context(previous_component_context);\n\t\tuntracking = previous_untracking;\n\n\t\treaction.f ^= EFFECT_IS_UPDATING;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = index_of.call(reactions, signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (\n\t\treactions === null &&\n\t\t(dependency.f & DERIVED) !== 0 &&\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\n\t\t(new_deps === null || !new_deps.includes(dependency))\n\t) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\t// Disconnect any reactions owned by this reaction\n\t\tdestroy_derived_effects(/** @type {Derived} **/ (dependency));\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar previous_effect = active_effect;\n\tvar previous_component_context = component_context;\n\tvar was_updating_effect = is_updating_effect;\n\n\tactive_effect = effect;\n\tis_updating_effect = true;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tset_dev_current_component_function(effect.component_function);\n\t}\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\n\t\t\tdestroy_block_effect_children(effect);\n\t\t} else {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t\teffect.wv = write_version;\n\n\t\tvar deps = effect.deps;\n\n\t\t// In DEV, we need to handle a case where $inspect.trace() might\n\t\t// incorrectly state a source dependency has not changed when it has.\n\t\t// That's beacuse that source was changed by the same effect, causing\n\t\t// the versions to match. We can avoid this by incrementing the version\n\t\tif (DEV && tracing_mode_flag && (effect.f & DIRTY) !== 0 && deps !== null) {\n\t\t\tfor (let i = 0; i < deps.length; i++) {\n\t\t\t\tvar dep = deps[i];\n\t\t\t\tif (dep.trace_need_increase) {\n\t\t\t\t\tdep.wv = increment_write_version();\n\t\t\t\t\tdep.trace_need_increase = undefined;\n\t\t\t\t\tdep.trace_v = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV) {\n\t\t\tdev_effect_stack.push(effect);\n\t\t}\n\t} catch (error) {\n\t\thandle_error(error, effect, previous_effect, previous_component_context || effect.ctx);\n\t} finally {\n\t\tis_updating_effect = was_updating_effect;\n\t\tactive_effect = previous_effect;\n\n\t\tif (DEV) {\n\t\t\tset_dev_current_component_function(previous_component_fn);\n\t\t}\n\t}\n}\n\nfunction log_effect_stack() {\n\t// eslint-disable-next-line no-console\n\tconsole.error(\n\t\t'Last ten effects were: ',\n\t\tdev_effect_stack.slice(-10).map((d) => d.fn)\n\t);\n\tdev_effect_stack = [];\n}\n\nfunction infinite_loop_guard() {\n\ttry {\n\t\te.effect_update_depth_exceeded();\n\t} catch (error) {\n\t\tif (DEV) {\n\t\t\t// stack is garbage, ignore. Instead add a console.error message.\n\t\t\tdefine_property(error, 'stack', {\n\t\t\t\tvalue: ''\n\t\t\t});\n\t\t}\n\t\t// Try and handle the error so it can be caught at a boundary, that's\n\t\t// if there's an effect available from when it was last scheduled\n\t\tif (last_scheduled_effect !== null) {\n\t\t\tif (DEV) {\n\t\t\t\ttry {\n\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Only log the effect stack if the error is re-thrown\n\t\t\t\t\tlog_effect_stack();\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t}\n\t\t} else {\n\t\t\tif (DEV) {\n\t\t\t\tlog_effect_stack();\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nfunction flush_queued_root_effects() {\n\tvar was_updating_effect = is_updating_effect;\n\n\ttry {\n\t\tvar flush_count = 0;\n\t\tis_updating_effect = true;\n\n\t\twhile (queued_root_effects.length > 0) {\n\t\t\tif (flush_count++ > 1000) {\n\t\t\t\tinfinite_loop_guard();\n\t\t\t}\n\n\t\t\tvar root_effects = queued_root_effects;\n\t\t\tvar length = root_effects.length;\n\n\t\t\tqueued_root_effects = [];\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar collected_effects = process_effects(root_effects[i]);\n\t\t\t\tflush_queued_effects(collected_effects);\n\t\t\t}\n\t\t\told_values.clear();\n\t\t}\n\t} finally {\n\t\tis_flushing = false;\n\t\tis_updating_effect = was_updating_effect;\n\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0) {\n\t\t\ttry {\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\n\t\t\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t\t\t// immediate effects.\n\t\t\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\t\t\teffect.fn = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\thandle_error(error, effect, null, effect.ctx);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (!is_flushing) {\n\t\tis_flushing = true;\n\t\tqueueMicrotask(flush_queued_root_effects);\n\t}\n\n\tvar effect = (last_scheduled_effect = signal);\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\teffect.f ^= CLEAN;\n\t\t}\n\t}\n\n\tqueued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {Effect} root\n * @returns {Effect[]}\n */\nfunction process_effects(root) {\n\t/** @type {Effect[]} */\n\tvar effects = [];\n\n\t/** @type {Effect | null} */\n\tvar effect = root;\n\n\twhile (effect !== null) {\n\t\tvar flags = effect.f;\n\t\tvar is_branch = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) !== 0;\n\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n\n\t\tif (!is_skippable_branch && (flags & INERT) === 0) {\n\t\t\tif ((flags & EFFECT) !== 0) {\n\t\t\t\teffects.push(effect);\n\t\t\t} else if (is_branch) {\n\t\t\t\teffect.f ^= CLEAN;\n\t\t\t} else {\n\t\t\t\t// Ensure we set the effect to be the active reaction\n\t\t\t\t// to ensure that unowned deriveds are correctly tracked\n\t\t\t\t// because we're flushing the current effect\n\t\t\t\tvar previous_active_reaction = active_reaction;\n\t\t\t\ttry {\n\t\t\t\t\tactive_reaction = effect;\n\t\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandle_error(error, effect, null, effect.ctx);\n\t\t\t\t} finally {\n\t\t\t\t\tactive_reaction = previous_active_reaction;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/** @type {Effect | null} */\n\t\t\tvar child = effect.first;\n\n\t\t\tif (child !== null) {\n\t\t\t\teffect = child;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tvar parent = effect.parent;\n\t\teffect = effect.next;\n\n\t\twhile (effect === null && parent !== null) {\n\t\t\teffect = parent.next;\n\t\t\tparent = parent.parent;\n\t\t}\n\t}\n\n\treturn effects;\n}\n\n/**\n * Synchronously flush any pending updates.\n * Returns void if no callback is provided, otherwise returns the result of calling the callback.\n * @template [T=void]\n * @param {(() => T) | undefined} [fn]\n * @returns {T}\n */\nexport function flushSync(fn) {\n\tvar result;\n\n\tif (fn) {\n\t\tis_flushing = true;\n\t\tflush_queued_root_effects();\n\t\tresult = fn();\n\t}\n\n\tflush_tasks();\n\n\twhile (queued_root_effects.length > 0) {\n\t\tis_flushing = true;\n\t\tflush_queued_root_effects();\n\t\tflush_tasks();\n\t}\n\n\treturn /** @type {T} */ (result);\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flushSync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflushSync();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\tvar is_derived = (flags & DERIVED) !== 0;\n\n\tif (captured_signals !== null) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (active_reaction !== null && !untracking) {\n\t\tif (!reaction_sources?.includes(signal)) {\n\t\t\tvar deps = active_reaction.deps;\n\t\t\tif (signal.rv < read_version) {\n\t\t\t\tsignal.rv = read_version;\n\t\t\t\t// If the signal is accessing the same dependencies in the same\n\t\t\t\t// order as it did last time, increment `skipped_deps`\n\t\t\t\t// rather than updating `new_deps`, which creates GC cost\n\t\t\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\t\t\tskipped_deps++;\n\t\t\t\t} else if (new_deps === null) {\n\t\t\t\t\tnew_deps = [signal];\n\t\t\t\t} else if (!skip_reaction || !new_deps.includes(signal)) {\n\t\t\t\t\t// Normally we can push duplicated dependencies to `new_deps`, but if we're inside\n\t\t\t\t\t// an unowned derived because skip_reaction is true, then we need to ensure that\n\t\t\t\t\t// we don't have duplicates\n\t\t\t\t\tnew_deps.push(signal);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (\n\t\tis_derived &&\n\t\t/** @type {Derived} */ (signal).deps === null &&\n\t\t/** @type {Derived} */ (signal).effects === null\n\t) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\t\tvar parent = derived.parent;\n\n\t\tif (parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t// If the derived is owned by another derived then mark it as unowned\n\t\t\t// as the derived value might have been referenced in a different context\n\t\t\t// since and thus its parent might not be its true owner anymore\n\t\t\tderived.f ^= UNOWNED;\n\t\t}\n\t}\n\n\tif (is_derived) {\n\t\tderived = /** @type {Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\tif (\n\t\tDEV &&\n\t\ttracing_mode_flag &&\n\t\ttracing_expressions !== null &&\n\t\tactive_reaction !== null &&\n\t\ttracing_expressions.reaction === active_reaction\n\t) {\n\t\t// Used when mapping state between special blocks like `each`\n\t\tif (signal.debug) {\n\t\t\tsignal.debug();\n\t\t} else if (signal.created) {\n\t\t\tvar entry = tracing_expressions.entries.get(signal);\n\n\t\t\tif (entry === undefined) {\n\t\t\t\tentry = { read: [] };\n\t\t\t\ttracing_expressions.entries.set(signal, entry);\n\t\t\t}\n\n\t\t\tentry.read.push(get_stack('TracedAt'));\n\t\t}\n\t}\n\n\tif (is_destroying_effect && old_values.has(signal)) {\n\t\treturn old_values.get(signal);\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\n * @template V\n * @param {Value<V> | undefined} signal\n * @returns {V | undefined}\n */\nexport function safe_get(signal) {\n\treturn signal && get(signal);\n}\n\n/**\n * Capture an array of all the signals that are read when `fn` is called\n * @template T\n * @param {() => T} fn\n */\nfunction capture_signals(fn) {\n\tvar previous_captured_signals = captured_signals;\n\tcaptured_signals = new Set();\n\n\tvar captured = captured_signals;\n\tvar signal;\n\n\ttry {\n\t\tuntrack(fn);\n\t\tif (previous_captured_signals !== null) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\n\treturn captured;\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar captured = capture_signals(() => untrack(fn));\n\n\tfor (var signal of captured) {\n\t\t// Go one level up because derived signals created as part of props in legacy mode\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\n\t\t\tfor (const dep of /** @type {Derived} */ (signal).deps || []) {\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\n\t\t\t\t\t// Use internal_set instead of set here and below to avoid mutation validation\n\t\t\t\t\tinternal_set(dep, dep.v);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tinternal_set(signal, signal.v);\n\t\t}\n\t}\n}\n\n/**\n * When used inside a [`$derived`](https://svelte.dev/docs/svelte/$derived) or [`$effect`](https://svelte.dev/docs/svelte/$effect),\n * any state read inside `fn` will not be treated as a dependency.\n *\n * ```ts\n * $effect(() => {\n *   // this will run when `data` changes, but not when `time` changes\n *   save(data, {\n *     timestamp: untrack(() => time)\n *   });\n * });\n * ```\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tvar previous_untracking = untracking;\n\ttry {\n\t\tuntracking = true;\n\t\treturn fn();\n\t} finally {\n\t\tuntracking = previous_untracking;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n",
    "/** @import { ProxyMetadata, Source } from '#client' */\nimport { DEV } from 'esm-env';\nimport { get, active_effect, active_reaction, set_active_reaction } from './runtime.js';\nimport { component_context } from './context.js';\nimport {\n\tarray_prototype,\n\tget_descriptor,\n\tget_prototype_of,\n\tis_array,\n\tobject_prototype\n} from '../shared/utils.js';\nimport { check_ownership, widen_ownership } from './dev/ownership.js';\nimport { state as source, set } from './reactivity/sources.js';\nimport { STATE_SYMBOL, STATE_SYMBOL_METADATA } from './constants.js';\nimport { UNINITIALIZED } from '../../constants.js';\nimport * as e from './errors.js';\nimport { get_stack } from './dev/tracing.js';\nimport { tracing_mode_flag } from '../flags/index.js';\n\n/** @type {ProxyMetadata | null} */\nvar parent_metadata = null;\n\n/**\n * @template T\n * @param {T} value\n * @param {Source<T>} [prev] dev mode only\n * @returns {T}\n */\nexport function proxy(value, prev) {\n\t// if non-proxyable, or is already a proxy, return `value`\n\tif (typeof value !== 'object' || value === null || STATE_SYMBOL in value) {\n\t\treturn value;\n\t}\n\n\tconst prototype = get_prototype_of(value);\n\n\tif (prototype !== object_prototype && prototype !== array_prototype) {\n\t\treturn value;\n\t}\n\n\t/** @type {Map<any, Source<any>>} */\n\tvar sources = new Map();\n\tvar is_proxied_array = is_array(value);\n\tvar version = source(0);\n\n\tvar stack = DEV && tracing_mode_flag ? get_stack('CreatedAt') : null;\n\tvar reaction = active_reaction;\n\n\t/**\n\t * @template T\n\t * @param {() => T} fn\n\t */\n\tvar with_parent = (fn) => {\n\t\tvar previous_reaction = active_reaction;\n\t\tset_active_reaction(reaction);\n\n\t\t/** @type {T} */\n\t\tvar result;\n\n\t\tif (DEV) {\n\t\t\tvar previous_metadata = parent_metadata;\n\t\t\tparent_metadata = metadata;\n\t\t\tresult = fn();\n\t\t\tparent_metadata = previous_metadata;\n\t\t} else {\n\t\t\tresult = fn();\n\t\t}\n\n\t\tset_active_reaction(previous_reaction);\n\t\treturn result;\n\t};\n\n\tif (is_proxied_array) {\n\t\t// We need to create the length source eagerly to ensure that\n\t\t// mutations to the array are properly synced with our proxy\n\t\tsources.set('length', source(/** @type {any[]} */ (value).length, stack));\n\t}\n\n\t/** @type {ProxyMetadata} */\n\tvar metadata;\n\n\tif (DEV) {\n\t\tmetadata = {\n\t\t\tparent: parent_metadata,\n\t\t\towners: null\n\t\t};\n\n\t\tif (prev) {\n\t\t\t// Reuse owners from previous state; necessary because reassignment is not guaranteed to have correct component context.\n\t\t\t// If no previous proxy exists we play it safe and assume ownerless state\n\t\t\t// @ts-expect-error\n\t\t\tconst prev_owners = prev.v?.[STATE_SYMBOL_METADATA]?.owners;\n\t\t\tmetadata.owners = prev_owners ? new Set(prev_owners) : null;\n\t\t} else {\n\t\t\tmetadata.owners =\n\t\t\t\tparent_metadata === null\n\t\t\t\t\t? component_context !== null\n\t\t\t\t\t\t? new Set([component_context.function])\n\t\t\t\t\t\t: null\n\t\t\t\t\t: new Set();\n\t\t}\n\t}\n\n\treturn new Proxy(/** @type {any} */ (value), {\n\t\tdefineProperty(_, prop, descriptor) {\n\t\t\tif (\n\t\t\t\t!('value' in descriptor) ||\n\t\t\t\tdescriptor.configurable === false ||\n\t\t\t\tdescriptor.enumerable === false ||\n\t\t\t\tdescriptor.writable === false\n\t\t\t) {\n\t\t\t\t// we disallow non-basic descriptors, because unless they are applied to the\n\t\t\t\t// target object — which we avoid, so that state can be forked — we will run\n\t\t\t\t// afoul of the various invariants\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor#invariants\n\t\t\t\te.state_descriptors_fixed();\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\ts = with_parent(() => source(descriptor.value, stack));\n\t\t\t\tsources.set(prop, s);\n\t\t\t} else {\n\t\t\t\tset(\n\t\t\t\t\ts,\n\t\t\t\t\twith_parent(() => proxy(descriptor.value))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdeleteProperty(target, prop) {\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\tif (prop in target) {\n\t\t\t\t\tsources.set(\n\t\t\t\t\t\tprop,\n\t\t\t\t\t\twith_parent(() => source(UNINITIALIZED, stack))\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// When working with arrays, we need to also ensure we update the length when removing\n\t\t\t\t// an indexed property\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n < ls.v) {\n\t\t\t\t\t\tset(ls, n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tset(s, UNINITIALIZED);\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tget(target, prop, receiver) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn metadata;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar exists = prop in target;\n\n\t\t\t// create a source, but only if it's an own property and not a prototype property\n\t\t\tif (s === undefined && (!exists || get_descriptor(target, prop)?.writable)) {\n\t\t\t\ts = with_parent(() => source(proxy(exists ? target[prop] : UNINITIALIZED), stack));\n\t\t\t\tsources.set(prop, s);\n\t\t\t}\n\n\t\t\tif (s !== undefined) {\n\t\t\t\tvar v = get(s);\n\n\t\t\t\t// In case of something like `foo = bar.map(...)`, foo would have ownership\n\t\t\t\t// of the array itself, while the individual items would have ownership\n\t\t\t\t// of the component that created bar. That means if we later do `foo[0].baz = 42`,\n\t\t\t\t// we could get a false-positive ownership violation, since the two proxies\n\t\t\t\t// are not connected to each other via the parent metadata relationship.\n\t\t\t\t// For this reason, we need to widen the ownership of the children\n\t\t\t\t// upon access when we detect they are not connected.\n\t\t\t\tif (DEV) {\n\t\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\t\tvar prop_metadata = v?.[STATE_SYMBOL_METADATA];\n\t\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn v === UNINITIALIZED ? undefined : v;\n\t\t\t}\n\n\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t},\n\n\t\tgetOwnPropertyDescriptor(target, prop) {\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\tif (descriptor && 'value' in descriptor) {\n\t\t\t\tvar s = sources.get(prop);\n\t\t\t\tif (s) descriptor.value = get(s);\n\t\t\t} else if (descriptor === undefined) {\n\t\t\t\tvar source = sources.get(prop);\n\t\t\t\tvar value = source?.v;\n\n\t\t\t\tif (source !== undefined && value !== UNINITIALIZED) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\twritable: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn descriptor;\n\t\t},\n\n\t\thas(target, prop) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = (s !== undefined && s.v !== UNINITIALIZED) || Reflect.has(target, prop);\n\n\t\t\tif (\n\t\t\t\ts !== undefined ||\n\t\t\t\t(active_effect !== null && (!has || get_descriptor(target, prop)?.writable))\n\t\t\t) {\n\t\t\t\tif (s === undefined) {\n\t\t\t\t\ts = with_parent(() => source(has ? proxy(target[prop]) : UNINITIALIZED, stack));\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\n\t\t\t\tvar value = get(s);\n\t\t\t\tif (value === UNINITIALIZED) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn has;\n\t\t},\n\n\t\tset(target, prop, value, receiver) {\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = prop in target;\n\n\t\t\t// variable.length = value -> clear all signals with index >= value\n\t\t\tif (is_proxied_array && prop === 'length') {\n\t\t\t\tfor (var i = value; i < /** @type {Source<number>} */ (s).v; i += 1) {\n\t\t\t\t\tvar other_s = sources.get(i + '');\n\t\t\t\t\tif (other_s !== undefined) {\n\t\t\t\t\t\tset(other_s, UNINITIALIZED);\n\t\t\t\t\t} else if (i in target) {\n\t\t\t\t\t\t// If the item exists in the original, we need to create a uninitialized source,\n\t\t\t\t\t\t// else a later read of the property would result in a source being created with\n\t\t\t\t\t\t// the value of the original item at that index.\n\t\t\t\t\t\tother_s = with_parent(() => source(UNINITIALIZED, stack));\n\t\t\t\t\t\tsources.set(i + '', other_s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we haven't yet created a source for this property, we need to ensure\n\t\t\t// we do so otherwise if we read it later, then the write won't be tracked and\n\t\t\t// the heuristics of effects will be different vs if we had read the proxied\n\t\t\t// object property before writing to that property.\n\t\t\tif (s === undefined) {\n\t\t\t\tif (!has || get_descriptor(target, prop)?.writable) {\n\t\t\t\t\ts = with_parent(() => source(undefined, stack));\n\t\t\t\t\tset(\n\t\t\t\t\t\ts,\n\t\t\t\t\t\twith_parent(() => proxy(value))\n\t\t\t\t\t);\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thas = s.v !== UNINITIALIZED;\n\t\t\t\tset(\n\t\t\t\t\ts,\n\t\t\t\t\twith_parent(() => proxy(value))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (DEV) {\n\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\tvar prop_metadata = value?.[STATE_SYMBOL_METADATA];\n\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t}\n\t\t\t\tcheck_ownership(metadata);\n\t\t\t}\n\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\t// Set the new value before updating any signals so that any listeners get the new value\n\t\t\tif (descriptor?.set) {\n\t\t\t\tdescriptor.set.call(receiver, value);\n\t\t\t}\n\n\t\t\tif (!has) {\n\t\t\t\t// If we have mutated an array directly, we might need to\n\t\t\t\t// signal that length has also changed. Do it before updating metadata\n\t\t\t\t// to ensure that iterating over the array as a result of a metadata update\n\t\t\t\t// will not cause the length to be out of sync.\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n >= ls.v) {\n\t\t\t\t\t\tset(ls, n + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\townKeys(target) {\n\t\t\tget(version);\n\n\t\t\tvar own_keys = Reflect.ownKeys(target).filter((key) => {\n\t\t\t\tvar source = sources.get(key);\n\t\t\t\treturn source === undefined || source.v !== UNINITIALIZED;\n\t\t\t});\n\n\t\t\tfor (var [key, source] of sources) {\n\t\t\t\tif (source.v !== UNINITIALIZED && !(key in target)) {\n\t\t\t\t\town_keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn own_keys;\n\t\t},\n\n\t\tsetPrototypeOf() {\n\t\t\te.state_prototype_fixed();\n\t\t}\n\t});\n}\n\n/**\n * @param {Source<number>} signal\n * @param {1 | -1} [d]\n */\nfunction update_version(signal, d = 1) {\n\tset(signal, signal.v + d);\n}\n\n/**\n * @param {any} value\n */\nexport function get_proxied_value(value) {\n\ttry {\n\t\tif (value !== null && typeof value === 'object' && STATE_SYMBOL in value) {\n\t\t\treturn value[STATE_SYMBOL];\n\t\t}\n\t} catch {\n\t\t// the above if check can throw an error if the value in question\n\t\t// is the contentWindow of an iframe on another domain, in which\n\t\t// case we want to just return the value (because it's definitely\n\t\t// not a proxied value) so we don't break any JavaScript interacting\n\t\t// with that iframe (such as various payment companies client side\n\t\t// JavaScript libraries interacting with their iframes on the same\n\t\t// domain)\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n */\nexport function is(a, b) {\n\treturn Object.is(get_proxied_value(a), get_proxied_value(b));\n}\n",
    "import { hydrating } from '../hydration.js';\nimport { clear_text_content, get_first_child } from '../operations.js';\nimport { queue_micro_task } from '../task.js';\n\n/**\n * @param {HTMLElement} dom\n * @param {boolean} value\n * @returns {void}\n */\nexport function autofocus(dom, value) {\n\tif (value) {\n\t\tconst body = document.body;\n\t\tdom.autofocus = true;\n\n\t\tqueue_micro_task(() => {\n\t\t\tif (document.activeElement === body) {\n\t\t\t\tdom.focus();\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * The child of a textarea actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLTextAreaElement} dom\n * @returns {void}\n */\nexport function remove_textarea_child(dom) {\n\tif (hydrating && get_first_child(dom) !== null) {\n\t\tclear_text_content(dom);\n\t}\n}\n\nlet listening_to_form_reset = false;\n\nexport function add_form_reset_listener() {\n\tif (!listening_to_form_reset) {\n\t\tlistening_to_form_reset = true;\n\t\tdocument.addEventListener(\n\t\t\t'reset',\n\t\t\t(evt) => {\n\t\t\t\t// Needs to happen one tick later or else the dom properties of the form\n\t\t\t\t// elements have not updated to their reset values yet\n\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\tif (!evt.defaultPrevented) {\n\t\t\t\t\t\tfor (const e of /**@type {HTMLFormElement} */ (evt.target).elements) {\n\t\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\t\te.__on_r?.();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t// In the capture phase to guarantee we get noticed of it (no possiblity of stopPropagation)\n\t\t\t{ capture: true }\n\t\t);\n\t}\n}\n",
    "import { teardown } from '../../../reactivity/effects.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../../runtime.js';\nimport { add_form_reset_listener } from '../misc.js';\n\n/**\n * Fires the handler once immediately (unless corresponding arg is set to `false`),\n * then listens to the given events until the render effect context is destroyed\n * @param {EventTarget} target\n * @param {Array<string>} events\n * @param {(event?: Event) => void} handler\n * @param {any} call_handler_immediately\n */\nexport function listen(target, events, handler, call_handler_immediately = true) {\n\tif (call_handler_immediately) {\n\t\thandler();\n\t}\n\n\tfor (var name of events) {\n\t\ttarget.addEventListener(name, handler);\n\t}\n\n\tteardown(() => {\n\t\tfor (var name of events) {\n\t\t\ttarget.removeEventListener(name, handler);\n\t\t}\n\t});\n}\n\n/**\n * @template T\n * @param {() => T} fn\n */\nexport function without_reactive_context(fn) {\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * Listen to the given event, and then instantiate a global form reset listener if not already done,\n * to notify all bindings when the form is reset\n * @param {HTMLElement} element\n * @param {string} event\n * @param {(is_reset?: true) => void} handler\n * @param {(is_reset?: true) => void} [on_reset]\n */\nexport function listen_to_event_and_reset_event(element, event, handler, on_reset = handler) {\n\telement.addEventListener(event, () => without_reactive_context(handler));\n\t// @ts-expect-error\n\tconst prev = element.__on_r;\n\tif (prev) {\n\t\t// special case for checkbox that can have multiple binds (group & checked)\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => {\n\t\t\tprev();\n\t\t\ton_reset(true);\n\t\t};\n\t} else {\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => on_reset(true);\n\t}\n\n\tadd_form_reset_listener();\n}\n",
    "/** @import { Location } from 'locate-character' */\nimport { teardown } from '../../reactivity/effects.js';\nimport { define_property, is_array } from '../../../shared/utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\nimport { FILENAME } from '../../../../constants.js';\nimport * as w from '../../warnings.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { without_reactive_context } from './bindings/shared.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tif (dom.onload) {\n\t\tdom.removeAttribute('onload');\n\t}\n\tif (dom.onerror) {\n\t\tdom.removeAttribute('onerror');\n\t}\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} [handler]\n * @param {AddEventListenerOptions} [options]\n */\nexport function create_event(event_name, dom, handler, options = {}) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation.call(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\treturn without_reactive_context(() => {\n\t\t\t\treturn handler?.call(this, event);\n\t\t\t});\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events and touch events.\n\tif (\n\t\tevent_name.startsWith('pointer') ||\n\t\tevent_name.startsWith('touch') ||\n\t\tevent_name === 'wheel'\n\t) {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} [handler]\n * @param {boolean} [capture]\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\t// @ts-ignore\n\tif (dom === document.body || dom === window || dom === document) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @this {EventTarget}\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(event) {\n\tvar handler_element = this;\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\t// This started because of Chromium issue https://chromestatus.com/feature/5128696823545856,\n\t// where removal or moving of of the DOM can cause sync `blur` events to fire, which can cause logic\n\t// to run inside the current `active_reaction`, which isn't what we want at all. However, on reflection,\n\t// it's probably best that all event handled by Svelte have this behaviour, as we don't really want\n\t// an event handler to run in the context of another reaction or effect.\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.assignedSlot ||\n\t\t\t\tcurrent_target.parentNode ||\n\t\t\t\t/** @type {any} */ (current_target).host ||\n\t\t\t\tnull;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (\n\t\t\t\t\tdelegated != null &&\n\t\t\t\t\t(!(/** @type {any} */ (current_target).disabled) ||\n\t\t\t\t\t\t// DOM could've been updated already by the time this is reached, so we check this as well\n\t\t\t\t\t\t// -> the target could not have been disabled because it emits the event in the first place\n\t\t\t\t\t\tevent.target === current_target)\n\t\t\t\t) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-ignore remove proxy on currentTarget\n\t\tdelete event.currentTarget;\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * In dev, warn if an event handler is not a function, as it means the\n * user probably called the handler or forgot to add a `() =>`\n * @param {() => (event: Event, ...args: any) => void} thunk\n * @param {EventTarget} element\n * @param {[Event, ...any]} args\n * @param {any} component\n * @param {[number, number]} [loc]\n * @param {boolean} [remove_parens]\n */\nexport function apply(\n\tthunk,\n\telement,\n\targs,\n\tcomponent,\n\tloc,\n\thas_side_effects = false,\n\tremove_parens = false\n) {\n\tlet handler;\n\tlet error;\n\n\ttry {\n\t\thandler = thunk();\n\t} catch (e) {\n\t\terror = e;\n\t}\n\n\tif (typeof handler !== 'function' && (has_side_effects || handler != null || error)) {\n\t\tconst filename = component?.[FILENAME];\n\t\tconst location = loc ? ` at ${filename}:${loc[0]}:${loc[1]}` : ` in ${filename}`;\n\t\tconst phase = args[0]?.eventPhase < Event.BUBBLING_PHASE ? 'capture' : '';\n\t\tconst event_name = args[0]?.type + phase;\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\n\n\t\tw.event_handler_invalid(description, suggestion);\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\thandler?.apply(element, args);\n}\n",
    "/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html;\n\treturn elem.content;\n}\n",
    "/** @import { Effect, TemplateNode } from '#client' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { create_text, get_first_child, is_firefox } from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { active_effect } from '../runtime.js';\nimport { TEMPLATE_FRAGMENT, TEMPLATE_USE_IMPORT_NODE } from '../../../constants.js';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node || is_firefox ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template_with_script(content, flags) {\n\tvar fn = template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function ns_template(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function svg_template_with_script(content, flags) {\n\tvar fn = ns_template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mathml_template(content, flags) {\n\treturn ns_template(content, flags, 'math');\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n * @returns {Node | Node[]}\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return node;\n\n\tconst is_fragment = node.nodeType === 11;\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tconst effect = /** @type {Effect} */ (active_effect);\n\n\tfor (const script of scripts) {\n\t\tconst clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// The script has changed - if it's at the edges, the effect now points at dead nodes\n\t\tif (is_fragment ? node.firstChild === script : node === script) {\n\t\t\teffect.nodes_start = clone;\n\t\t}\n\t\tif (is_fragment ? node.lastChild === script : node === script) {\n\t\t\teffect.nodes_end = clone;\n\t\t}\n\n\t\tscript.replaceWith(clone);\n\t}\n\treturn node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== 3) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case — void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n\n/**\n * Create (or hydrate) an unique UID for the component instance.\n */\nexport function props_id() {\n\tif (\n\t\thydrating &&\n\t\thydrate_node &&\n\t\thydrate_node.nodeType === 8 &&\n\t\thydrate_node.textContent?.startsWith(`#`)\n\t) {\n\t\tconst id = hydrate_node.textContent.substring(1);\n\t\thydrate_next();\n\t\treturn id;\n\t}\n\n\t// @ts-expect-error This way we ensure the id is unique even across Svelte runtimes\n\t(window.__svelte ??= {}).uid ??= 1;\n\n\t// @ts-expect-error\n\treturn `c${window.__svelte.uid++}`;\n}\n",
    "/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node, set_hydrating } from '../hydration.js';\nimport { create_text, get_first_child, get_next_sibling } from '../operations.js';\nimport { block } from '../../reactivity/effects.js';\nimport { HEAD_EFFECT } from '../../constants.js';\nimport { HYDRATION_START } from '../../../../constants.js';\n\n/**\n * @type {Node | undefined}\n */\nlet head_anchor;\n\nexport function reset_head_anchor() {\n\thead_anchor = undefined;\n}\n\n/**\n * @param {(anchor: Node) => void} render_fn\n * @returns {void}\n */\nexport function head(render_fn) {\n\t// The head function may be called after the first hydration pass and ssr comment nodes may still be present,\n\t// therefore we need to skip that when we detect that we're not in hydration mode.\n\tlet previous_hydrate_node = null;\n\tlet was_hydrating = hydrating;\n\n\t/** @type {Comment | Text} */\n\tvar anchor;\n\n\tif (hydrating) {\n\t\tprevious_hydrate_node = hydrate_node;\n\n\t\t// There might be multiple head blocks in our app, so we need to account for each one needing independent hydration.\n\t\tif (head_anchor === undefined) {\n\t\t\thead_anchor = /** @type {TemplateNode} */ (get_first_child(document.head));\n\t\t}\n\n\t\twhile (\n\t\t\thead_anchor !== null &&\n\t\t\t(head_anchor.nodeType !== 8 || /** @type {Comment} */ (head_anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\thead_anchor = /** @type {TemplateNode} */ (get_next_sibling(head_anchor));\n\t\t}\n\n\t\t// If we can't find an opening hydration marker, skip hydration (this can happen\n\t\t// if a framework rendered body but not head content)\n\t\tif (head_anchor === null) {\n\t\t\tset_hydrating(false);\n\t\t} else {\n\t\t\thead_anchor = set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(head_anchor)));\n\t\t}\n\t}\n\n\tif (!hydrating) {\n\t\tanchor = document.head.appendChild(create_text());\n\t}\n\n\ttry {\n\t\tblock(() => render_fn(anchor), HEAD_EFFECT);\n\t} finally {\n\t\tif (was_hydrating) {\n\t\t\tset_hydrating(true);\n\t\t\thead_anchor = hydrate_node; // so that next head block starts from the correct node\n\t\t\tset_hydrate_node(/** @type {TemplateNode} */ (previous_hydrate_node));\n\t\t}\n\t}\n}\n",
    "const regex_return_characters = /\\r/g;\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function hash(str) {\n\tstr = str.replace(regex_return_characters, '');\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn (hash >>> 0).toString(36);\n}\n\nconst VOID_ELEMENT_NAMES = [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n];\n\n/**\n * Returns `true` if `name` is of a void element\n * @param {string} name\n */\nexport function is_void(name) {\n\treturn VOID_ELEMENT_NAMES.includes(name) || name.toLowerCase() === '!doctype';\n}\n\nconst RESERVED_WORDS = [\n\t'arguments',\n\t'await',\n\t'break',\n\t'case',\n\t'catch',\n\t'class',\n\t'const',\n\t'continue',\n\t'debugger',\n\t'default',\n\t'delete',\n\t'do',\n\t'else',\n\t'enum',\n\t'eval',\n\t'export',\n\t'extends',\n\t'false',\n\t'finally',\n\t'for',\n\t'function',\n\t'if',\n\t'implements',\n\t'import',\n\t'in',\n\t'instanceof',\n\t'interface',\n\t'let',\n\t'new',\n\t'null',\n\t'package',\n\t'private',\n\t'protected',\n\t'public',\n\t'return',\n\t'static',\n\t'super',\n\t'switch',\n\t'this',\n\t'throw',\n\t'true',\n\t'try',\n\t'typeof',\n\t'var',\n\t'void',\n\t'while',\n\t'with',\n\t'yield'\n];\n\n/**\n * Returns `true` if `word` is a reserved JavaScript keyword\n * @param {string} word\n */\nexport function is_reserved(word) {\n\treturn RESERVED_WORDS.includes(word);\n}\n\n/**\n * @param {string} name\n */\nexport function is_capture_event(name) {\n\treturn name.endsWith('capture') && name !== 'gotpointercapture' && name !== 'lostpointercapture';\n}\n\n/** List of Element events that will be delegated */\nconst DELEGATED_EVENTS = [\n\t'beforeinput',\n\t'click',\n\t'change',\n\t'dblclick',\n\t'contextmenu',\n\t'focusin',\n\t'focusout',\n\t'input',\n\t'keydown',\n\t'keyup',\n\t'mousedown',\n\t'mousemove',\n\t'mouseout',\n\t'mouseover',\n\t'mouseup',\n\t'pointerdown',\n\t'pointermove',\n\t'pointerout',\n\t'pointerover',\n\t'pointerup',\n\t'touchend',\n\t'touchmove',\n\t'touchstart'\n];\n\n/**\n * Returns `true` if `event_name` is a delegated event\n * @param {string} event_name\n */\nexport function is_delegated(event_name) {\n\treturn DELEGATED_EVENTS.includes(event_name);\n}\n\n/**\n * Attributes that are boolean, i.e. they are present or not present.\n */\nconst DOM_BOOLEAN_ATTRIBUTES = [\n\t'allowfullscreen',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'indeterminate',\n\t'inert',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'seamless',\n\t'selected',\n\t'webkitdirectory',\n\t'defer',\n\t'disablepictureinpicture',\n\t'disableremoteplayback'\n];\n\n/**\n * Returns `true` if `name` is a boolean attribute\n * @param {string} name\n */\nexport function is_boolean_attribute(name) {\n\treturn DOM_BOOLEAN_ATTRIBUTES.includes(name);\n}\n\n/**\n * @type {Record<string, string>}\n * List of attribute names that should be aliased to their property names\n * because they behave differently between setting them as an attribute and\n * setting them as a property.\n */\nconst ATTRIBUTE_ALIASES = {\n\t// no `class: 'className'` because we handle that separately\n\tformnovalidate: 'formNoValidate',\n\tismap: 'isMap',\n\tnomodule: 'noModule',\n\tplaysinline: 'playsInline',\n\treadonly: 'readOnly',\n\tdefaultvalue: 'defaultValue',\n\tdefaultchecked: 'defaultChecked',\n\tsrcobject: 'srcObject',\n\tnovalidate: 'noValidate',\n\tallowfullscreen: 'allowFullscreen',\n\tdisablepictureinpicture: 'disablePictureInPicture',\n\tdisableremoteplayback: 'disableRemotePlayback'\n};\n\n/**\n * @param {string} name\n */\nexport function normalize_attribute(name) {\n\tname = name.toLowerCase();\n\treturn ATTRIBUTE_ALIASES[name] ?? name;\n}\n\nconst DOM_PROPERTIES = [\n\t...DOM_BOOLEAN_ATTRIBUTES,\n\t'formNoValidate',\n\t'isMap',\n\t'noModule',\n\t'playsInline',\n\t'readOnly',\n\t'value',\n\t'volume',\n\t'defaultValue',\n\t'defaultChecked',\n\t'srcObject',\n\t'noValidate',\n\t'allowFullscreen',\n\t'disablePictureInPicture',\n\t'disableRemotePlayback'\n];\n\n/**\n * @param {string} name\n */\nexport function is_dom_property(name) {\n\treturn DOM_PROPERTIES.includes(name);\n}\n\nconst NON_STATIC_PROPERTIES = ['autofocus', 'muted', 'defaultValue', 'defaultChecked'];\n\n/**\n * Returns `true` if the given attribute cannot be set through the template\n * string, i.e. needs some kind of JavaScript handling to work.\n * @param {string} name\n */\nexport function cannot_be_set_statically(name) {\n\treturn NON_STATIC_PROPERTIES.includes(name);\n}\n\n/**\n * Subset of delegated events which should be passive by default.\n * These two are already passive via browser defaults on window, document and body.\n * But since\n * - we're delegating them\n * - they happen often\n * - they apply to mobile which is generally less performant\n * we're marking them as passive by default for other elements, too.\n */\nconst PASSIVE_EVENTS = ['touchstart', 'touchmove'];\n\n/**\n * Returns `true` if `name` is a passive event\n * @param {string} name\n */\nexport function is_passive_event(name) {\n\treturn PASSIVE_EVENTS.includes(name);\n}\n\nconst CONTENT_EDITABLE_BINDINGS = ['textContent', 'innerHTML', 'innerText'];\n\n/** @param {string} name */\nexport function is_content_editable_binding(name) {\n\treturn CONTENT_EDITABLE_BINDINGS.includes(name);\n}\n\nconst LOAD_ERROR_ELEMENTS = [\n\t'body',\n\t'embed',\n\t'iframe',\n\t'img',\n\t'link',\n\t'object',\n\t'script',\n\t'style',\n\t'track'\n];\n\n/**\n * Returns `true` if the element emits `load` and `error` events\n * @param {string} name\n */\nexport function is_load_error_element(name) {\n\treturn LOAD_ERROR_ELEMENTS.includes(name);\n}\n\nconst SVG_ELEMENTS = [\n\t'altGlyph',\n\t'altGlyphDef',\n\t'altGlyphItem',\n\t'animate',\n\t'animateColor',\n\t'animateMotion',\n\t'animateTransform',\n\t'circle',\n\t'clipPath',\n\t'color-profile',\n\t'cursor',\n\t'defs',\n\t'desc',\n\t'discard',\n\t'ellipse',\n\t'feBlend',\n\t'feColorMatrix',\n\t'feComponentTransfer',\n\t'feComposite',\n\t'feConvolveMatrix',\n\t'feDiffuseLighting',\n\t'feDisplacementMap',\n\t'feDistantLight',\n\t'feDropShadow',\n\t'feFlood',\n\t'feFuncA',\n\t'feFuncB',\n\t'feFuncG',\n\t'feFuncR',\n\t'feGaussianBlur',\n\t'feImage',\n\t'feMerge',\n\t'feMergeNode',\n\t'feMorphology',\n\t'feOffset',\n\t'fePointLight',\n\t'feSpecularLighting',\n\t'feSpotLight',\n\t'feTile',\n\t'feTurbulence',\n\t'filter',\n\t'font',\n\t'font-face',\n\t'font-face-format',\n\t'font-face-name',\n\t'font-face-src',\n\t'font-face-uri',\n\t'foreignObject',\n\t'g',\n\t'glyph',\n\t'glyphRef',\n\t'hatch',\n\t'hatchpath',\n\t'hkern',\n\t'image',\n\t'line',\n\t'linearGradient',\n\t'marker',\n\t'mask',\n\t'mesh',\n\t'meshgradient',\n\t'meshpatch',\n\t'meshrow',\n\t'metadata',\n\t'missing-glyph',\n\t'mpath',\n\t'path',\n\t'pattern',\n\t'polygon',\n\t'polyline',\n\t'radialGradient',\n\t'rect',\n\t'set',\n\t'solidcolor',\n\t'stop',\n\t'svg',\n\t'switch',\n\t'symbol',\n\t'text',\n\t'textPath',\n\t'tref',\n\t'tspan',\n\t'unknown',\n\t'use',\n\t'view',\n\t'vkern'\n];\n\n/** @param {string} name */\nexport function is_svg(name) {\n\treturn SVG_ELEMENTS.includes(name);\n}\n\nconst MATHML_ELEMENTS = [\n\t'annotation',\n\t'annotation-xml',\n\t'maction',\n\t'math',\n\t'merror',\n\t'mfrac',\n\t'mi',\n\t'mmultiscripts',\n\t'mn',\n\t'mo',\n\t'mover',\n\t'mpadded',\n\t'mphantom',\n\t'mprescripts',\n\t'mroot',\n\t'mrow',\n\t'ms',\n\t'mspace',\n\t'msqrt',\n\t'mstyle',\n\t'msub',\n\t'msubsup',\n\t'msup',\n\t'mtable',\n\t'mtd',\n\t'mtext',\n\t'mtr',\n\t'munder',\n\t'munderover',\n\t'semantics'\n];\n\n/** @param {string} name */\nexport function is_mathml(name) {\n\treturn MATHML_ELEMENTS.includes(name);\n}\n\nconst RUNES = /** @type {const} */ ([\n\t'$state',\n\t'$state.raw',\n\t'$state.snapshot',\n\t'$props',\n\t'$props.id',\n\t'$bindable',\n\t'$derived',\n\t'$derived.by',\n\t'$effect',\n\t'$effect.pre',\n\t'$effect.tracking',\n\t'$effect.root',\n\t'$inspect',\n\t'$inspect().with',\n\t'$inspect.trace',\n\t'$host'\n]);\n\n/**\n * @param {string} name\n * @returns {name is RUNES[number]}\n */\nexport function is_rune(name) {\n\treturn RUNES.includes(/** @type {RUNES[number]} */ (name));\n}\n\n/** List of elements that require raw contents and should not have SSR comments put in them */\nconst RAW_TEXT_ELEMENTS = /** @type {const} */ (['textarea', 'script', 'style', 'title']);\n\n/** @param {string} name */\nexport function is_raw_text_element(name) {\n\treturn RAW_TEXT_ELEMENTS.includes(/** @type {RAW_TEXT_ELEMENTS[number]} */ (name));\n}\n\n/**\n * Prevent devtools trying to make `location` a clickable link by inserting a zero-width space\n * @param {string | undefined} location\n */\nexport function sanitize_location(location) {\n\treturn location?.replace(/\\//g, '/\\u200b');\n}\n",
    "/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent, MountOptions } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { active_effect } from './runtime.js';\nimport { push, pop, component_context } from './context.js';\nimport { component_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\n\n/**\n * This is normally true — block effects should run their intro transitions —\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// For objects, we apply string coercion (which might make things like $state array references in the template reactive) before diffing\n\tvar str = value == null ? '' : typeof value === 'object' ? value + '' : value;\n\t// @ts-expect-error\n\tif (str !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = str;\n\t\ttext.nodeValue = str + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {MountOptions<Props>} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\treturn _mount(component, options);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== 8 || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {MountOptions} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = component_root(() => {\n\t\tvar anchor_node = anchor ?? target.appendChild(create_text());\n\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor_node), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor_node, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\n\t\t\tif (anchor_node !== anchor) {\n\t\t\t\tanchor_node.parentNode?.removeChild(anchor_node);\n\t\t\t}\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n *\n * Since 5.13.0, if `options.outro` is `true`, [transitions](https://svelte.dev/docs/svelte/transition) will play before the component is removed from the DOM.\n *\n * Returns a `Promise` that resolves after transitions have completed if `options.outro` is true, or immediately otherwise (prior to 5.13.0, returns `void`).\n *\n * ```js\n * import { mount, unmount } from 'svelte';\n * import App from './App.svelte';\n *\n * const app = mount(App, { target: document.body });\n *\n * // later...\n * unmount(app, { outro: true });\n * ```\n * @param {Record<string, any>} component\n * @param {{ outro?: boolean }} [options]\n * @returns {Promise<void>}\n */\nexport function unmount(component, options) {\n\tconst fn = mounted_components.get(component);\n\n\tif (fn) {\n\t\tmounted_components.delete(component);\n\t\treturn fn(options);\n\t}\n\n\tif (DEV) {\n\t\tw.lifecycle_double_unmount();\n\t}\n\n\treturn Promise.resolve();\n}\n",
    "/** @import { Effect, TemplateNode } from '#client' */\nimport { EFFECT_TRANSPARENT } from '../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport { block, branch, pause_effect, resume_effect } from '../../reactivity/effects.js';\nimport { HYDRATION_START, HYDRATION_START_ELSE, UNINITIALIZED } from '../../../../constants.js';\n\n/**\n * @param {TemplateNode} node\n * @param {(branch: (fn: (anchor: Node, elseif?: [number,number]) => void, flag?: boolean) => void) => void} fn\n * @param {[number,number]} [elseif]\n * @returns {void}\n */\nexport function if_block(node, fn, [root_index, hydrate_index] = [0, 0]) {\n\tif (hydrating && root_index === 0) {\n\t\thydrate_next();\n\t}\n\n\tvar anchor = node;\n\n\t/** @type {Effect | null} */\n\tvar consequent_effect = null;\n\n\t/** @type {Effect | null} */\n\tvar alternate_effect = null;\n\n\t/** @type {UNINITIALIZED | boolean | null} */\n\tvar condition = UNINITIALIZED;\n\n\tvar flags = root_index > 0 ? EFFECT_TRANSPARENT : 0;\n\n\tvar has_branch = false;\n\n\tconst set_branch = (\n\t\t/** @type {(anchor: Node, elseif?: [number,number]) => void} */ fn,\n\t\tflag = true\n\t) => {\n\t\thas_branch = true;\n\t\tupdate_branch(flag, fn);\n\t};\n\n\tconst update_branch = (\n\t\t/** @type {boolean | null} */ new_condition,\n\t\t/** @type {null | ((anchor: Node, elseif?: [number,number]) => void)} */ fn\n\t) => {\n\t\tif (condition === (condition = new_condition)) return;\n\n\t\t/** Whether or not there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating && hydrate_index !== -1) {\n\t\t\tif (root_index === 0) {\n\t\t\t\tconst data = /** @type {Comment} */ (anchor).data;\n\t\t\t\tif (data === HYDRATION_START) {\n\t\t\t\t\thydrate_index = 0;\n\t\t\t\t} else if (data === HYDRATION_START_ELSE) {\n\t\t\t\t\thydrate_index = Infinity;\n\t\t\t\t} else {\n\t\t\t\t\thydrate_index = parseInt(data.substring(1));\n\t\t\t\t\tif (hydrate_index !== hydrate_index) {\n\t\t\t\t\t\t// if hydrate_index is NaN\n\t\t\t\t\t\t// we set an invalid index to force mismatch\n\t\t\t\t\t\thydrate_index = condition ? Infinity : -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst is_else = hydrate_index > root_index;\n\n\t\t\tif (!!condition === is_else) {\n\t\t\t\t// Hydration mismatch: remove everything inside the anchor and start fresh.\n\t\t\t\t// This could happen with `{#if browser}...{/if}`, for example\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t\thydrate_index = -1; // ignore hydration in next else if\n\t\t\t}\n\t\t}\n\n\t\tif (condition) {\n\t\t\tif (consequent_effect) {\n\t\t\t\tresume_effect(consequent_effect);\n\t\t\t} else if (fn) {\n\t\t\t\tconsequent_effect = branch(() => fn(anchor));\n\t\t\t}\n\n\t\t\tif (alternate_effect) {\n\t\t\t\tpause_effect(alternate_effect, () => {\n\t\t\t\t\talternate_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (alternate_effect) {\n\t\t\t\tresume_effect(alternate_effect);\n\t\t\t} else if (fn) {\n\t\t\t\talternate_effect = branch(() => fn(anchor, [root_index + 1, hydrate_index]));\n\t\t\t}\n\n\t\t\tif (consequent_effect) {\n\t\t\t\tpause_effect(consequent_effect, () => {\n\t\t\t\t\tconsequent_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\t};\n\n\tblock(() => {\n\t\thas_branch = false;\n\t\tfn(set_branch);\n\t\tif (!has_branch) {\n\t\t\tupdate_branch(null, null);\n\t\t}\n\t}, flags);\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n",
    "/** @import { EachItem, EachState, Effect, MaybeSource, Source, TemplateNode, TransitionManager, Value } from '#client' */\nimport {\n\tEACH_INDEX_REACTIVE,\n\tEACH_IS_ANIMATED,\n\tEACH_IS_CONTROLLED,\n\tEACH_ITEM_IMMUTABLE,\n\tEACH_ITEM_REACTIVE,\n\tHYDRATION_END,\n\tHYDRATION_START_ELSE\n} from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling\n} from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\trun_out_transitions,\n\tpause_children,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { source, mutable_source, internal_set } from '../../reactivity/sources.js';\nimport { array_from, is_array } from '../../../shared/utils.js';\nimport { INERT } from '../../constants.js';\nimport { queue_micro_task } from '../task.js';\nimport { active_effect, active_reaction, get } from '../../runtime.js';\nimport { DEV } from 'esm-env';\nimport { derived_safe_equal } from '../../reactivity/deriveds.js';\n\n/**\n * The row of a keyed each block that is currently updating. We track this\n * so that `animate:` directives have something to attach themselves to\n * @type {EachItem | null}\n */\nexport let current_each_item = null;\n\n/** @param {EachItem | null} item */\nexport function set_current_each_item(item) {\n\tcurrent_each_item = item;\n}\n\n/**\n * @param {any} _\n * @param {number} i\n */\nexport function index(_, i) {\n\treturn i;\n}\n\n/**\n * Pause multiple effects simultaneously, and coordinate their\n * subsequent destruction. Used in each blocks\n * @param {EachState} state\n * @param {EachItem[]} items\n * @param {null | Node} controlled_anchor\n * @param {Map<any, EachItem>} items_map\n */\nfunction pause_effects(state, items, controlled_anchor, items_map) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\tvar length = items.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tpause_children(items[i].e, transitions, true);\n\t}\n\n\tvar is_controlled = length > 0 && transitions.length === 0 && controlled_anchor !== null;\n\t// If we have a controlled anchor, it means that the each block is inside a single\n\t// DOM element, so we can apply a fast-path for clearing the contents of the element.\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (\n\t\t\t/** @type {Element} */ (controlled_anchor).parentNode\n\t\t);\n\t\tclear_text_content(parent_node);\n\t\tparent_node.append(/** @type {Element} */ (controlled_anchor));\n\t\titems_map.clear();\n\t\tlink(state, items[0].prev, items[length - 1].next);\n\t}\n\n\trun_out_transitions(transitions, () => {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (!is_controlled) {\n\t\t\t\titems_map.delete(item.k);\n\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t}\n\t\t\tdestroy_effect(item.e, !is_controlled);\n\t\t}\n\t});\n}\n\n/**\n * @template V\n * @param {Element | Comment} node The next sibling node, or the parent node if this is a 'controlled' block\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @param {(value: V, index: number) => any} get_key\n * @param {(anchor: Node, item: MaybeSource<V>, index: MaybeSource<number>) => void} render_fn\n * @param {null | ((anchor: Node) => void)} fallback_fn\n * @returns {void}\n */\nexport function each(node, flags, get_collection, get_key, render_fn, fallback_fn = null) {\n\tvar anchor = node;\n\n\t/** @type {EachState} */\n\tvar state = { flags, items: new Map(), first: null };\n\n\tvar is_controlled = (flags & EACH_IS_CONTROLLED) !== 0;\n\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (node);\n\n\t\tanchor = hydrating\n\t\t\t? set_hydrate_node(/** @type {Comment | Text} */ (get_first_child(parent_node)))\n\t\t\t: parent_node.appendChild(create_text());\n\t}\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\t/** @type {Effect | null} */\n\tvar fallback = null;\n\n\tvar was_empty = false;\n\n\t// TODO: ideally we could use derived for runes mode but because of the ability\n\t// to use a store which can be mutated, we can't do that here as mutating a store\n\t// will still result in the collection array being the same from the store\n\tvar each_array = derived_safe_equal(() => {\n\t\tvar collection = get_collection();\n\n\t\treturn is_array(collection) ? collection : collection == null ? [] : array_from(collection);\n\t});\n\n\tblock(() => {\n\t\tvar array = get(each_array);\n\t\tvar length = array.length;\n\n\t\tif (was_empty && length === 0) {\n\t\t\t// ignore updates if the array is empty,\n\t\t\t// and it already was empty on previous run\n\t\t\treturn;\n\t\t}\n\t\twas_empty = length === 0;\n\n\t\t/** `true` if there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tvar is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (is_else !== (length === 0)) {\n\t\t\t\t// hydration mismatch — remove the server-rendered DOM and start over\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\t// this is separate to the previous block because `hydrating` might change\n\t\tif (hydrating) {\n\t\t\t/** @type {EachItem | null} */\n\t\t\tvar prev = null;\n\n\t\t\t/** @type {EachItem} */\n\t\t\tvar item;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (\n\t\t\t\t\thydrate_node.nodeType === 8 &&\n\t\t\t\t\t/** @type {Comment} */ (hydrate_node).data === HYDRATION_END\n\t\t\t\t) {\n\t\t\t\t\t// The server rendered fewer items than expected,\n\t\t\t\t\t// so break out and continue appending non-hydrated items\n\t\t\t\t\tanchor = /** @type {Comment} */ (hydrate_node);\n\t\t\t\t\tmismatch = true;\n\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar value = array[i];\n\t\t\t\tvar key = get_key(value, i);\n\t\t\t\titem = create_item(\n\t\t\t\t\thydrate_node,\n\t\t\t\t\tstate,\n\t\t\t\t\tprev,\n\t\t\t\t\tnull,\n\t\t\t\t\tvalue,\n\t\t\t\t\tkey,\n\t\t\t\t\ti,\n\t\t\t\t\trender_fn,\n\t\t\t\t\tflags,\n\t\t\t\t\tget_collection\n\t\t\t\t);\n\t\t\t\tstate.items.set(key, item);\n\n\t\t\t\tprev = item;\n\t\t\t}\n\n\t\t\t// remove excess nodes\n\t\t\tif (length > 0) {\n\t\t\t\tset_hydrate_node(remove_nodes());\n\t\t\t}\n\t\t}\n\n\t\tif (!hydrating) {\n\t\t\treconcile(array, state, anchor, render_fn, flags, get_key, get_collection);\n\t\t}\n\n\t\tif (fallback_fn !== null) {\n\t\t\tif (length === 0) {\n\t\t\t\tif (fallback) {\n\t\t\t\t\tresume_effect(fallback);\n\t\t\t\t} else {\n\t\t\t\t\tfallback = branch(() => fallback_fn(anchor));\n\t\t\t\t}\n\t\t\t} else if (fallback !== null) {\n\t\t\t\tpause_effect(fallback, () => {\n\t\t\t\t\tfallback = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\n\t\t// When we mount the each block for the first time, the collection won't be\n\t\t// connected to this effect as the effect hasn't finished running yet and its deps\n\t\t// won't be assigned. However, it's possible that when reconciling the each block\n\t\t// that a mutation occurred and it's made the collection MAYBE_DIRTY, so reading the\n\t\t// collection again can provide consistency to the reactive graph again as the deriveds\n\t\t// will now be `CLEAN`.\n\t\tget(each_array);\n\t});\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * Add, remove, or reorder items output by an each block as its input changes\n * @template V\n * @param {Array<V>} array\n * @param {EachState} state\n * @param {Element | Comment | Text} anchor\n * @param {(anchor: Node, item: MaybeSource<V>, index: number | Source<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {(value: V, index: number) => any} get_key\n * @param {() => V[]} get_collection\n * @returns {void}\n */\nfunction reconcile(array, state, anchor, render_fn, flags, get_key, get_collection) {\n\tvar is_animated = (flags & EACH_IS_ANIMATED) !== 0;\n\tvar should_update = (flags & (EACH_ITEM_REACTIVE | EACH_INDEX_REACTIVE)) !== 0;\n\n\tvar length = array.length;\n\tvar items = state.items;\n\tvar first = state.first;\n\tvar current = first;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar seen;\n\n\t/** @type {EachItem | null} */\n\tvar prev = null;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar to_animate;\n\n\t/** @type {EachItem[]} */\n\tvar matched = [];\n\n\t/** @type {EachItem[]} */\n\tvar stashed = [];\n\n\t/** @type {V} */\n\tvar value;\n\n\t/** @type {any} */\n\tvar key;\n\n\t/** @type {EachItem | undefined} */\n\tvar item;\n\n\t/** @type {number} */\n\tvar i;\n\n\tif (is_animated) {\n\t\tfor (i = 0; i < length; i += 1) {\n\t\t\tvalue = array[i];\n\t\t\tkey = get_key(value, i);\n\t\t\titem = items.get(key);\n\n\t\t\tif (item !== undefined) {\n\t\t\t\titem.a?.measure();\n\t\t\t\t(to_animate ??= new Set()).add(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i = 0; i < length; i += 1) {\n\t\tvalue = array[i];\n\t\tkey = get_key(value, i);\n\t\titem = items.get(key);\n\n\t\tif (item === undefined) {\n\t\t\tvar child_anchor = current ? /** @type {TemplateNode} */ (current.e.nodes_start) : anchor;\n\n\t\t\tprev = create_item(\n\t\t\t\tchild_anchor,\n\t\t\t\tstate,\n\t\t\t\tprev,\n\t\t\t\tprev === null ? state.first : prev.next,\n\t\t\t\tvalue,\n\t\t\t\tkey,\n\t\t\t\ti,\n\t\t\t\trender_fn,\n\t\t\t\tflags,\n\t\t\t\tget_collection\n\t\t\t);\n\n\t\t\titems.set(key, prev);\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\tcurrent = prev.next;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (should_update) {\n\t\t\tupdate_item(item, value, i, flags);\n\t\t}\n\n\t\tif ((item.e.f & INERT) !== 0) {\n\t\t\tresume_effect(item.e);\n\t\t\tif (is_animated) {\n\t\t\t\titem.a?.unfix();\n\t\t\t\t(to_animate ??= new Set()).delete(item);\n\t\t\t}\n\t\t}\n\n\t\tif (item !== current) {\n\t\t\tif (seen !== undefined && seen.has(item)) {\n\t\t\t\tif (matched.length < stashed.length) {\n\t\t\t\t\t// more efficient to move later items to the front\n\t\t\t\t\tvar start = stashed[0];\n\t\t\t\t\tvar j;\n\n\t\t\t\t\tprev = start.prev;\n\n\t\t\t\t\tvar a = matched[0];\n\t\t\t\t\tvar b = matched[matched.length - 1];\n\n\t\t\t\t\tfor (j = 0; j < matched.length; j += 1) {\n\t\t\t\t\t\tmove(matched[j], start, anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0; j < stashed.length; j += 1) {\n\t\t\t\t\t\tseen.delete(stashed[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\tlink(state, a.prev, b.next);\n\t\t\t\t\tlink(state, prev, a);\n\t\t\t\t\tlink(state, b, start);\n\n\t\t\t\t\tcurrent = start;\n\t\t\t\t\tprev = b;\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tmatched = [];\n\t\t\t\t\tstashed = [];\n\t\t\t\t} else {\n\t\t\t\t\t// more efficient to move earlier items to the back\n\t\t\t\t\tseen.delete(item);\n\t\t\t\t\tmove(item, current, anchor);\n\n\t\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t\t\tlink(state, item, prev === null ? state.first : prev.next);\n\t\t\t\t\tlink(state, prev, item);\n\n\t\t\t\t\tprev = item;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\twhile (current !== null && current.k !== key) {\n\t\t\t\t// If the each block isn't inert and an item has an effect that is already inert,\n\t\t\t\t// skip over adding it to our seen Set as the item is already being handled\n\t\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\t\t(seen ??= new Set()).add(current);\n\t\t\t\t}\n\t\t\t\tstashed.push(current);\n\t\t\t\tcurrent = current.next;\n\t\t\t}\n\n\t\t\tif (current === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem = current;\n\t\t}\n\n\t\tmatched.push(item);\n\t\tprev = item;\n\t\tcurrent = item.next;\n\t}\n\n\tif (current !== null || seen !== undefined) {\n\t\tvar to_destroy = seen === undefined ? [] : array_from(seen);\n\n\t\twhile (current !== null) {\n\t\t\t// If the each block isn't inert, then inert effects are currently outroing and will be removed once the transition is finished\n\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\tto_destroy.push(current);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\n\t\tvar destroy_length = to_destroy.length;\n\n\t\tif (destroy_length > 0) {\n\t\t\tvar controlled_anchor = (flags & EACH_IS_CONTROLLED) !== 0 && length === 0 ? anchor : null;\n\n\t\t\tif (is_animated) {\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.measure();\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.fix();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpause_effects(state, to_destroy, controlled_anchor, items);\n\t\t}\n\t}\n\n\tif (is_animated) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (to_animate === undefined) return;\n\t\t\tfor (item of to_animate) {\n\t\t\t\titem.a?.apply();\n\t\t\t}\n\t\t});\n\t}\n\n\t/** @type {Effect} */ (active_effect).first = state.first && state.first.e;\n\t/** @type {Effect} */ (active_effect).last = prev && prev.e;\n}\n\n/**\n * @param {EachItem} item\n * @param {any} value\n * @param {number} index\n * @param {number} type\n * @returns {void}\n */\nfunction update_item(item, value, index, type) {\n\tif ((type & EACH_ITEM_REACTIVE) !== 0) {\n\t\tinternal_set(item.v, value);\n\t}\n\n\tif ((type & EACH_INDEX_REACTIVE) !== 0) {\n\t\tinternal_set(/** @type {Value<number>} */ (item.i), index);\n\t} else {\n\t\titem.i = index;\n\t}\n}\n\n/**\n * @template V\n * @param {Node} anchor\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n * @param {V} value\n * @param {unknown} key\n * @param {number} index\n * @param {(anchor: Node, item: V | Source<V>, index: number | Value<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @returns {EachItem}\n */\nfunction create_item(\n\tanchor,\n\tstate,\n\tprev,\n\tnext,\n\tvalue,\n\tkey,\n\tindex,\n\trender_fn,\n\tflags,\n\tget_collection\n) {\n\tvar previous_each_item = current_each_item;\n\tvar reactive = (flags & EACH_ITEM_REACTIVE) !== 0;\n\tvar mutable = (flags & EACH_ITEM_IMMUTABLE) === 0;\n\n\tvar v = reactive ? (mutable ? mutable_source(value) : source(value)) : value;\n\tvar i = (flags & EACH_INDEX_REACTIVE) === 0 ? index : source(index);\n\n\tif (DEV && reactive) {\n\t\t// For tracing purposes, we need to link the source signal we create with the\n\t\t// collection + index so that tracing works as intended\n\t\t/** @type {Value} */ (v).debug = () => {\n\t\t\tvar collection_index = typeof i === 'number' ? index : i.v;\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\t\t\tget_collection()[collection_index];\n\t\t};\n\t}\n\n\t/** @type {EachItem} */\n\tvar item = {\n\t\ti,\n\t\tv,\n\t\tk: key,\n\t\ta: null,\n\t\t// @ts-expect-error\n\t\te: null,\n\t\tprev,\n\t\tnext\n\t};\n\n\tcurrent_each_item = item;\n\n\ttry {\n\t\titem.e = branch(() => render_fn(anchor, v, i, get_collection), hydrating);\n\n\t\titem.e.prev = prev && prev.e;\n\t\titem.e.next = next && next.e;\n\n\t\tif (prev === null) {\n\t\t\tstate.first = item;\n\t\t} else {\n\t\t\tprev.next = item;\n\t\t\tprev.e.next = item.e;\n\t\t}\n\n\t\tif (next !== null) {\n\t\t\tnext.prev = item;\n\t\t\tnext.e.prev = item.e;\n\t\t}\n\n\t\treturn item;\n\t} finally {\n\t\tcurrent_each_item = previous_each_item;\n\t}\n}\n\n/**\n * @param {EachItem} item\n * @param {EachItem | null} next\n * @param {Text | Element | Comment} anchor\n */\nfunction move(item, next, anchor) {\n\tvar end = item.next ? /** @type {TemplateNode} */ (item.next.e.nodes_start) : anchor;\n\n\tvar dest = next ? /** @type {TemplateNode} */ (next.e.nodes_start) : anchor;\n\tvar node = /** @type {TemplateNode} */ (item.e.nodes_start);\n\n\twhile (node !== end) {\n\t\tvar next_node = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tdest.before(node);\n\t\tnode = next_node;\n\t}\n}\n\n/**\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n */\nfunction link(state, prev, next) {\n\tif (prev === null) {\n\t\tstate.first = next;\n\t} else {\n\t\tprev.next = next;\n\t\tprev.e.next = next && next.e;\n\t}\n\n\tif (next !== null) {\n\t\tnext.prev = prev;\n\t\tnext.e.prev = prev && prev.e;\n\t}\n}\n",
    "/** @import { Effect, TemplateNode } from '#client' */\nimport { FILENAME, HYDRATION_ERROR } from '../../../../constants.js';\nimport { block, branch, destroy_effect } from '../../reactivity/effects.js';\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from '../hydration.js';\nimport { create_fragment_from_html } from '../reconciler.js';\nimport { assign_nodes } from '../template.js';\nimport * as w from '../../warnings.js';\nimport { hash, sanitize_location } from '../../../../utils.js';\nimport { DEV } from 'esm-env';\nimport { dev_current_component_function } from '../../context.js';\nimport { get_first_child, get_next_sibling } from '../operations.js';\n\n/**\n * @param {Element} element\n * @param {string | null} server_hash\n * @param {string} value\n */\nfunction check_hash(element, server_hash, value) {\n\tif (!server_hash || server_hash === hash(String(value ?? ''))) return;\n\n\tlet location;\n\n\t// @ts-expect-error\n\tconst loc = element.__svelte_meta?.loc;\n\tif (loc) {\n\t\tlocation = `near ${loc.file}:${loc.line}:${loc.column}`;\n\t} else if (dev_current_component_function?.[FILENAME]) {\n\t\tlocation = `in ${dev_current_component_function[FILENAME]}`;\n\t}\n\n\tw.hydration_html_changed(sanitize_location(location));\n}\n\n/**\n * @param {Element | Text | Comment} node\n * @param {() => string} get_value\n * @param {boolean} svg\n * @param {boolean} mathml\n * @param {boolean} [skip_warning]\n * @returns {void}\n */\nexport function html(node, get_value, svg, mathml, skip_warning) {\n\tvar anchor = node;\n\n\tvar value = '';\n\n\t/** @type {Effect | undefined} */\n\tvar effect;\n\n\tblock(() => {\n\t\tif (value === (value = get_value() ?? '')) {\n\t\t\tif (hydrating) {\n\t\t\t\thydrate_next();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (effect !== undefined) {\n\t\t\tdestroy_effect(effect);\n\t\t\teffect = undefined;\n\t\t}\n\n\t\tif (value === '') return;\n\n\t\teffect = branch(() => {\n\t\t\tif (hydrating) {\n\t\t\t\t// We're deliberately not trying to repair mismatches between server and client,\n\t\t\t\t// as it's costly and error-prone (and it's an edge case to have a mismatch anyway)\n\t\t\t\tvar hash = /** @type {Comment} */ (hydrate_node).data;\n\t\t\t\tvar next = hydrate_next();\n\t\t\t\tvar last = next;\n\n\t\t\t\twhile (\n\t\t\t\t\tnext !== null &&\n\t\t\t\t\t(next.nodeType !== 8 || /** @type {Comment} */ (next).data !== '')\n\t\t\t\t) {\n\t\t\t\t\tlast = next;\n\t\t\t\t\tnext = /** @type {TemplateNode} */ (get_next_sibling(next));\n\t\t\t\t}\n\n\t\t\t\tif (next === null) {\n\t\t\t\t\tw.hydration_mismatch();\n\t\t\t\t\tthrow HYDRATION_ERROR;\n\t\t\t\t}\n\n\t\t\t\tif (DEV && !skip_warning) {\n\t\t\t\t\tcheck_hash(/** @type {Element} */ (next.parentNode), hash, value);\n\t\t\t\t}\n\n\t\t\t\tassign_nodes(hydrate_node, last);\n\t\t\t\tanchor = set_hydrate_node(next);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar html = value + '';\n\t\t\tif (svg) html = `<svg>${html}</svg>`;\n\t\t\telse if (mathml) html = `<math>${html}</math>`;\n\n\t\t\t// Don't use create_fragment_with_script_from_html here because that would mean script tags are executed.\n\t\t\t// @html is basically `.innerHTML = ...` and that doesn't execute scripts either due to security reasons.\n\t\t\t/** @type {DocumentFragment | Element} */\n\t\t\tvar node = create_fragment_from_html(html);\n\n\t\t\tif (svg || mathml) {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(node));\n\t\t\t}\n\n\t\t\tassign_nodes(\n\t\t\t\t/** @type {TemplateNode} */ (get_first_child(node)),\n\t\t\t\t/** @type {TemplateNode} */ (node.lastChild)\n\t\t\t);\n\n\t\t\tif (svg || mathml) {\n\t\t\t\twhile (get_first_child(node)) {\n\t\t\t\t\tanchor.before(/** @type {Node} */ (get_first_child(node)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanchor.before(node);\n\t\t\t}\n\t\t});\n\t});\n}\n",
    "import { hydrate_next, hydrating } from '../hydration.js';\n\n/**\n * @param {Comment} anchor\n * @param {Record<string, any>} $$props\n * @param {string} name\n * @param {Record<string, unknown>} slot_props\n * @param {null | ((anchor: Comment) => void)} fallback_fn\n */\nexport function slot(anchor, $$props, name, slot_props, fallback_fn) {\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\tvar slot_fn = $$props.$$slots?.[name];\n\t// Interop: Can use snippets to fill slots\n\tvar is_interop = false;\n\tif (slot_fn === true) {\n\t\tslot_fn = $$props[name === 'default' ? 'children' : name];\n\t\tis_interop = true;\n\t}\n\n\tif (slot_fn === undefined) {\n\t\tif (fallback_fn !== null) {\n\t\t\tfallback_fn(anchor);\n\t\t}\n\t} else {\n\t\tslot_fn(anchor, is_interop ? () => slot_props : slot_props);\n\t}\n}\n\n/**\n * @param {Record<string, any>} props\n * @returns {Record<string, boolean>}\n */\nexport function sanitize_slots(props) {\n\t/** @type {Record<string, boolean>} */\n\tconst sanitized = {};\n\tif (props.children) sanitized.default = true;\n\tfor (const key in props.$$slots) {\n\t\tsanitized[key] = true;\n\t}\n\treturn sanitized;\n}\n",
    "function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;",
    "import { escape_html } from '../../escaping.js';\nimport { clsx as _clsx } from 'clsx';\n\n/**\n * `<div translate={false}>` should be rendered as `<div translate=\"no\">` and _not_\n * `<div translate=\"false\">`, which is equivalent to `<div translate=\"yes\">`. There\n * may be other odd cases that need to be added to this list in future\n * @type {Record<string, Map<any, string>>}\n */\nconst replacements = {\n\ttranslate: new Map([\n\t\t[true, 'yes'],\n\t\t[false, 'no']\n\t])\n};\n\n/**\n * @template V\n * @param {string} name\n * @param {V} value\n * @param {boolean} [is_boolean]\n * @returns {string}\n */\nexport function attr(name, value, is_boolean = false) {\n\tif (value == null || (!value && is_boolean)) return '';\n\tconst normalized = (name in replacements && replacements[name].get(value)) || value;\n\tconst assignment = is_boolean ? '' : `=\"${escape_html(normalized, true)}\"`;\n\treturn ` ${name}${assignment}`;\n}\n\n/**\n * Small wrapper around clsx to preserve Svelte's (weird) handling of falsy values.\n * TODO Svelte 6 revisit this, and likely turn all falsy values into the empty string (what clsx also does)\n * @param  {any} value\n */\nexport function clsx(value) {\n\tif (typeof value === 'object') {\n\t\treturn _clsx(value);\n\t} else {\n\t\treturn value ?? '';\n\t}\n}\n\nconst whitespace = [...' \\t\\n\\r\\f\\u00a0\\u000b\\ufeff'];\n\n/**\n * @param {any} value\n * @param {string | null} [hash]\n * @param {Record<string, boolean>} [directives]\n * @returns {string | null}\n */\nexport function to_class(value, hash, directives) {\n\tvar classname = value == null ? '' : '' + value;\n\n\tif (hash) {\n\t\tclassname = classname ? classname + ' ' + hash : hash;\n\t}\n\n\tif (directives) {\n\t\tfor (var key in directives) {\n\t\t\tif (directives[key]) {\n\t\t\t\tclassname = classname ? classname + ' ' + key : key;\n\t\t\t} else if (classname.length) {\n\t\t\t\tvar len = key.length;\n\t\t\t\tvar a = 0;\n\n\t\t\t\twhile ((a = classname.indexOf(key, a)) >= 0) {\n\t\t\t\t\tvar b = a + len;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(a === 0 || whitespace.includes(classname[a - 1])) &&\n\t\t\t\t\t\t(b === classname.length || whitespace.includes(classname[b]))\n\t\t\t\t\t) {\n\t\t\t\t\t\tclassname = (a === 0 ? '' : classname.substring(0, a)) + classname.substring(b + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ta = b;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn classname === '' ? null : classname;\n}\n\n/**\n *\n * @param {Record<string,any>} styles\n * @param {boolean} important\n */\nfunction append_styles(styles, important = false) {\n\tvar separator = important ? ' !important;' : ';';\n\tvar css = '';\n\n\tfor (var key in styles) {\n\t\tvar value = styles[key];\n\t\tif (value != null && value !== '') {\n\t\t\tcss += ' ' + key + ': ' + value + separator;\n\t\t}\n\t}\n\n\treturn css;\n}\n\n/**\n * @param {string} name\n * @returns {string}\n */\nfunction to_css_name(name) {\n\tif (name[0] !== '-' || name[1] !== '-') {\n\t\treturn name.toLowerCase();\n\t}\n\treturn name;\n}\n\n/**\n * @param {any} value\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [styles]\n * @returns {string | null}\n */\nexport function to_style(value, styles) {\n\tif (styles) {\n\t\tvar new_style = '';\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar normal_styles;\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar important_styles;\n\n\t\tif (Array.isArray(styles)) {\n\t\t\tnormal_styles = styles[0];\n\t\t\timportant_styles = styles[1];\n\t\t} else {\n\t\t\tnormal_styles = styles;\n\t\t}\n\n\t\tif (value) {\n\t\t\tvalue = String(value)\n\t\t\t\t.replaceAll(/\\s*\\/\\*.*?\\*\\/\\s*/g, '')\n\t\t\t\t.trim();\n\n\t\t\t/** @type {boolean | '\"' | \"'\"} */\n\t\t\tvar in_str = false;\n\t\t\tvar in_apo = 0;\n\t\t\tvar in_comment = false;\n\n\t\t\tvar reserved_names = [];\n\n\t\t\tif (normal_styles) {\n\t\t\t\treserved_names.push(...Object.keys(normal_styles).map(to_css_name));\n\t\t\t}\n\t\t\tif (important_styles) {\n\t\t\t\treserved_names.push(...Object.keys(important_styles).map(to_css_name));\n\t\t\t}\n\n\t\t\tvar start_index = 0;\n\t\t\tvar name_index = -1;\n\n\t\t\tconst len = value.length;\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar c = value[i];\n\n\t\t\t\tif (in_comment) {\n\t\t\t\t\tif (c === '/' && value[i - 1] === '*') {\n\t\t\t\t\t\tin_comment = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (in_str) {\n\t\t\t\t\tif (in_str === c) {\n\t\t\t\t\t\tin_str = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (c === '/' && value[i + 1] === '*') {\n\t\t\t\t\tin_comment = true;\n\t\t\t\t} else if (c === '\"' || c === \"'\") {\n\t\t\t\t\tin_str = c;\n\t\t\t\t} else if (c === '(') {\n\t\t\t\t\tin_apo++;\n\t\t\t\t} else if (c === ')') {\n\t\t\t\t\tin_apo--;\n\t\t\t\t}\n\n\t\t\t\tif (!in_comment && in_str === false && in_apo === 0) {\n\t\t\t\t\tif (c === ':' && name_index === -1) {\n\t\t\t\t\t\tname_index = i;\n\t\t\t\t\t} else if (c === ';' || i === len - 1) {\n\t\t\t\t\t\tif (name_index !== -1) {\n\t\t\t\t\t\t\tvar name = to_css_name(value.substring(start_index, name_index).trim());\n\n\t\t\t\t\t\t\tif (!reserved_names.includes(name)) {\n\t\t\t\t\t\t\t\tif (c !== ';') {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar property = value.substring(start_index, i).trim();\n\t\t\t\t\t\t\t\tnew_style += ' ' + property + ';';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart_index = i + 1;\n\t\t\t\t\t\tname_index = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (normal_styles) {\n\t\t\tnew_style += append_styles(normal_styles);\n\t\t}\n\n\t\tif (important_styles) {\n\t\t\tnew_style += append_styles(important_styles, true);\n\t\t}\n\n\t\tnew_style = new_style.trim();\n\t\treturn new_style === '' ? null : new_style;\n\t}\n\n\treturn value == null ? null : String(value);\n}\n",
    "import { to_class } from '../../../shared/attributes.js';\nimport { hydrating } from '../hydration.js';\n\n/**\n * @param {Element} dom\n * @param {boolean | number} is_html\n * @param {string | null} value\n * @param {string} [hash]\n * @param {Record<string, any>} [prev_classes]\n * @param {Record<string, any>} [next_classes]\n * @returns {Record<string, boolean> | undefined}\n */\nexport function set_class(dom, is_html, value, hash, prev_classes, next_classes) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev = dom.__className;\n\n\tif (\n\t\thydrating ||\n\t\tprev !== value ||\n\t\tprev === undefined // for edge case of `class={undefined}`\n\t) {\n\t\tvar next_class_name = to_class(value, hash, next_classes);\n\n\t\tif (!hydrating || next_class_name !== dom.getAttribute('class')) {\n\t\t\t// Removing the attribute when the value is only an empty string causes\n\t\t\t// performance issues vs simply making the className an empty string. So\n\t\t\t// we should only remove the class if the the value is nullish\n\t\t\t// and there no hash/directives :\n\t\t\tif (next_class_name == null) {\n\t\t\t\tdom.removeAttribute('class');\n\t\t\t} else if (is_html) {\n\t\t\t\tdom.className = next_class_name;\n\t\t\t} else {\n\t\t\t\tdom.setAttribute('class', next_class_name);\n\t\t\t}\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = value;\n\t} else if (next_classes && prev_classes !== next_classes) {\n\t\tfor (var key in next_classes) {\n\t\t\tvar is_present = !!next_classes[key];\n\n\t\t\tif (prev_classes == null || is_present !== !!prev_classes[key]) {\n\t\t\t\tdom.classList.toggle(key, is_present);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn next_classes;\n}\n",
    "import { to_style } from '../../../shared/attributes.js';\nimport { hydrating } from '../hydration.js';\n\n/**\n * @param {Element & ElementCSSInlineStyle} dom\n * @param {Record<string, any>} prev\n * @param {Record<string, any>} next\n * @param {string} [priority]\n */\nfunction update_styles(dom, prev = {}, next, priority) {\n\tfor (var key in next) {\n\t\tvar value = next[key];\n\n\t\tif (prev[key] !== value) {\n\t\t\tif (next[key] == null) {\n\t\t\t\tdom.style.removeProperty(key);\n\t\t\t} else {\n\t\t\t\tdom.style.setProperty(key, value, priority);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} dom\n * @param {string | null} value\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [prev_styles]\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [next_styles]\n */\nexport function set_style(dom, value, prev_styles, next_styles) {\n\t// @ts-expect-error\n\tvar prev = dom.__style;\n\n\tif (hydrating || prev !== value) {\n\t\tvar next_style_attr = to_style(value, next_styles);\n\n\t\tif (!hydrating || next_style_attr !== dom.getAttribute('style')) {\n\t\t\tif (next_style_attr == null) {\n\t\t\t\tdom.removeAttribute('style');\n\t\t\t} else {\n\t\t\t\tdom.style.cssText = next_style_attr;\n\t\t\t}\n\t\t}\n\n\t\t// @ts-expect-error\n\t\tdom.__style = value;\n\t} else if (next_styles) {\n\t\tif (Array.isArray(next_styles)) {\n\t\t\tupdate_styles(dom, prev_styles?.[0], next_styles[0]);\n\t\t\tupdate_styles(dom, prev_styles?.[1], next_styles[1], 'important');\n\t\t} else {\n\t\t\tupdate_styles(dom, prev_styles, next_styles);\n\t\t}\n\t}\n\n\treturn next_styles;\n}\n",
    "import { DEV } from 'esm-env';\nimport { hydrating, set_hydrating } from '../hydration.js';\nimport { get_descriptors, get_prototype_of } from '../../../shared/utils.js';\nimport { create_event, delegate } from './events.js';\nimport { add_form_reset_listener, autofocus } from './misc.js';\nimport * as w from '../../warnings.js';\nimport { LOADING_ATTR_SYMBOL } from '../../constants.js';\nimport { queue_idle_task } from '../task.js';\nimport { is_capture_event, is_delegated, normalize_attribute } from '../../../../utils.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { clsx } from '../../../shared/attributes.js';\nimport { set_class } from './class.js';\nimport { set_style } from './style.js';\nimport { NAMESPACE_HTML } from '../../../../constants.js';\n\nexport const CLASS = Symbol('class');\nexport const STYLE = Symbol('style');\n\nconst IS_CUSTOM_ELEMENT = Symbol('is custom element');\nconst IS_HTML = Symbol('is html');\n\n/**\n * The value/checked attribute in the template actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLInputElement} input\n * @returns {void}\n */\nexport function remove_input_defaults(input) {\n\tif (!hydrating) return;\n\n\tvar already_removed = false;\n\n\t// We try and remove the default attributes later, rather than sync during hydration.\n\t// Doing it sync during hydration has a negative impact on performance, but deferring the\n\t// work in an idle task alleviates this greatly. If a form reset event comes in before\n\t// the idle callback, then we ensure the input defaults are cleared just before.\n\tvar remove_defaults = () => {\n\t\tif (already_removed) return;\n\t\talready_removed = true;\n\n\t\t// Remove the attributes but preserve the values\n\t\tif (input.hasAttribute('value')) {\n\t\t\tvar value = input.value;\n\t\t\tset_attribute(input, 'value', null);\n\t\t\tinput.value = value;\n\t\t}\n\n\t\tif (input.hasAttribute('checked')) {\n\t\t\tvar checked = input.checked;\n\t\t\tset_attribute(input, 'checked', null);\n\t\t\tinput.checked = checked;\n\t\t}\n\t};\n\n\t// @ts-expect-error\n\tinput.__on_r = remove_defaults;\n\tqueue_idle_task(remove_defaults);\n\tadd_form_reset_listener();\n}\n\n/**\n * @param {Element} element\n * @param {any} value\n */\nexport function set_value(element, value) {\n\tvar attributes = get_attributes(element);\n\n\tif (\n\t\tattributes.value ===\n\t\t\t(attributes.value =\n\t\t\t\t// treat null and undefined the same for the initial value\n\t\t\t\tvalue ?? undefined) ||\n\t\t// @ts-expect-error\n\t\t// `progress` elements always need their value set when it's `0`\n\t\t(element.value === value && (value !== 0 || element.nodeName !== 'PROGRESS'))\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.value = value ?? '';\n}\n\n/**\n * @param {Element} element\n * @param {boolean} checked\n */\nexport function set_checked(element, checked) {\n\tvar attributes = get_attributes(element);\n\n\tif (\n\t\tattributes.checked ===\n\t\t(attributes.checked =\n\t\t\t// treat null and undefined the same for the initial value\n\t\t\tchecked ?? undefined)\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.checked = checked;\n}\n\n/**\n * Sets the `selected` attribute on an `option` element.\n * Not set through the property because that doesn't reflect to the DOM,\n * which means it wouldn't be taken into account when a form is reset.\n * @param {HTMLOptionElement} element\n * @param {boolean} selected\n */\nexport function set_selected(element, selected) {\n\tif (selected) {\n\t\t// The selected option could've changed via user selection, and\n\t\t// setting the value without this check would set it back.\n\t\tif (!element.hasAttribute('selected')) {\n\t\t\telement.setAttribute('selected', '');\n\t\t}\n\t} else {\n\t\telement.removeAttribute('selected');\n\t}\n}\n\n/**\n * Applies the default checked property without influencing the current checked property.\n * @param {HTMLInputElement} element\n * @param {boolean} checked\n */\nexport function set_default_checked(element, checked) {\n\tconst existing_value = element.checked;\n\telement.defaultChecked = checked;\n\telement.checked = existing_value;\n}\n\n/**\n * Applies the default value property without influencing the current value property.\n * @param {HTMLInputElement | HTMLTextAreaElement} element\n * @param {string} value\n */\nexport function set_default_value(element, value) {\n\tconst existing_value = element.value;\n\telement.defaultValue = value;\n\telement.value = existing_value;\n}\n\n/**\n * @param {Element} element\n * @param {string} attribute\n * @param {string | null} value\n * @param {boolean} [skip_warning]\n */\nexport function set_attribute(element, attribute, value, skip_warning) {\n\tvar attributes = get_attributes(element);\n\n\tif (hydrating) {\n\t\tattributes[attribute] = element.getAttribute(attribute);\n\n\t\tif (\n\t\t\tattribute === 'src' ||\n\t\t\tattribute === 'srcset' ||\n\t\t\t(attribute === 'href' && element.nodeName === 'LINK')\n\t\t) {\n\t\t\tif (!skip_warning) {\n\t\t\t\tcheck_src_in_dev_hydration(element, attribute, value ?? '');\n\t\t\t}\n\n\t\t\t// If we reset these attributes, they would result in another network request, which we want to avoid.\n\t\t\t// We assume they are the same between client and server as checking if they are equal is expensive\n\t\t\t// (we can't just compare the strings as they can be different between client and server but result in the\n\t\t\t// same url, so we would need to create hidden anchor elements to compare them)\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (attributes[attribute] === (attributes[attribute] = value)) return;\n\n\tif (attribute === 'loading') {\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = value;\n\t}\n\n\tif (value == null) {\n\t\telement.removeAttribute(attribute);\n\t} else if (typeof value !== 'string' && get_setters(element).includes(attribute)) {\n\t\t// @ts-ignore\n\t\telement[attribute] = value;\n\t} else {\n\t\telement.setAttribute(attribute, value);\n\t}\n}\n\n/**\n * @param {Element} dom\n * @param {string} attribute\n * @param {string} value\n */\nexport function set_xlink_attribute(dom, attribute, value) {\n\tdom.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @param {string} prop\n * @param {any} value\n */\nexport function set_custom_element_data(node, prop, value) {\n\t// We need to ensure that setting custom element props, which can\n\t// invoke lifecycle methods on other custom elements, does not also\n\t// associate those lifecycle methods with the current active reaction\n\t// or effect\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\n\t// If we're hydrating but the custom element is from Svelte, and it already scaffolded,\n\t// then it might run block logic in hydration mode, which we have to prevent.\n\tlet was_hydrating = hydrating;\n\tif (hydrating) {\n\t\tset_hydrating(false);\n\t}\n\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\tif (\n\t\t\t// `style` should use `set_attribute` rather than the setter\n\t\t\tprop !== 'style' &&\n\t\t\t// Don't compute setters for custom elements while they aren't registered yet,\n\t\t\t// because during their upgrade/instantiation they might add more setters.\n\t\t\t// Instead, fall back to a simple \"an object, then set as property\" heuristic.\n\t\t\t(setters_cache.has(node.nodeName) ||\n\t\t\t// customElements may not be available in browser extension contexts\n\t\t\t!customElements ||\n\t\t\tcustomElements.get(node.tagName.toLowerCase())\n\t\t\t\t? get_setters(node).includes(prop)\n\t\t\t\t: value && typeof value === 'object')\n\t\t) {\n\t\t\t// @ts-expect-error\n\t\t\tnode[prop] = value;\n\t\t} else {\n\t\t\t// We did getters etc checks already, stringify before passing to set_attribute\n\t\t\t// to ensure it doesn't invoke the same logic again, and potentially populating\n\t\t\t// the setters cache too early.\n\t\t\tset_attribute(node, prop, value == null ? value : String(value));\n\t\t}\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t\tif (was_hydrating) {\n\t\t\tset_hydrating(true);\n\t\t}\n\t}\n}\n\n/**\n * Spreads attributes onto a DOM element, taking into account the currently set attributes\n * @param {Element & ElementCSSInlineStyle} element\n * @param {Record<string | symbol, any> | undefined} prev\n * @param {Record<string | symbol, any>} next New attributes - this function mutates this object\n * @param {string} [css_hash]\n * @param {boolean} [skip_warning]\n * @returns {Record<string, any>}\n */\nexport function set_attributes(element, prev, next, css_hash, skip_warning = false) {\n\tvar attributes = get_attributes(element);\n\n\tvar is_custom_element = attributes[IS_CUSTOM_ELEMENT];\n\tvar preserve_attribute_case = !attributes[IS_HTML];\n\n\t// If we're hydrating but the custom element is from Svelte, and it already scaffolded,\n\t// then it might run block logic in hydration mode, which we have to prevent.\n\tlet is_hydrating_custom_element = hydrating && is_custom_element;\n\tif (is_hydrating_custom_element) {\n\t\tset_hydrating(false);\n\t}\n\n\tvar current = prev || {};\n\tvar is_option_element = element.tagName === 'OPTION';\n\n\tfor (var key in prev) {\n\t\tif (!(key in next)) {\n\t\t\tnext[key] = null;\n\t\t}\n\t}\n\n\tif (next.class) {\n\t\tnext.class = clsx(next.class);\n\t} else if (css_hash || next[CLASS]) {\n\t\tnext.class = null; /* force call to set_class() */\n\t}\n\n\tif (next[STYLE]) {\n\t\tnext.style ??= null; /* force call to set_style() */\n\t}\n\n\tvar setters = get_setters(element);\n\n\t// since key is captured we use const\n\tfor (const key in next) {\n\t\t// let instead of var because referenced in a closure\n\t\tlet value = next[key];\n\n\t\t// Up here because we want to do this for the initial value, too, even if it's undefined,\n\t\t// and this wouldn't be reached in case of undefined because of the equality check below\n\t\tif (is_option_element && key === 'value' && value == null) {\n\t\t\t// The <option> element is a special case because removing the value attribute means\n\t\t\t// the value is set to the text content of the option element, and setting the value\n\t\t\t// to null or undefined means the value is set to the string \"null\" or \"undefined\".\n\t\t\t// To align with how we handle this case in non-spread-scenarios, this logic is needed.\n\t\t\t// There's a super-edge-case bug here that is left in in favor of smaller code size:\n\t\t\t// Because of the \"set missing props to null\" logic above, we can't differentiate\n\t\t\t// between a missing value and an explicitly set value of null or undefined. That means\n\t\t\t// that once set, the value attribute of an <option> element can't be removed. This is\n\t\t\t// a very rare edge case, and removing the attribute altogether isn't possible either\n\t\t\t// for the <option value={undefined}> case, so we're not losing any functionality here.\n\t\t\t// @ts-ignore\n\t\t\telement.value = element.__value = '';\n\t\t\tcurrent[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (key === 'class') {\n\t\t\tvar is_html = element.namespaceURI === 'http://www.w3.org/1999/xhtml';\n\t\t\tset_class(element, is_html, value, css_hash, prev?.[CLASS], next[CLASS]);\n\t\t\tcurrent[key] = value;\n\t\t\tcurrent[CLASS] = next[CLASS];\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (key === 'style') {\n\t\t\tset_style(element, value, prev?.[STYLE], next[STYLE]);\n\t\t\tcurrent[key] = value;\n\t\t\tcurrent[STYLE] = next[STYLE];\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar prev_value = current[key];\n\t\tif (value === prev_value) continue;\n\n\t\tcurrent[key] = value;\n\n\t\tvar prefix = key[0] + key[1]; // this is faster than key.slice(0, 2)\n\t\tif (prefix === '$$') continue;\n\n\t\tif (prefix === 'on') {\n\t\t\t/** @type {{ capture?: true }} */\n\t\t\tconst opts = {};\n\t\t\tconst event_handle_key = '$$' + key;\n\t\t\tlet event_name = key.slice(2);\n\t\t\tvar delegated = is_delegated(event_name);\n\n\t\t\tif (is_capture_event(event_name)) {\n\t\t\t\tevent_name = event_name.slice(0, -7);\n\t\t\t\topts.capture = true;\n\t\t\t}\n\n\t\t\tif (!delegated && prev_value) {\n\t\t\t\t// Listening to same event but different handler -> our handle function below takes care of this\n\t\t\t\t// If we were to remove and add listeners in this case, it could happen that the event is \"swallowed\"\n\t\t\t\t// (the browser seems to not know yet that a new one exists now) and doesn't reach the handler\n\t\t\t\t// https://github.com/sveltejs/svelte/issues/11903\n\t\t\t\tif (value != null) continue;\n\n\t\t\t\telement.removeEventListener(event_name, current[event_handle_key], opts);\n\t\t\t\tcurrent[event_handle_key] = null;\n\t\t\t}\n\n\t\t\tif (value != null) {\n\t\t\t\tif (!delegated) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {any}\n\t\t\t\t\t * @param {Event} evt\n\t\t\t\t\t */\n\t\t\t\t\tfunction handle(evt) {\n\t\t\t\t\t\tcurrent[key].call(this, evt);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent[event_handle_key] = create_event(event_name, element, handle, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\telement[`__${event_name}`] = value;\n\t\t\t\t\tdelegate([event_name]);\n\t\t\t\t}\n\t\t\t} else if (delegated) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[`__${event_name}`] = undefined;\n\t\t\t}\n\t\t} else if (key === 'style') {\n\t\t\t// avoid using the setter\n\t\t\tset_attribute(element, key, value);\n\t\t} else if (key === 'autofocus') {\n\t\t\tautofocus(/** @type {HTMLElement} */ (element), Boolean(value));\n\t\t} else if (!is_custom_element && (key === '__value' || (key === 'value' && value != null))) {\n\t\t\t// @ts-ignore We're not running this for custom elements because __value is actually\n\t\t\t// how Lit stores the current value on the element, and messing with that would break things.\n\t\t\telement.value = element.__value = value;\n\t\t} else if (key === 'selected' && is_option_element) {\n\t\t\tset_selected(/** @type {HTMLOptionElement} */ (element), value);\n\t\t} else {\n\t\t\tvar name = key;\n\t\t\tif (!preserve_attribute_case) {\n\t\t\t\tname = normalize_attribute(name);\n\t\t\t}\n\n\t\t\tvar is_default = name === 'defaultValue' || name === 'defaultChecked';\n\n\t\t\tif (value == null && !is_custom_element && !is_default) {\n\t\t\t\tattributes[key] = null;\n\n\t\t\t\tif (name === 'value' || name === 'checked') {\n\t\t\t\t\t// removing value/checked also removes defaultValue/defaultChecked — preserve\n\t\t\t\t\tlet input = /** @type {HTMLInputElement} */ (element);\n\t\t\t\t\tconst use_default = prev === undefined;\n\t\t\t\t\tif (name === 'value') {\n\t\t\t\t\t\tlet previous = input.defaultValue;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultValue = previous;\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tinput.value = input.__value = use_default ? previous : null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet previous = input.defaultChecked;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultChecked = previous;\n\t\t\t\t\t\tinput.checked = use_default ? previous : false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telement.removeAttribute(key);\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tis_default ||\n\t\t\t\t(setters.includes(name) && (is_custom_element || typeof value !== 'string'))\n\t\t\t) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[name] = value;\n\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\tset_attribute(element, name, value, skip_warning);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (is_hydrating_custom_element) {\n\t\tset_hydrating(true);\n\t}\n\n\treturn current;\n}\n\n/**\n *\n * @param {Element} element\n */\nfunction get_attributes(element) {\n\treturn /** @type {Record<string | symbol, unknown>} **/ (\n\t\t// @ts-expect-error\n\t\telement.__attributes ??= {\n\t\t\t[IS_CUSTOM_ELEMENT]: element.nodeName.includes('-'),\n\t\t\t[IS_HTML]: element.namespaceURI === NAMESPACE_HTML\n\t\t}\n\t);\n}\n\n/** @type {Map<string, string[]>} */\nvar setters_cache = new Map();\n\n/** @param {Element} element */\nfunction get_setters(element) {\n\tvar setters = setters_cache.get(element.nodeName);\n\tif (setters) return setters;\n\tsetters_cache.set(element.nodeName, (setters = []));\n\n\tvar descriptors;\n\tvar proto = element; // In the case of custom elements there might be setters on the instance\n\tvar element_proto = Element.prototype;\n\n\t// Stop at Element, from there on there's only unnecessary setters we're not interested in\n\t// Do not use contructor.name here as that's unreliable in some browser environments\n\twhile (element_proto !== proto) {\n\t\tdescriptors = get_descriptors(proto);\n\n\t\tfor (var key in descriptors) {\n\t\t\tif (descriptors[key].set) {\n\t\t\t\tsetters.push(key);\n\t\t\t}\n\t\t}\n\n\t\tproto = get_prototype_of(proto);\n\t}\n\n\treturn setters;\n}\n\n/**\n * @param {any} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction check_src_in_dev_hydration(element, attribute, value) {\n\tif (!DEV) return;\n\tif (attribute === 'srcset' && srcset_url_equal(element, value)) return;\n\tif (src_url_equal(element.getAttribute(attribute) ?? '', value)) return;\n\n\tw.hydration_attribute_changed(\n\t\tattribute,\n\t\telement.outerHTML.replace(element.innerHTML, element.innerHTML && '...'),\n\t\tString(value)\n\t);\n}\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nfunction src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\treturn new URL(element_src, document.baseURI).href === new URL(url, document.baseURI).href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element\n * @param {string} srcset\n * @returns {boolean}\n */\nfunction srcset_url_equal(element, srcset) {\n\tvar element_urls = split_srcset(element.srcset);\n\tvar urls = split_srcset(srcset);\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n",
    "import { DEV } from 'esm-env';\nimport { render_effect, teardown } from '../../../reactivity/effects.js';\nimport { listen_to_event_and_reset_event } from './shared.js';\nimport * as e from '../../../errors.js';\nimport { is } from '../../../proxy.js';\nimport { queue_micro_task } from '../../task.js';\nimport { hydrating } from '../../hydration.js';\nimport { untrack } from '../../../runtime.js';\nimport { is_runes } from '../../../context.js';\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_value(input, get, set = get) {\n\tvar runes = is_runes();\n\n\tlisten_to_event_and_reset_event(input, 'input', (is_reset) => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\t/** @type {any} */\n\t\tvar value = is_reset ? input.defaultValue : input.value;\n\t\tvalue = is_numberlike_input(input) ? to_number(value) : value;\n\t\tset(value);\n\n\t\t// In runes mode, respect any validation in accessors (doesn't apply in legacy mode,\n\t\t// because we use mutable state which ensures the render effect always runs)\n\t\tif (runes && value !== (value = get())) {\n\t\t\tvar start = input.selectionStart;\n\t\t\tvar end = input.selectionEnd;\n\n\t\t\t// the value is coerced on assignment\n\t\t\tinput.value = value ?? '';\n\n\t\t\t// Restore selection\n\t\t\tif (end !== null) {\n\t\t\t\tinput.selectionStart = start;\n\t\t\t\tinput.selectionEnd = Math.min(end, input.value.length);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the updated value from the input instead.\n\t\t(hydrating && input.defaultValue !== input.value) ||\n\t\t// If defaultValue is set, then value == defaultValue\n\t\t// TODO Svelte 6: remove input.value check and set to empty string?\n\t\t(untrack(get) == null && input.value)\n\t) {\n\t\tset(is_numberlike_input(input) ? to_number(input.value) : input.value);\n\t}\n\n\trender_effect(() => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\tvar value = get();\n\n\t\tif (is_numberlike_input(input) && value === to_number(input.value)) {\n\t\t\t// handles 0 vs 00 case (see https://github.com/sveltejs/svelte/issues/9959)\n\t\t\treturn;\n\t\t}\n\n\t\tif (input.type === 'date' && !value && !input.value) {\n\t\t\t// Handles the case where a temporarily invalid date is set (while typing, for example with a leading 0 for the day)\n\t\t\t// and prevents this state from clearing the other parts of the date input (see https://github.com/sveltejs/svelte/issues/7897)\n\t\t\treturn;\n\t\t}\n\n\t\t// don't set the value of the input if it's the same to allow\n\t\t// minlength to work properly\n\t\tif (value !== input.value) {\n\t\t\t// @ts-expect-error the value is coerced on assignment\n\t\t\tinput.value = value ?? '';\n\t\t}\n\t});\n}\n\n/** @type {Set<HTMLInputElement[]>} */\nconst pending = new Set();\n\n/**\n * @param {HTMLInputElement[]} inputs\n * @param {null | [number]} group_index\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_group(inputs, group_index, input, get, set = get) {\n\tvar is_checkbox = input.getAttribute('type') === 'checkbox';\n\tvar binding_group = inputs;\n\n\t// needs to be let or related code isn't treeshaken out if it's always false\n\tlet hydration_mismatch = false;\n\n\tif (group_index !== null) {\n\t\tfor (var index of group_index) {\n\t\t\t// @ts-expect-error\n\t\t\tbinding_group = binding_group[index] ??= [];\n\t\t}\n\t}\n\n\tbinding_group.push(input);\n\n\tlisten_to_event_and_reset_event(\n\t\tinput,\n\t\t'change',\n\t\t() => {\n\t\t\t// @ts-ignore\n\t\t\tvar value = input.__value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t}\n\n\t\t\tset(value);\n\t\t},\n\t\t// TODO better default value handling\n\t\t() => set(is_checkbox ? [] : null)\n\t);\n\n\trender_effect(() => {\n\t\tvar value = get();\n\n\t\t// If we are hydrating and the value has since changed, then use the update value\n\t\t// from the input instead.\n\t\tif (hydrating && input.defaultChecked !== input.checked) {\n\t\t\thydration_mismatch = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (is_checkbox) {\n\t\t\tvalue = value || [];\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = value.includes(input.__value);\n\t\t} else {\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = is(input.__value, value);\n\t\t}\n\t});\n\n\tteardown(() => {\n\t\tvar index = binding_group.indexOf(input);\n\n\t\tif (index !== -1) {\n\t\t\tbinding_group.splice(index, 1);\n\t\t}\n\t});\n\n\tif (!pending.has(binding_group)) {\n\t\tpending.add(binding_group);\n\n\t\tqueue_micro_task(() => {\n\t\t\t// necessary to maintain binding group order in all insertion scenarios\n\t\t\tbinding_group.sort((a, b) => (a.compareDocumentPosition(b) === 4 ? -1 : 1));\n\t\t\tpending.delete(binding_group);\n\t\t});\n\t}\n\n\tqueue_micro_task(() => {\n\t\tif (hydration_mismatch) {\n\t\t\tvar value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t} else {\n\t\t\t\tvar hydration_input = binding_group.find((input) => input.checked);\n\t\t\t\t// @ts-ignore\n\t\t\t\tvalue = hydration_input?.__value;\n\t\t\t}\n\n\t\t\tset(value);\n\t\t}\n\t});\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_checked(input, get, set = get) {\n\tlisten_to_event_and_reset_event(input, 'change', (is_reset) => {\n\t\tvar value = is_reset ? input.defaultChecked : input.checked;\n\t\tset(value);\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the update value from the input instead.\n\t\t(hydrating && input.defaultChecked !== input.checked) ||\n\t\t// If defaultChecked is set, then checked == defaultChecked\n\t\tuntrack(get) == null\n\t) {\n\t\tset(input.checked);\n\t}\n\n\trender_effect(() => {\n\t\tvar value = get();\n\t\tinput.checked = Boolean(value);\n\t});\n}\n\n/**\n * @template V\n * @param {Array<HTMLInputElement>} group\n * @param {V} __value\n * @param {boolean} checked\n * @returns {V[]}\n */\nfunction get_binding_group_value(group, __value, checked) {\n\tvar value = new Set();\n\n\tfor (var i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) {\n\t\t\t// @ts-ignore\n\t\t\tvalue.add(group[i].__value);\n\t\t}\n\t}\n\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement} input\n */\nfunction is_numberlike_input(input) {\n\tvar type = input.type;\n\treturn type === 'number' || type === 'range';\n}\n\n/**\n * @param {string} value\n */\nfunction to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => FileList | null} get\n * @param {(value: FileList | null) => void} set\n */\nexport function bind_files(input, get, set = get) {\n\tlisten_to_event_and_reset_event(input, 'change', () => {\n\t\tset(input.files);\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the updated value from the input instead.\n\t\thydrating &&\n\t\tinput.files\n\t) {\n\t\tset(input.files);\n\t}\n\n\trender_effect(() => {\n\t\tinput.files = get();\n\t});\n}\n",
    "import { STATE_SYMBOL } from '../../../constants.js';\nimport { effect, render_effect } from '../../../reactivity/effects.js';\nimport { untrack } from '../../../runtime.js';\nimport { queue_micro_task } from '../../task.js';\n\n/**\n * @param {any} bound_value\n * @param {Element} element_or_component\n * @returns {boolean}\n */\nfunction is_bound_this(bound_value, element_or_component) {\n\treturn (\n\t\tbound_value === element_or_component || bound_value?.[STATE_SYMBOL] === element_or_component\n\t);\n}\n\n/**\n * @param {any} element_or_component\n * @param {(value: unknown, ...parts: unknown[]) => void} update\n * @param {(...parts: unknown[]) => unknown} get_value\n * @param {() => unknown[]} [get_parts] Set if the this binding is used inside an each block,\n * \t\t\t\t\t\t\t\t\t\treturns all the parts of the each block context that are used in the expression\n * @returns {void}\n */\nexport function bind_this(element_or_component = {}, update, get_value, get_parts) {\n\teffect(() => {\n\t\t/** @type {unknown[]} */\n\t\tvar old_parts;\n\n\t\t/** @type {unknown[]} */\n\t\tvar parts;\n\n\t\trender_effect(() => {\n\t\t\told_parts = parts;\n\t\t\t// We only track changes to the parts, not the value itself to avoid unnecessary reruns.\n\t\t\tparts = get_parts?.() || [];\n\n\t\t\tuntrack(() => {\n\t\t\t\tif (element_or_component !== get_value(...parts)) {\n\t\t\t\t\tupdate(element_or_component, ...parts);\n\t\t\t\t\t// If this is an effect rerun (cause: each block context changes), then nullfiy the binding at\n\t\t\t\t\t// the previous position if it isn't already taken over by a different effect.\n\t\t\t\t\tif (old_parts && is_bound_this(get_value(...old_parts), element_or_component)) {\n\t\t\t\t\t\tupdate(null, ...old_parts);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn () => {\n\t\t\t// We cannot use effects in the teardown phase, we we use a microtask instead.\n\t\t\tqueue_micro_task(() => {\n\t\t\t\tif (parts && is_bound_this(get_value(...parts), element_or_component)) {\n\t\t\t\t\tupdate(null, ...parts);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t});\n\n\treturn element_or_component;\n}\n",
    "/** @import { ActionReturn } from 'svelte/action' */\nimport { noop } from '../../../shared/utils.js';\nimport { user_pre_effect } from '../../reactivity/effects.js';\nimport { on } from '../elements/events.js';\n\n/**\n * Substitute for the `trusted` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function trusted(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\tif (event.isTrusted) {\n\t\t\t// @ts-ignore\n\t\t\tfn?.apply(this, args);\n\t\t}\n\t};\n}\n\n/**\n * Substitute for the `self` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function self(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\t// @ts-ignore\n\t\tif (event.target === this) {\n\t\t\t// @ts-ignore\n\t\t\tfn?.apply(this, args);\n\t\t}\n\t};\n}\n\n/**\n * Substitute for the `stopPropagation` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function stopPropagation(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn?.apply(this, args);\n\t};\n}\n\n/**\n * Substitute for the `once` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function once(fn) {\n\tvar ran = false;\n\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\n\t\t// @ts-ignore\n\t\treturn fn?.apply(this, args);\n\t};\n}\n\n/**\n * Substitute for the `stopImmediatePropagation` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function stopImmediatePropagation(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn?.apply(this, args);\n\t};\n}\n\n/**\n * Substitute for the `preventDefault` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function preventDefault(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn?.apply(this, args);\n\t};\n}\n\n/**\n * Substitute for the `passive` event modifier, implemented as an action\n * @deprecated\n * @param {HTMLElement} node\n * @param {[event: string, handler: () => EventListener]} options\n */\nexport function passive(node, [event, handler]) {\n\tuser_pre_effect(() => {\n\t\treturn on(node, event, handler() ?? noop, {\n\t\t\tpassive: true\n\t\t});\n\t});\n}\n\n/**\n * Substitute for the `nonpassive` event modifier, implemented as an action\n * @deprecated\n * @param {HTMLElement} node\n * @param {[event: string, handler: () => EventListener]} options\n */\nexport function nonpassive(node, [event, handler]) {\n\tuser_pre_effect(() => {\n\t\treturn on(node, event, handler() ?? noop, {\n\t\t\tpassive: false\n\t\t});\n\t});\n}\n",
    "import { effect, teardown } from '../../../reactivity/effects.js';\nimport { untrack } from '../../../runtime.js';\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n\t/** */\n\t#listeners = new WeakMap();\n\n\t/** @type {ResizeObserver | undefined} */\n\t#observer;\n\n\t/** @type {ResizeObserverOptions} */\n\t#options;\n\n\t/** @static */\n\tstatic entries = new WeakMap();\n\n\t/** @param {ResizeObserverOptions} options */\n\tconstructor(options) {\n\t\tthis.#options = options;\n\t}\n\n\t/**\n\t * @param {Element} element\n\t * @param {(entry: ResizeObserverEntry) => any} listener\n\t */\n\tobserve(element, listener) {\n\t\tvar listeners = this.#listeners.get(element) || new Set();\n\t\tlisteners.add(listener);\n\n\t\tthis.#listeners.set(element, listeners);\n\t\tthis.#getObserver().observe(element, this.#options);\n\n\t\treturn () => {\n\t\t\tvar listeners = this.#listeners.get(element);\n\t\t\tlisteners.delete(listener);\n\n\t\t\tif (listeners.size === 0) {\n\t\t\t\tthis.#listeners.delete(element);\n\t\t\t\t/** @type {ResizeObserver} */ (this.#observer).unobserve(element);\n\t\t\t}\n\t\t};\n\t}\n\n\t#getObserver() {\n\t\treturn (\n\t\t\tthis.#observer ??\n\t\t\t(this.#observer = new ResizeObserver(\n\t\t\t\t/** @param {any} entries */ (entries) => {\n\t\t\t\t\tfor (var entry of entries) {\n\t\t\t\t\t\tResizeObserverSingleton.entries.set(entry.target, entry);\n\t\t\t\t\t\tfor (var listener of this.#listeners.get(entry.target) || []) {\n\t\t\t\t\t\t\tlistener(entry);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t))\n\t\t);\n\t}\n}\n\nvar resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\n\nvar resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\n\nvar resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'device-pixel-content-box'\n});\n\n/**\n * @param {Element} element\n * @param {'contentRect' | 'contentBoxSize' | 'borderBoxSize' | 'devicePixelContentBoxSize'} type\n * @param {(entry: keyof ResizeObserverEntry) => void} set\n */\nexport function bind_resize_observer(element, type, set) {\n\tvar observer =\n\t\ttype === 'contentRect' || type === 'contentBoxSize'\n\t\t\t? resize_observer_content_box\n\t\t\t: type === 'borderBoxSize'\n\t\t\t\t? resize_observer_border_box\n\t\t\t\t: resize_observer_device_pixel_content_box;\n\n\tvar unsub = observer.observe(element, /** @param {any} entry */ (entry) => set(entry[type]));\n\tteardown(unsub);\n}\n\n/**\n * @param {HTMLElement} element\n * @param {'clientWidth' | 'clientHeight' | 'offsetWidth' | 'offsetHeight'} type\n * @param {(size: number) => void} set\n */\nexport function bind_element_size(element, type, set) {\n\tvar unsub = resize_observer_border_box.observe(element, () => set(element[type]));\n\n\teffect(() => {\n\t\t// The update could contain reads which should be ignored\n\t\tuntrack(() => set(element[type]));\n\t\treturn unsub;\n\t});\n}\n",
    "/** @import { StoreReferencesContainer } from '#client' */\n/** @import { Store } from '#shared' */\nimport { subscribe_to_store } from '../../../store/utils.js';\nimport { get as get_store } from '../../../store/shared/index.js';\nimport { define_property, noop } from '../../shared/utils.js';\nimport { get } from '../runtime.js';\nimport { teardown } from './effects.js';\nimport { mutable_source, set } from './sources.js';\n\n/**\n * Whether or not the prop currently being read is a store binding, as in\n * `<Child bind:x={$y} />`. If it is, we treat the prop as mutable even in\n * runes mode, and skip `binding_property_non_reactive` validation\n */\nlet is_store_binding = false;\n\nlet IS_UNMOUNTED = Symbol();\n\n/**\n * Gets the current value of a store. If the store isn't subscribed to yet, it will create a proxy\n * signal that will be updated when the store is. The store references container is needed to\n * track reassignments to stores and to track the correct component context.\n * @template V\n * @param {Store<V> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n * @returns {V}\n */\nexport function store_get(store, store_name, stores) {\n\tconst entry = (stores[store_name] ??= {\n\t\tstore: null,\n\t\tsource: mutable_source(undefined),\n\t\tunsubscribe: noop\n\t});\n\n\t// if the component that setup this is already unmounted we don't want to register a subscription\n\tif (entry.store !== store && !(IS_UNMOUNTED in stores)) {\n\t\tentry.unsubscribe();\n\t\tentry.store = store ?? null;\n\n\t\tif (store == null) {\n\t\t\tentry.source.v = undefined; // see synchronous callback comment below\n\t\t\tentry.unsubscribe = noop;\n\t\t} else {\n\t\t\tvar is_synchronous_callback = true;\n\n\t\t\tentry.unsubscribe = subscribe_to_store(store, (v) => {\n\t\t\t\tif (is_synchronous_callback) {\n\t\t\t\t\t// If the first updates to the store value (possibly multiple of them) are synchronously\n\t\t\t\t\t// inside a derived, we will hit the `state_unsafe_mutation` error if we `set` the value\n\t\t\t\t\tentry.source.v = v;\n\t\t\t\t} else {\n\t\t\t\t\tset(entry.source, v);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tis_synchronous_callback = false;\n\t\t}\n\t}\n\n\t// if the component that setup this stores is already unmounted the source will be out of sync\n\t// so we just use the `get` for the stores, less performant but it avoids to create a memory leak\n\t// and it will keep the value consistent\n\tif (store && IS_UNMOUNTED in stores) {\n\t\treturn get_store(store);\n\t}\n\n\treturn get(entry.source);\n}\n\n/**\n * Unsubscribe from a store if it's not the same as the one in the store references container.\n * We need this in addition to `store_get` because someone could unsubscribe from a store but\n * then never subscribe to the new one (if any), causing the subscription to stay open wrongfully.\n * @param {Store<any> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n */\nexport function store_unsub(store, store_name, stores) {\n\t/** @type {StoreReferencesContainer[''] | undefined} */\n\tlet entry = stores[store_name];\n\n\tif (entry && entry.store !== store) {\n\t\t// Don't reset store yet, so that store_get above can resubscribe to new store if necessary\n\t\tentry.unsubscribe();\n\t\tentry.unsubscribe = noop;\n\t}\n\n\treturn store;\n}\n\n/**\n * Sets the new value of a store and returns that value.\n * @template V\n * @param {Store<V>} store\n * @param {V} value\n * @returns {V}\n */\nexport function store_set(store, value) {\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * @param {StoreReferencesContainer} stores\n * @param {string} store_name\n */\nexport function invalidate_store(stores, store_name) {\n\tvar entry = stores[store_name];\n\tif (entry.store !== null) {\n\t\tstore_set(entry.store, entry.source.v);\n\t}\n}\n\n/**\n * Unsubscribes from all auto-subscribed stores on destroy\n * @returns {[StoreReferencesContainer, ()=>void]}\n */\nexport function setup_stores() {\n\t/** @type {StoreReferencesContainer} */\n\tconst stores = {};\n\n\tfunction cleanup() {\n\t\tteardown(() => {\n\t\t\tfor (var store_name in stores) {\n\t\t\t\tconst ref = stores[store_name];\n\t\t\t\tref.unsubscribe();\n\t\t\t}\n\t\t\tdefine_property(stores, IS_UNMOUNTED, {\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t});\n\t}\n\n\treturn [stores, cleanup];\n}\n\n/**\n * Updates a store with a new value.\n * @param {Store<V>} store  the store to update\n * @param {any} expression  the expression that mutates the store\n * @param {V} new_value  the new store value\n * @template V\n */\nexport function store_mutate(store, expression, new_value) {\n\tstore.set(new_value);\n\treturn expression;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_store(store, store_value, d = 1) {\n\tstore.set(store_value + d);\n\treturn store_value;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_store(store, store_value, d = 1) {\n\tconst value = store_value + d;\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * Called inside prop getters to communicate that the prop is a store binding\n */\nexport function mark_store_binding() {\n\tis_store_binding = true;\n}\n\n/**\n * Returns a tuple that indicates whether `fn()` reads a prop that is a store binding.\n * Used to prevent `binding_property_non_reactive` validation false positives and\n * ensure that these props are treated as mutable even in runes mode\n * @template T\n * @param {() => T} fn\n * @returns {[T, boolean]}\n */\nexport function capture_store_binding(fn) {\n\tvar previous_is_store_binding = is_store_binding;\n\n\ttry {\n\t\tis_store_binding = false;\n\t\treturn [fn(), is_store_binding];\n\t} finally {\n\t\tis_store_binding = previous_is_store_binding;\n\t}\n}\n",
    "/** @import { Derived, Source } from './types.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tPROPS_IS_BINDABLE,\n\tPROPS_IS_IMMUTABLE,\n\tPROPS_IS_LAZY_INITIAL,\n\tPROPS_IS_RUNES,\n\tPROPS_IS_UPDATED\n} from '../../../constants.js';\nimport { get_descriptor, is_function } from '../../shared/utils.js';\nimport { mutable_source, set, source, update } from './sources.js';\nimport { derived, derived_safe_equal } from './deriveds.js';\nimport { get, captured_signals, untrack } from '../runtime.js';\nimport { safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { LEGACY_DERIVED_PROP, LEGACY_PROPS, STATE_SYMBOL } from '../constants.js';\nimport { proxy } from '../proxy.js';\nimport { capture_store_binding } from './store.js';\nimport { legacy_mode_flag } from '../../flags/index.js';\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_prop(fn, d = 1) {\n\tconst value = fn();\n\tfn(value + d);\n\treturn value;\n}\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_prop(fn, d = 1) {\n\tconst value = fn() + d;\n\tfn(value);\n\treturn value;\n}\n\n/**\n * The proxy handler for rest props (i.e. `const { x, ...rest } = $props()`).\n * Is passed the full `$$props` object and excludes the named props.\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, name?: string }>}}\n */\nconst rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\treturn target.props[key];\n\t},\n\tset(target, key) {\n\t\tif (DEV) {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.props_rest_readonly(`${target.name}.${String(key)}`);\n\t\t}\n\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @param {string} [name]\n * @returns {Record<string, unknown>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function rest_props(props, exclude, name) {\n\treturn new Proxy(\n\t\tDEV ? { props, exclude, name, other: {}, to_proxy: [] } : { props, exclude },\n\t\trest_props_handler\n\t);\n}\n\n/**\n * The proxy handler for legacy $$restProps and $$props\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, special: Record<string | symbol, (v?: unknown) => unknown>, version: Source<number> }>}}\n */\nconst legacy_rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tget(target.version);\n\t\treturn key in target.special ? target.special[key]() : target.props[key];\n\t},\n\tset(target, key, value) {\n\t\tif (!(key in target.special)) {\n\t\t\t// Handle props that can temporarily get out of sync with the parent\n\t\t\t/** @type {Record<string, (v?: unknown) => unknown>} */\n\t\t\ttarget.special[key] = prop(\n\t\t\t\t{\n\t\t\t\t\tget [key]() {\n\t\t\t\t\t\treturn target.props[key];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/** @type {string} */ (key),\n\t\t\t\tPROPS_IS_UPDATED\n\t\t\t);\n\t\t}\n\n\t\ttarget.special[key](value);\n\t\tupdate(target.version); // $$props is coarse-grained: when $$props.x is updated, usages of $$props.y etc are also rerun\n\t\treturn true;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\tdeleteProperty(target, key) {\n\t\t// Svelte 4 allowed for deletions on $$restProps\n\t\tif (target.exclude.includes(key)) return true;\n\t\ttarget.exclude.push(key);\n\t\tupdate(target.version);\n\t\treturn true;\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @returns {Record<string, unknown>}\n */\nexport function legacy_rest_props(props, exclude) {\n\treturn new Proxy({ props, exclude, special: {}, version: source(0) }, legacy_rest_props_handler);\n}\n\n/**\n * The proxy handler for spread props. Handles the incoming array of props\n * that looks like `() => { dynamic: props }, { static: prop }, ..` and wraps\n * them so that the whole thing is passed to the component as the `$$props` argument.\n * @template {Record<string | symbol, unknown>} T\n * @type {ProxyHandler<{ props: Array<T | (() => T)> }>}}\n */\nconst spread_props_handler = {\n\tget(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) return p[key];\n\t\t}\n\t},\n\tset(target, key, value) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tconst desc = get_descriptor(p, key);\n\t\t\tif (desc && desc.set) {\n\t\t\t\tdesc.set(value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) {\n\t\t\t\tconst descriptor = get_descriptor(p, key);\n\t\t\t\tif (descriptor && !descriptor.configurable) {\n\t\t\t\t\t// Prevent a \"Non-configurability Report Error\": The target is an array, it does\n\t\t\t\t\t// not actually contain this property. If it is now described as non-configurable,\n\t\t\t\t\t// the proxy throws a validation error. Setting it to true avoids that.\n\t\t\t\t\tdescriptor.configurable = true;\n\t\t\t\t}\n\t\t\t\treturn descriptor;\n\t\t\t}\n\t\t}\n\t},\n\thas(target, key) {\n\t\t// To prevent a false positive `is_entry_props` in the `prop` function\n\t\tif (key === STATE_SYMBOL || key === LEGACY_PROPS) return false;\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (p != null && key in p) return true;\n\t\t}\n\n\t\treturn false;\n\t},\n\townKeys(target) {\n\t\t/** @type {Array<string | symbol>} */\n\t\tconst keys = [];\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tfor (const key in p) {\n\t\t\t\tif (!keys.includes(key)) keys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n};\n\n/**\n * @param {Array<Record<string, unknown> | (() => Record<string, unknown>)>} props\n * @returns {any}\n */\nexport function spread_props(...props) {\n\treturn new Proxy({ props }, spread_props_handler);\n}\n\n/**\n * @param {Derived} current_value\n * @returns {boolean}\n */\nfunction has_destroyed_component_ctx(current_value) {\n\treturn current_value.ctx?.d ?? false;\n}\n\n/**\n * This function is responsible for synchronizing a possibly bound prop with the inner component state.\n * It is used whenever the compiler sees that the component writes to the prop, or when it has a default prop_value.\n * @template V\n * @param {Record<string, unknown>} props\n * @param {string} key\n * @param {number} flags\n * @param {V | (() => V)} [fallback]\n * @returns {(() => V | ((arg: V) => V) | ((arg: V, mutation: boolean) => V))}\n */\nexport function prop(props, key, flags, fallback) {\n\tvar immutable = (flags & PROPS_IS_IMMUTABLE) !== 0;\n\tvar runes = !legacy_mode_flag || (flags & PROPS_IS_RUNES) !== 0;\n\tvar bindable = (flags & PROPS_IS_BINDABLE) !== 0;\n\tvar lazy = (flags & PROPS_IS_LAZY_INITIAL) !== 0;\n\tvar is_store_sub = false;\n\tvar prop_value;\n\n\tif (bindable) {\n\t\t[prop_value, is_store_sub] = capture_store_binding(() => /** @type {V} */ (props[key]));\n\t} else {\n\t\tprop_value = /** @type {V} */ (props[key]);\n\t}\n\n\t// Can be the case when someone does `mount(Component, props)` with `let props = $state({...})`\n\t// or `createClassComponent(Component, props)`\n\tvar is_entry_props = STATE_SYMBOL in props || LEGACY_PROPS in props;\n\n\tvar setter =\n\t\t(bindable &&\n\t\t\t(get_descriptor(props, key)?.set ??\n\t\t\t\t(is_entry_props && key in props && ((v) => (props[key] = v))))) ||\n\t\tundefined;\n\n\tvar fallback_value = /** @type {V} */ (fallback);\n\tvar fallback_dirty = true;\n\tvar fallback_used = false;\n\n\tvar get_fallback = () => {\n\t\tfallback_used = true;\n\t\tif (fallback_dirty) {\n\t\t\tfallback_dirty = false;\n\t\t\tif (lazy) {\n\t\t\t\tfallback_value = untrack(/** @type {() => V} */ (fallback));\n\t\t\t} else {\n\t\t\t\tfallback_value = /** @type {V} */ (fallback);\n\t\t\t}\n\t\t}\n\n\t\treturn fallback_value;\n\t};\n\n\tif (prop_value === undefined && fallback !== undefined) {\n\t\tif (setter && runes) {\n\t\t\te.props_invalid_value(key);\n\t\t}\n\n\t\tprop_value = get_fallback();\n\t\tif (setter) setter(prop_value);\n\t}\n\n\t/** @type {() => V} */\n\tvar getter;\n\tif (runes) {\n\t\tgetter = () => {\n\t\t\tvar value = /** @type {V} */ (props[key]);\n\t\t\tif (value === undefined) return get_fallback();\n\t\t\tfallback_dirty = true;\n\t\t\tfallback_used = false;\n\t\t\treturn value;\n\t\t};\n\t} else {\n\t\t// Svelte 4 did not trigger updates when a primitive value was updated to the same value.\n\t\t// Replicate that behavior through using a derived\n\t\tvar derived_getter = (immutable ? derived : derived_safe_equal)(\n\t\t\t() => /** @type {V} */ (props[key])\n\t\t);\n\t\tderived_getter.f |= LEGACY_DERIVED_PROP;\n\t\tgetter = () => {\n\t\t\tvar value = get(derived_getter);\n\t\t\tif (value !== undefined) fallback_value = /** @type {V} */ (undefined);\n\t\t\treturn value === undefined ? fallback_value : value;\n\t\t};\n\t}\n\n\t// easy mode — prop is never written to\n\tif ((flags & PROPS_IS_UPDATED) === 0) {\n\t\treturn getter;\n\t}\n\n\t// intermediate mode — prop is written to, but the parent component had\n\t// `bind:foo` which means we can just call `$$props.foo = value` directly\n\tif (setter) {\n\t\tvar legacy_parent = props.$$legacy;\n\t\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\t// We don't want to notify if the value was mutated and the parent is in runes mode.\n\t\t\t\t// In that case the state proxy (if it exists) should take care of the notification.\n\t\t\t\t// If the parent is not in runes mode, we need to notify on mutation, too, that the prop\n\t\t\t\t// has changed because the parent will not be able to detect the change otherwise.\n\t\t\t\tif (!runes || !mutation || legacy_parent || is_store_sub) {\n\t\t\t\t\t/** @type {Function} */ (setter)(mutation ? getter() : value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn getter();\n\t\t\t}\n\t\t};\n\t}\n\n\t// hard mode. this is where it gets ugly — the value in the child should\n\t// synchronize with the parent, but it should also be possible to temporarily\n\t// set the value to something else locally.\n\tvar from_child = false;\n\tvar was_from_child = false;\n\n\t// The derived returns the current value. The underlying mutable\n\t// source is written to from various places to persist this value.\n\tvar inner_current_value = mutable_source(prop_value);\n\tvar current_value = derived(() => {\n\t\tvar parent_value = getter();\n\t\tvar child_value = get(inner_current_value);\n\n\t\tif (from_child) {\n\t\t\tfrom_child = false;\n\t\t\twas_from_child = true;\n\t\t\treturn child_value;\n\t\t}\n\n\t\twas_from_child = false;\n\t\treturn (inner_current_value.v = parent_value);\n\t});\n\n\t// Ensure we eagerly capture the initial value if it's bindable\n\tif (bindable) {\n\t\tget(current_value);\n\t}\n\n\tif (!immutable) current_value.equals = safe_equals;\n\n\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t// legacy nonsense — need to ensure the source is invalidated when necessary\n\t\t// also needed for when handling inspect logic so we can inspect the correct source signal\n\t\tif (captured_signals !== null) {\n\t\t\t// set this so that we don't reset to the parent value if `d`\n\t\t\t// is invalidated because of `invalidate_inner_signals` (rather\n\t\t\t// than because the parent or child value changed)\n\t\t\tfrom_child = was_from_child;\n\t\t\t// invoke getters so that signals are picked up by `invalidate_inner_signals`\n\t\t\tgetter();\n\t\t\tget(inner_current_value);\n\t\t}\n\n\t\tif (arguments.length > 0) {\n\t\t\tconst new_value = mutation ? get(current_value) : runes && bindable ? proxy(value) : value;\n\n\t\t\tif (!current_value.equals(new_value)) {\n\t\t\t\tfrom_child = true;\n\t\t\t\tset(inner_current_value, new_value);\n\t\t\t\t// To ensure the fallback value is consistent when used with proxies, we\n\t\t\t\t// update the local fallback_value, but only if the fallback is actively used\n\t\t\t\tif (fallback_used && fallback_value !== undefined) {\n\t\t\t\t\tfallback_value = new_value;\n\t\t\t\t}\n\n\t\t\t\tif (has_destroyed_component_ctx(current_value)) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\n\t\t\t\tuntrack(() => get(current_value)); // force a synchronisation immediately\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\tif (has_destroyed_component_ctx(current_value)) {\n\t\t\treturn current_value.v;\n\t\t}\n\n\t\treturn get(current_value);\n\t};\n}\n",
    "/** @import { ComponentConstructorOptions, ComponentType, SvelteComponent, Component } from 'svelte' */\nimport { DIRTY, LEGACY_PROPS, MAYBE_DIRTY } from '../internal/client/constants.js';\nimport { user_pre_effect } from '../internal/client/reactivity/effects.js';\nimport { mutable_source, set } from '../internal/client/reactivity/sources.js';\nimport { hydrate, mount, unmount } from '../internal/client/render.js';\nimport { active_effect, flushSync, get, set_signal_status } from '../internal/client/runtime.js';\nimport { lifecycle_outside_component } from '../internal/shared/errors.js';\nimport { define_property, is_array } from '../internal/shared/utils.js';\nimport * as w from '../internal/client/warnings.js';\nimport { DEV } from 'esm-env';\nimport { FILENAME } from '../constants.js';\nimport { component_context, dev_current_component_function } from '../internal/client/context.js';\n\n/**\n * Takes the same options as a Svelte 4 component and the component function and returns a Svelte 4 compatible component.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {ComponentConstructorOptions<Props> & {\n * \tcomponent: ComponentType<SvelteComponent<Props, Events, Slots>> | Component<Props>;\n * }} options\n * @returns {SvelteComponent<Props, Events, Slots> & Exports}\n */\nexport function createClassComponent(options) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn new Svelte4Component(options);\n}\n\n/**\n * Takes the component function and returns a Svelte 4 compatible component constructor.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {SvelteComponent<Props, Events, Slots> | Component<Props>} component\n * @returns {ComponentType<SvelteComponent<Props, Events, Slots> & Exports>}\n */\nexport function asClassComponent(component) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn class extends Svelte4Component {\n\t\t/** @param {any} options */\n\t\tconstructor(options) {\n\t\t\tsuper({\n\t\t\t\tcomponent,\n\t\t\t\t...options\n\t\t\t});\n\t\t}\n\t};\n}\n\n/**\n * Support using the component as both a class and function during the transition period\n * @typedef  {{new (o: ComponentConstructorOptions): SvelteComponent;(...args: Parameters<Component<Record<string, any>>>): ReturnType<Component<Record<string, any>, Record<string, any>>>;}} LegacyComponentType\n */\n\nclass Svelte4Component {\n\t/** @type {any} */\n\t#events;\n\n\t/** @type {Record<string, any>} */\n\t#instance;\n\n\t/**\n\t * @param {ComponentConstructorOptions & {\n\t *  component: any;\n\t * }} options\n\t */\n\tconstructor(options) {\n\t\tvar sources = new Map();\n\n\t\t/**\n\t\t * @param {string | symbol} key\n\t\t * @param {unknown} value\n\t\t */\n\t\tvar add_source = (key, value) => {\n\t\t\tvar s = mutable_source(value);\n\t\t\tsources.set(key, s);\n\t\t\treturn s;\n\t\t};\n\n\t\t// Replicate coarse-grained props through a proxy that has a version source for\n\t\t// each property, which is incremented on updates to the property itself. Do not\n\t\t// use our $state proxy because that one has fine-grained reactivity.\n\t\tconst props = new Proxy(\n\t\t\t{ ...(options.props || {}), $$events: {} },\n\t\t\t{\n\t\t\t\tget(target, prop) {\n\t\t\t\t\treturn get(sources.get(prop) ?? add_source(prop, Reflect.get(target, prop)));\n\t\t\t\t},\n\t\t\t\thas(target, prop) {\n\t\t\t\t\t// Necessary to not throw \"invalid binding\" validation errors on the component side\n\t\t\t\t\tif (prop === LEGACY_PROPS) return true;\n\n\t\t\t\t\tget(sources.get(prop) ?? add_source(prop, Reflect.get(target, prop)));\n\t\t\t\t\treturn Reflect.has(target, prop);\n\t\t\t\t},\n\t\t\t\tset(target, prop, value) {\n\t\t\t\t\tset(sources.get(prop) ?? add_source(prop, value), value);\n\t\t\t\t\treturn Reflect.set(target, prop, value);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis.#instance = (options.hydrate ? hydrate : mount)(options.component, {\n\t\t\ttarget: options.target,\n\t\t\tanchor: options.anchor,\n\t\t\tprops,\n\t\t\tcontext: options.context,\n\t\t\tintro: options.intro ?? false,\n\t\t\trecover: options.recover\n\t\t});\n\n\t\t// We don't flushSync for custom element wrappers or if the user doesn't want it\n\t\tif (!options?.props?.$$host || options.sync === false) {\n\t\t\tflushSync();\n\t\t}\n\n\t\tthis.#events = props.$$events;\n\n\t\tfor (const key of Object.keys(this.#instance)) {\n\t\t\tif (key === '$set' || key === '$destroy' || key === '$on') continue;\n\t\t\tdefine_property(this, key, {\n\t\t\t\tget() {\n\t\t\t\t\treturn this.#instance[key];\n\t\t\t\t},\n\t\t\t\t/** @param {any} value */\n\t\t\t\tset(value) {\n\t\t\t\t\tthis.#instance[key] = value;\n\t\t\t\t},\n\t\t\t\tenumerable: true\n\t\t\t});\n\t\t}\n\n\t\tthis.#instance.$set = /** @param {Record<string, any>} next */ (next) => {\n\t\t\tObject.assign(props, next);\n\t\t};\n\n\t\tthis.#instance.$destroy = () => {\n\t\t\tunmount(this.#instance);\n\t\t};\n\t}\n\n\t/** @param {Record<string, any>} props */\n\t$set(props) {\n\t\tthis.#instance.$set(props);\n\t}\n\n\t/**\n\t * @param {string} event\n\t * @param {(...args: any[]) => any} callback\n\t * @returns {any}\n\t */\n\t$on(event, callback) {\n\t\tthis.#events[event] = this.#events[event] || [];\n\n\t\t/** @param {any[]} args */\n\t\tconst cb = (...args) => callback.call(this, ...args);\n\t\tthis.#events[event].push(cb);\n\t\treturn () => {\n\t\t\tthis.#events[event] = this.#events[event].filter(/** @param {any} fn */ (fn) => fn !== cb);\n\t\t};\n\t}\n\n\t$destroy() {\n\t\tthis.#instance.$destroy();\n\t}\n}\n\n/**\n * Runs the given function once immediately on the server, and works like `$effect.pre` on the client.\n *\n * @deprecated Use this only as a temporary solution to migrate your component code to Svelte 5.\n * @param {() => void | (() => void)} fn\n * @returns {void}\n */\nexport function run(fn) {\n\tuser_pre_effect(() => {\n\t\tfn();\n\t\tvar effect = /** @type {import('#client').Effect} */ (active_effect);\n\t\t// If the effect is immediately made dirty again, mark it as maybe dirty to emulate legacy behaviour\n\t\tif ((effect.f & DIRTY) !== 0) {\n\t\t\tlet filename = \"a file (we can't know which one)\";\n\t\t\tif (DEV) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tfilename = dev_current_component_function?.[FILENAME] ?? filename;\n\t\t\t}\n\t\t\tw.legacy_recursive_reactive_block(filename);\n\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t}\n\t});\n}\n\n/**\n * Function to mimic the multiple listeners available in svelte 4\n * @deprecated\n * @param {EventListener[]} handlers\n * @returns {EventListener}\n */\nexport function handlers(...handlers) {\n\treturn function (event) {\n\t\tconst { stopImmediatePropagation } = event;\n\t\tlet stopped = false;\n\n\t\tevent.stopImmediatePropagation = () => {\n\t\t\tstopped = true;\n\t\t\tstopImmediatePropagation.call(event);\n\t\t};\n\n\t\tconst errors = [];\n\n\t\tfor (const handler of handlers) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error `this` is not typed\n\t\t\t\thandler?.call(this, event);\n\t\t\t} catch (e) {\n\t\t\t\terrors.push(e);\n\t\t\t}\n\n\t\t\tif (stopped) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (let error of errors) {\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tthrow error;\n\t\t\t});\n\t\t}\n\t};\n}\n\n/**\n * Function to create a `bubble` function that mimic the behavior of `on:click` without handler available in svelte 4.\n * @deprecated Use this only as a temporary solution to migrate your automatically delegated events in Svelte 5.\n */\nexport function createBubbler() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createBubbler');\n\t}\n\n\treturn (/**@type {string}*/ type) => (/**@type {Event}*/ event) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\nexport {\n\tonce,\n\tpreventDefault,\n\tself,\n\tstopImmediatePropagation,\n\tstopPropagation,\n\ttrusted,\n\tpassive,\n\tnonpassive\n} from '../internal/client/dom/legacy/event-modifiers.js';\n",
    "import { createClassComponent } from '../../../../legacy/legacy-client.js';\nimport { destroy_effect, effect_root, render_effect } from '../../reactivity/effects.js';\nimport { append } from '../template.js';\nimport { define_property, get_descriptor, object_keys } from '../../../shared/utils.js';\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n\n/** @type {any} */\nlet SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** @type {any} The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** @type {Record<string, any>} Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, EventListenerOrEventListenerObject[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<EventListenerOrEventListenerObject, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\t\t/** @type {any} The managed render effect for reflecting attributes */\n\t\t$$me;\n\n\t\t/**\n\t\t * @param {*} $$componentCtor\n\t\t * @param {*} $$slots\n\t\t * @param {*} use_shadow_dom\n\t\t */\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {string} type\n\t\t * @param {EventListenerOrEventListenerObject} listener\n\t\t * @param {boolean | AddEventListenerOptions} [options]\n\t\t */\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\t/**\n\t\t * @param {string} type\n\t\t * @param {EventListenerOrEventListenerObject} listener\n\t\t * @param {boolean | AddEventListenerOptions} [options]\n\t\t */\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t/** @param {string} name */\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {Element} anchor\n\t\t\t\t\t */\n\t\t\t\t\treturn (anchor) => {\n\t\t\t\t\t\tconst slot = document.createElement('slot');\n\t\t\t\t\t\tif (name !== 'default') slot.name = name;\n\n\t\t\t\t\t\tappend(anchor, slot);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t/** @type {Record<string, any>} */\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\tif (name === 'default' && !this.$$d.children) {\n\t\t\t\t\t\t\tthis.$$d.children = create_slot(name);\n\t\t\t\t\t\t\t$$slots.default = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$$slots[name] = create_slot(name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = createClassComponent({\n\t\t\t\t\tcomponent: this.$$ctor,\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$host: this\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tthis.$$me = effect_root(() => {\n\t\t\t\t\trender_effect(() => {\n\t\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\t\tfor (const key of object_keys(this.$$c)) {\n\t\t\t\t\t\t\tif (!this.$$p_d[key]?.reflect) continue;\n\t\t\t\t\t\t\tthis.$$d[key] = this.$$c[key];\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.$$r = false;\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\n\t\t/**\n\t\t * @param {string} attr\n\t\t * @param {string} _oldValue\n\t\t * @param {string} newValue\n\t\t */\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$me();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @param {string} attribute_name\n\t\t */\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tobject_keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @param {HTMLElement} element\n */\nfunction get_custom_elements_slots(element) {\n\t/** @type {Record<string, true>} */\n\tconst result = {};\n\telement.childNodes.forEach((node) => {\n\t\tresult[/** @type {Element} node */ (node).slot || 'default'] = true;\n\t});\n\treturn result;\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {any} Component  A Svelte component function\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} exports  Explicitly exported values, other than props\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\texports,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn object_keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tobject_keys(props_definition).forEach((prop) => {\n\t\tdefine_property(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tvar component = this.$$c;\n\n\t\t\t\tif (component) {\n\t\t\t\t\t// // If the instance has an accessor, use that instead\n\t\t\t\t\tvar setter = get_descriptor(component, prop)?.get;\n\n\t\t\t\t\tif (setter) {\n\t\t\t\t\t\tcomponent[prop] = value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomponent.$set({ [prop]: value });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\texports.forEach((property) => {\n\t\tdefine_property(Class.prototype, property, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[property];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ Class;\n\treturn Class;\n}\n",
    "/** @import { ComponentContext, ComponentContextLegacy } from '#client' */\n/** @import { EventDispatcher } from './index.js' */\n/** @import { NotFunction } from './internal/types.js' */\nimport { untrack } from './internal/client/runtime.js';\nimport { is_array } from './internal/shared/utils.js';\nimport { user_effect } from './internal/client/index.js';\nimport * as e from './internal/client/errors.js';\nimport { lifecycle_outside_component } from './internal/shared/errors.js';\nimport { legacy_mode_flag } from './internal/flags/index.js';\nimport { component_context } from './internal/client/context.js';\nimport { DEV } from 'esm-env';\n\nif (DEV) {\n\t/**\n\t * @param {string} rune\n\t */\n\tfunction throw_rune_error(rune) {\n\t\tif (!(rune in globalThis)) {\n\t\t\t// TODO if people start adjusting the \"this can contain runes\" config through v-p-s more, adjust this message\n\t\t\t/** @type {any} */\n\t\t\tlet value; // let's hope noone modifies this global, but belts and braces\n\t\t\tObject.defineProperty(globalThis, rune, {\n\t\t\t\tconfigurable: true,\n\t\t\t\t// eslint-disable-next-line getter-return\n\t\t\t\tget: () => {\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\n\t\t\t\t\te.rune_outside_svelte(rune);\n\t\t\t\t},\n\t\t\t\tset: (v) => {\n\t\t\t\t\tvalue = v;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tthrow_rune_error('$state');\n\tthrow_rune_error('$effect');\n\tthrow_rune_error('$derived');\n\tthrow_rune_error('$inspect');\n\tthrow_rune_error('$props');\n\tthrow_rune_error('$bindable');\n}\n\n/**\n * `onMount`, like [`$effect`](https://svelte.dev/docs/svelte/$effect), schedules a function to run as soon as the component has been mounted to the DOM.\n * Unlike `$effect`, the provided function only runs once.\n *\n * It must be called during the component's initialisation (but doesn't need to live _inside_ the component;\n * it can be called from an external module). If a function is returned _synchronously_ from `onMount`,\n * it will be called when the component is unmounted.\n *\n * `onMount` functions do not run during [server-side rendering](https://svelte.dev/docs/svelte/svelte-server#render).\n *\n * @template T\n * @param {() => NotFunction<T> | Promise<NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onMount');\n\t}\n\n\tif (legacy_mode_flag && component_context.l !== null) {\n\t\tinit_update_callbacks(component_context).m.push(fn);\n\t} else {\n\t\tuser_effect(() => {\n\t\t\tconst cleanup = untrack(fn);\n\t\t\tif (typeof cleanup === 'function') return /** @type {() => void} */ (cleanup);\n\t\t});\n\t}\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onDestroy');\n\t}\n\n\tonMount(() => () => untrack(fn));\n}\n\n/**\n * @template [T=any]\n * @param {string} type\n * @param {T} [detail]\n * @param {any}params_0\n * @returns {CustomEvent<T>}\n */\nfunction create_custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs/svelte/legacy-on#Component-events).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * @deprecated Use callback props and/or the `$host()` rune instead — see [migration guide](https://svelte.dev/docs/svelte/v5-migration-guide#Event-changes-Component-events)\n * @template {Record<string, any>} [EventMap = any]\n * @returns {EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createEventDispatcher');\n\t}\n\n\treturn (type, detail, options) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = create_custom_event(/** @type {string} */ (type), detail, options);\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\n\t\treturn true;\n\t};\n}\n\n// TODO mark beforeUpdate and afterUpdate as deprecated in Svelte 6\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`.\n *\n * In runes mode use `$effect.pre` instead.\n *\n * @deprecated Use [`$effect.pre`](https://svelte.dev/docs/svelte/$effect#$effect.pre) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('beforeUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('beforeUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).b.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`.\n *\n * In runes mode use `$effect` instead.\n *\n * @deprecated Use [`$effect`](https://svelte.dev/docs/svelte/$effect) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('afterUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('afterUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).a.push(fn);\n}\n\n/**\n * Legacy-mode: Init callbacks object for onMount/beforeUpdate/afterUpdate\n * @param {ComponentContext} context\n */\nfunction init_update_callbacks(context) {\n\tvar l = /** @type {ComponentContextLegacy} */ (context).l;\n\treturn (l.u ??= { a: [], b: [], m: [] });\n}\n\nexport { flushSync } from './internal/client/runtime.js';\nexport { getContext, getAllContexts, hasContext, setContext } from './internal/client/context.js';\nexport { hydrate, mount, unmount } from './internal/client/render.js';\nexport { tick, untrack } from './internal/client/runtime.js';\nexport { createRawSnippet } from './internal/client/dom/blocks/snippet.js';\n"
  ],
  "mappings": "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",
  "debugId": "492014552895BA3C64756E2164756E21",
  "names": []
}