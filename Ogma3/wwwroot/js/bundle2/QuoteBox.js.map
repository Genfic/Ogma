{
  "version": 3,
  "sources": ["..\\..\\..\\FrontendCode\\typescript\\svelte-webcomponents\\QuoteBox.svelte"],
  "sourcesContent": [
    "import 'svelte/internal/disclose-version';\nimport * as $ from 'svelte/internal/client';\nimport { onMount } from 'svelte';\nimport { log } from '../src-helpers/logger'; // Assuming helper exists\nimport { GetApiQuotesRandom as getQuote } from '../generated/paths-public'; // Assuming API function exists\nimport Icon from './Icon.svelte'; // Assuming Icon.svelte exists\n\nvar root_1 = $.template(`<em class=\"body svelte-14y8kxxqo9cho\"> </em> <span class=\"author svelte-14y8kxxqo9cho\"> </span>`, 1);\nvar root_3 = $.template(`<span>Loading the quote...</span>`);\nvar root_4 = $.template(`<span>Could not load quote.</span>`);\nvar root = $.template(`<div class=\"quote-box svelte-14y8kxxqo9cho\"><div id=\"quote\" class=\"quote active-border svelte-14y8kxxqo9cho\"><div class=\"refresh svelte-14y8kxxqo9cho\"><!></div> <!></div></div>`);\n\nfunction QuoteBox($$anchor, $$props) {\n\t$.push($$props, true);\n\n\t// Reactive state\n\tlet loading = $.state(true);\n\tlet quote = $.state(null);\n\tlet canReload = $.state(true); // Controls the reload button availability/icon\n\t// Derived state for spinner icon and class\n\tlet spinnerIcon = $.derived(() => $.get(canReload) ? 'lucide:refresh-cw' : 'lucide:clock');\n\tlet spinnerClass = $.derived(() => $.get(loading) ? 'spin' : '');\n\n\tasync function loadQuote() {\n\t\t// Don't reload if in cooldown or already loading\n\t\tif (!$.get(canReload) || $.get(loading)) {\n\t\t\treturn;\n\t\t}\n\n\t\t$.set(loading, true);\n\n\t\ttry {\n\t\t\tconst response = await getQuote();\n\n\t\t\tif (response.ok) {\n\t\t\t\t$.set(quote, response.data, true);\n\n\t\t\t\t// Cache the quote in localStorage\n\t\t\t\ttry {\n\t\t\t\t\twindow.localStorage.setItem('quote', JSON.stringify($.get(quote)));\n\t\t\t\t} catch(e) {\n\t\t\t\t\tlog.warn('Could not save quote to localStorage', e);\n\t\t\t\t}\n\t\t\t} else if (response.status === 429) {\n\t\t\t\tlog.warn('Rate limit hit (429), attempting to load quote from localStorage.');\n\n\t\t\t\t// Attempt to load from localStorage on rate limit\n\t\t\t\ttry {\n\t\t\t\t\tconst storedQuote = window.localStorage.getItem('quote');\n\n\t\t\t\t\tif (storedQuote) {\n\t\t\t\t\t\t$.set(quote, JSON.parse(storedQuote), true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog.warn('No quote found in localStorage.');\n\n\t\t\t\t\t\t// Handle case where there's no fallback?\n\t\t\t\t\t\t$.set(\n\t\t\t\t\t\t\tquote,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tbody: 'Rate limited. Please try again later.',\n\t\t\t\t\t\t\t\tauthor: 'System'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t\tlog.error('Failed to parse quote from localStorage', e);\n\n\t\t\t\t\t$.set(\n\t\t\t\t\t\tquote,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbody: 'Error loading cached quote.',\n\t\t\t\t\t\t\tauthor: 'System'\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlog.error(`Failed to fetch quote: ${response.statusText}`);\n\n\t\t\t\t// Consider loading from cache here too, or showing an error state\n\t\t\t\t$.set(\n\t\t\t\t\tquote,\n\t\t\t\t\t{\n\t\t\t\t\t\tbody: 'Could not load quote.',\n\t\t\t\t\t\tauthor: 'System'\n\t\t\t\t\t},\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Handle cooldown based on Retry-After header (if present and valid)\n\t\t\tconst retryAfterHeader = response.headers?.get('retry-after');\n\t\t\tconst retryAfterSeconds = retryAfterHeader ? parseInt(retryAfterHeader, 10) : 60; // Default cooldown (e.g., 60s)\n\n\t\t\tif (!isNaN(retryAfterSeconds) && retryAfterSeconds > 0) {\n\t\t\t\t$.set(canReload, false);\n\n\t\t\t\tsetTimeout(\n\t\t\t\t\t() => {\n\t\t\t\t\t\t$.set(canReload, true);\n\t\t\t\t\t},\n\t\t\t\t\tretryAfterSeconds * 1000\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// If no valid Retry-After, enable reload immediately or after a default short delay\n\t\t\t\t$.set(canReload, true);\n\t\t\t}\n\t\t} catch(error) {\n\t\t\tlog.error('Error during quote fetch:', error);\n\n\t\t\t$.set(\n\t\t\t\tquote,\n\t\t\t\t{\n\t\t\t\t\tbody: 'An error occurred while fetching the quote.',\n\t\t\t\t\tauthor: 'System'\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t);\n\n\t\t\t$.set(canReload, true); // Allow retry on generic error\n\t\t} finally {\n\t\t\t$.set(loading, false);\n\t\t}\n\t}\n\n\tonMount(() => {\n\t\t// Attempt initial load from localStorage first, then fetch\n\t\ttry {\n\t\t\tconst storedQuote = window.localStorage.getItem('quote');\n\n\t\t\tif (storedQuote) {\n\t\t\t\t$.set(quote, JSON.parse(storedQuote), true);\n\t\t\t\t$.set(loading, false); // Assume cached quote is good enough initially\n\t\t\t} else {\n\t\t\t\t// No cached quote, fetch immediately\n\t\t\t\tloadQuote();\n\t\t\t}\n\t\t} catch(e) {\n\t\t\tlog.error('Failed to parse initial quote from localStorage', e);\n\t\t\t// Fetch if localStorage fails\n\t\t\tloadQuote();\n\t\t}\n\t});\n\n\tvar div = root();\n\tvar div_1 = $.child(div);\n\tvar div_2 = $.child(div_1);\n\tvar node = $.child(div_2);\n\n\tIcon(node, {\n\t\tget icon() {\n\t\t\treturn $.get(spinnerIcon);\n\t\t},\n\t\tget class() {\n\t\t\treturn `material-icons-outlined ${$.get(spinnerClass) ?? ''}`;\n\t\t}\n\t});\n\n\t$.reset(div_2);\n\n\tvar node_1 = $.sibling(div_2, 2);\n\n\t{\n\t\tvar consequent = ($$anchor) => {\n\t\t\tvar fragment = root_1();\n\t\t\tvar em = $.first_child(fragment);\n\t\t\tvar text = $.child(em, true);\n\n\t\t\t$.reset(em);\n\n\t\t\tvar span = $.sibling(em, 2);\n\t\t\tvar text_1 = $.child(span, true);\n\n\t\t\t$.reset(span);\n\n\t\t\t$.template_effect(() => {\n\t\t\t\t$.set_text(text, $.get(quote).body);\n\t\t\t\t$.set_text(text_1, $.get(quote).author);\n\t\t\t});\n\n\t\t\t$.append($$anchor, fragment);\n\t\t};\n\n\t\tvar alternate = ($$anchor, $$elseif) => {\n\t\t\t{\n\t\t\t\tvar consequent_1 = ($$anchor) => {\n\t\t\t\t\tvar span_1 = root_3();\n\n\t\t\t\t\t$.append($$anchor, span_1);\n\t\t\t\t};\n\n\t\t\t\tvar alternate_1 = ($$anchor) => {\n\t\t\t\t\tvar span_2 = root_4();\n\n\t\t\t\t\t$.append($$anchor, span_2);\n\t\t\t\t};\n\n\t\t\t\t$.if(\n\t\t\t\t\t$$anchor,\n\t\t\t\t\t($$render) => {\n\t\t\t\t\t\tif ($.get(loading)) $$render(consequent_1); else $$render(alternate_1, false);\n\t\t\t\t\t},\n\t\t\t\t\t$$elseif\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\t$.if(node_1, ($$render) => {\n\t\t\tif ($.get(quote)) $$render(consequent); else $$render(alternate, false);\n\t\t});\n\t}\n\n\t$.reset(div_1);\n\t$.reset(div);\n\t$.template_effect(() => $.set_attribute(div_2, 'title', $.get(canReload) ? 'Get new quote' : 'Please wait'));\n\t$.event('click', div_2, loadQuote);\n\t$.append($$anchor, div);\n\t$.pop();\n}\n\nif (import.meta.hot) {\n\tQuoteBox = $.hmr(QuoteBox, () => QuoteBox[$.HMR].source);\n\n\timport.meta.hot.accept((module) => {\n\t\t$.cleanup_styles('svelte-14y8kxxqo9cho');\n\t\tmodule.default[$.HMR].source = QuoteBox[$.HMR].source;\n\t\t$.set(QuoteBox[$.HMR].source, module.default[$.HMR].original);\n\t});\n}\n\nexport default QuoteBox;\n\nif (customElements.get('my-element') == null) customElements.define('my-element', $.create_custom_element(QuoteBox, {}, [], [], true));\nimport \"bun-svelte:QuoteBox.svelte-21dspbqv13oyk-style.css\";"
  ],
  "mappings": "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",
  "debugId": "521362E16A3573DB64756E2164756E21",
  "names": []
}