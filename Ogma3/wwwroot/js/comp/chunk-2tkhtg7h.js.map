{
  "version": 3,
  "sources": ["..\\..\\..\\FrontendCode\\typescript\\src-helpers\\dom.ts"],
  "sourcesContent": [
    "const parser = new DOMParser();\r\n\r\nexport const parseDom = (html: string): HTMLElement => {\r\n\treturn parser.parseFromString(html, \"text/html\").body.firstElementChild as HTMLElement;\r\n};\r\n\r\n/**\r\n * Finds the first following sibling element matching a CSS selector.\r\n * Searches forward only from the starting element.\r\n *\r\n * @param el The starting element.\r\n * @param selector The CSS selector to match siblings against.\r\n * @returns The first matching following sibling, or null if none is found.\r\n */\r\nexport const findNextSibling = (el: Element, selector: string): Element | null => {\r\n\tif (!el) return null; // Handle cases where the starting element doesn't exist\r\n\r\n\tlet currentSibling = el.nextElementSibling; // Start with the immediate next sibling\r\n\r\n\t// Loop through all following siblings\r\n\twhile (currentSibling) {\r\n\t\t// Check if the current sibling matches the selector\r\n\t\tif (currentSibling.matches(selector)) {\r\n\t\t\t// Found the matching sibling\r\n\t\t\treturn currentSibling;\r\n\t\t}\r\n\t\t// Move to the next sibling\r\n\t\tcurrentSibling = currentSibling.nextElementSibling;\r\n\t}\r\n\r\n\t// No matching sibling found after the starting element\r\n\treturn null;\r\n};\r\n"
  ],
  "mappings": "AAAA,IAAM,EAAS,IAAI,UAEN,EAAW,CAAC,IAA8B,CACtD,OAAO,EAAO,gBAAgB,EAAM,WAAW,EAAE,KAAK,mBAW1C,EAAkB,CAAC,EAAa,IAAqC,CACjF,IAAK,EAAI,OAAO,KAEhB,IAAI,EAAiB,EAAG,mBAGxB,MAAO,EAAgB,CAEtB,GAAI,EAAe,QAAQ,CAAQ,EAElC,OAAO,EAGR,EAAiB,EAAe,mBAIjC,OAAO",
  "debugId": "E94350F7B312A22864756E2164756E21",
  "names": []
}