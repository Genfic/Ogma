{
  "version": 3,
  "sources": ["..\\..\\..\\FrontendCode\\typescript\\src-solid\\block-user.tsx"],
  "sourcesContent": [
    "import { template as _$template } from \"solid-js/web\";\nimport { delegateEvents as _$delegateEvents } from \"solid-js/web\";\nimport { insert as _$insert } from \"solid-js/web\";\nimport { memo as _$memo } from \"solid-js/web\";\nvar _tmpl$ = /*#__PURE__*/_$template(`<button type=button>`);\nimport { PostApiUsersBlock as blockUser, DeleteApiUsersBlock as unblockUser } from \"@g/paths-public\";\nimport { log } from \"@h/logger\";\nimport { customElement, noShadowDOM } from \"solid-element\";\nimport { createSignal } from \"solid-js\";\nconst BlockUser = props => {\n  noShadowDOM();\n  const [isBlocked, setIsBlocked] = createSignal(props.isBlocked);\n  const block = async () => {\n    const send = isBlocked() ? unblockUser : blockUser;\n    const res = await send({\n      name: props.userName\n    }, {\n      RequestVerificationToken: props.csrf\n    });\n    if (res.ok) {\n      setIsBlocked(res.data);\n    } else {\n      log.warn(res.statusText);\n    }\n  };\n  return (() => {\n    var _el$ = _tmpl$();\n    _el$.$$click = block;\n    _$insert(_el$, () => isBlocked() ? \"Unblock\" : \"Block\");\n    return _el$;\n  })();\n};\ncustomElement(\"o-block\", {\n  userName: \"\",\n  csrf: \"\",\n  isBlocked: false\n}, BlockUser);\n_$delegateEvents([\"click\"]);"
  ],
  "mappings": "gNAIA,FAAI,JAAsB,JAAW,sBAAsB,EAKrD,EAAY,KAAS,CACzB,EAAY,EACZ,IAAO,EAAW,GAAgB,EAAa,EAAM,SAAS,EACxD,EAAQ,SAAY,CAExB,IAAM,EAAM,MADC,EAAU,EAAI,EAAc,GAClB,CACrB,KAAM,EAAM,QACd,EAAG,CACD,yBAA0B,EAAM,IAClC,CAAC,EACD,GAAI,EAAI,GACN,EAAa,EAAI,IAAI,EAErB,OAAI,KAAK,EAAI,UAAU,GAG3B,OAAQ,IAAM,CACZ,IAAI,EAAO,EAAO,EAGlB,OAFA,EAAK,QAAU,EACf,EAAS,EAAM,IAAM,EAAU,EAAI,UAAY,OAAO,EAC/C,IACN,GAEL,EAAc,UAAW,CACvB,SAAU,GACV,KAAM,GACN,UAAW,EACb,EAAG,CAAS,EACZ,EAAiB,CAAC,OAAO,CAAC",
  "debugId": "041A1857DDCC3E9764756E2164756E21",
  "names": []
}