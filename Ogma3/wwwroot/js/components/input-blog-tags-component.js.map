{
  "version": 3,
  "sources": ["..\\..\\FrontendCode\\typescript\\src-helpers\\logger.ts", "..\\..\\FrontendCode\\typescript\\src\\components\\input-blog-tags-component.js"],
  "sourcesContent": [
    "/**\r\n * Check if the given variable is an object\r\n * @param {any} obj Variable to check\r\n * @returns {boolean} True if the variable is an object, false if it's a primitive\r\n */\r\nfunction _isObject(obj: unknown): boolean {\r\n\treturn obj === Object(obj);\r\n}\r\n\r\n/**\r\n * Creates a deep copy of the object through parsing and serializing JSON\r\n */\r\nfunction _deepCopy(o: object): object {\r\n\treturn JSON.parse(JSON.stringify({ ...o, __isCopied__: true }));\r\n}\r\n\r\nconst _getMessage = (o: unknown) => (_isObject(o) ? _deepCopy(o as object) : o);\r\n\r\n/**\r\n * Logger object to create better logging experience\r\n */\r\nexport const log = {\r\n\tlog: (o: unknown) => console.log(_getMessage(o)),\r\n\tinfo: (o: unknown) => console.info(_getMessage(o)),\r\n\twarn: (o: unknown) => console.warn(_getMessage(o)),\r\n\terror: (o: unknown) => console.error(_getMessage(o)),\r\n\tdebug: (o: unknown) => console.debug(_getMessage(o)),\r\n};\r\n",
    "import { log } from \"../../src-helpers/logger\";\r\n\r\nVue.component(\"input-blog-tags\", {\r\n\tprops: {\r\n\t\tmax: {\r\n\t\t\ttype: Number,\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\tlabel: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\tvalue: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"\",\r\n\t\t},\r\n\t\tdesc: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: false,\r\n\t\t\tdefault: null,\r\n\t\t},\r\n\t\tvalidateMsg: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: null,\r\n\t\t},\r\n\t},\r\n\tdata: function () {\r\n\t\tlog.log(this.value);\r\n\t\treturn {\r\n\t\t\ttext: this.value,\r\n\t\t\tname: this.label.replace(/\\s+/g, \"\"),\r\n\t\t};\r\n\t},\r\n\tcomputed: {\r\n\t\tcountTags: function () {\r\n\t\t\treturn this.text ? this.text.split(\",\").length : 0;\r\n\t\t},\r\n\t\tvalidate: function () {\r\n\t\t\treturn this.text.split(\",\").length <= this.max;\r\n\t\t},\r\n\t\tvalidationString: function () {\r\n\t\t\treturn this.validateMsg.replace(\"{0}\", this.label).replace(\"{1}\", `${this.max}`);\r\n\t\t},\r\n\t},\r\n\ttemplate: `\r\n        <div class=\"o-form-group\">\r\n        <label :for=\"name\">{{ label.replace(/([A-Z])/g, \" $1\") }}</label>\r\n        <p class=\"desc\" v-if=\"desc\">{{ desc }}</p>\r\n        <input :name=\"name\"\r\n               :id=\"name\"\r\n               type=\"text\"\r\n               class=\"o-form-control active-border\"\r\n               v-model=\"text\">\r\n        <div class=\"counter\" :class=\"validate ? '' : 'invalid'\">\r\n            <div class=\"o-progress-bar\" :style=\"{ width: Math.min(100, 100 * (countTags / max)) + '%' }\"></div>\r\n            <span>{{ countTags }}/{{ max.toLocaleString() }}</span>\r\n        </div>\r\n        <span v-if=\"!validate && validateMsg\">{{ validationString }}</span>\r\n        </div>\r\n    `,\r\n});\r\n"
  ],
  "mappings": "AAKA,SAAS,CAAS,CAAC,EAAuB,CACzC,OAAO,IAAQ,OAAO,CAAG,EAM1B,SAAS,CAAS,CAAC,EAAmB,CACrC,OAAO,KAAK,MAAM,KAAK,UAAU,IAAK,EAAG,aAAc,EAAK,CAAC,CAAC,EAG/D,IAAM,EAAc,CAAC,IAAgB,EAAU,CAAC,EAAI,EAAU,CAAW,EAAI,EAKhE,EAAM,CAClB,IAAK,CAAC,IAAe,QAAQ,IAAI,EAAY,CAAC,CAAC,EAC/C,KAAM,CAAC,IAAe,QAAQ,KAAK,EAAY,CAAC,CAAC,EACjD,KAAM,CAAC,IAAe,QAAQ,KAAK,EAAY,CAAC,CAAC,EACjD,MAAO,CAAC,IAAe,QAAQ,MAAM,EAAY,CAAC,CAAC,EACnD,MAAO,CAAC,IAAe,QAAQ,MAAM,EAAY,CAAC,CAAC,CACpD,ECzBA,IAAI,UAAU,kBAAmB,CAChC,MAAO,CACN,IAAK,CACJ,KAAM,OACN,SAAU,EACX,EACA,MAAO,CACN,KAAM,OACN,SAAU,EACX,EACA,MAAO,CACN,KAAM,OACN,QAAS,EACV,EACA,KAAM,CACL,KAAM,OACN,SAAU,GACV,QAAS,IACV,EACA,YAAa,CACZ,KAAM,OACN,QAAS,IACV,CACD,EACA,KAAM,QAAS,EAAG,CAEjB,OADA,EAAI,IAAI,KAAK,KAAK,EACX,CACN,KAAM,KAAK,MACX,KAAM,KAAK,MAAM,QAAQ,OAAQ,EAAE,CACpC,GAED,SAAU,CACT,UAAW,QAAS,EAAG,CACtB,OAAO,KAAK,KAAO,KAAK,KAAK,MAAM,GAAG,EAAE,OAAS,GAElD,SAAU,QAAS,EAAG,CACrB,OAAO,KAAK,KAAK,MAAM,GAAG,EAAE,QAAU,KAAK,KAE5C,iBAAkB,QAAS,EAAG,CAC7B,OAAO,KAAK,YAAY,QAAQ,MAAO,KAAK,KAAK,EAAE,QAAQ,MAAO,GAAG,KAAK,KAAK,EAEjF,EACA,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBX,CAAC",
  "debugId": "5C2142F90E9C386064756E2164756E21",
  "names": []
}